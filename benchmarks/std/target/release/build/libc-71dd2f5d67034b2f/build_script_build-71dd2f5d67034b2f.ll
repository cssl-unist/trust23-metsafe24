; ModuleID = 'build_script_build.3sl56qhn-cgu.0'
source_filename = "build_script_build.3sl56qhn-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"std::ffi::OsStr" = type { [0 x i8], %"std::sys_common::os_str_bytes::Slice" }
%"std::sys_common::os_str_bytes::Slice" = type { [0 x i8], [0 x i8] }
%"std::ffi::OsString" = type { [0 x i64], %"std::sys_common::os_str_bytes::Buf", [0 x i64] }
%"std::sys_common::os_str_bytes::Buf" = type { [0 x i64], %"std::vec::Vec<u8>", [0 x i64] }
%"std::vec::Vec<u8>" = type { [0 x i64], { i8*, i64 }, [0 x i64], i64, [0 x i64] }
%"std::panic::Location" = type { [0 x i64], { [0 x i8]*, i64 }, [0 x i32], i32, [0 x i32], i32, [0 x i32] }
%"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>" = type { [0 x i64], {}*, [5 x i64] }
%"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>" = type { [0 x i64], %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], i64, [0 x i64] }
%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>" = type { [1 x i64], {}*, [1 x i64] }
%"std::option::Option<std::ffi::OsString>" = type { [0 x i64], {}*, [2 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" = type { [0 x i8], %"std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", [0 x i8], { i64, i64* }, [0 x i64], i64, [0 x i64] }
%"std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>" = type {}
%"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>::Some" = type { [0 x i64], { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, [0 x i64] }
%"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>" = type { [0 x i64], { i64*, i64 }, [0 x i64], i64, [0 x i64] }
%"std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>" = type { [0 x i64], %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", [0 x i64] }
%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some" = type { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>" = type { [0 x i64], i64*, [0 x i64], [11 x %"std::mem::MaybeUninit<std::ffi::OsString>"], [0 x i64], [11 x %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"], [0 x i16], i16, [0 x i16], i16, [2 x i16] }
%"std::mem::MaybeUninit<std::ffi::OsString>" = type { [3 x i64] }
%"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>" = type { [3 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>" = type { [0 x i8], %"std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", [0 x i8], { i64, i64* }, [0 x i64], i64, [0 x i64] }
%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>" = type { [1 x i64], {}*, [1 x i64] }
%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some" = type { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"[closure@std::rt::begin_panic<&str>::{closure#0}]" = type { [0 x i64], { [0 x i8]*, i64 }, [0 x i64], %"std::panic::Location"*, [0 x i64] }
%"std::result::Result<std::string::String, std::env::VarError>" = type { [0 x i64], i64, [3 x i64] }
%"std::process::Command" = type { [0 x i64], %"std::sys::unix::process::process_common::Command", [0 x i64] }
%"std::sys::unix::process::process_common::Command" = type { [0 x i64], { i8*, i64 }, [0 x i64], %"std::vec::Vec<std::ffi::CString>", [0 x i64], %"std::sys::unix::process::process_common::Argv", [0 x i64], %"std::sys_common::process::CommandEnv", [0 x i64], { i8*, i64 }, [0 x i64], %"std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>", [0 x i32], { i32, i32 }, [0 x i32], { i32, i32 }, [0 x i32], { i32, i32 }, [0 x i32], { i32, i32 }, [0 x i32], { i32, i32 }, [0 x i8], i8, [7 x i8] }
%"std::vec::Vec<std::ffi::CString>" = type { [0 x i64], { i64*, i64 }, [0 x i64], i64, [0 x i64] }
%"std::sys::unix::process::process_common::Argv" = type { [0 x i64], %"std::vec::Vec<*const i8>", [0 x i64] }
%"std::vec::Vec<*const i8>" = type { [0 x i64], { i64*, i64 }, [0 x i64], i64, [0 x i64] }
%"std::sys_common::process::CommandEnv" = type { [0 x i64], %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", [0 x i8], i8, [0 x i8], i8, [6 x i8] }
%"std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>" = type { [0 x i64], { i64*, i64 }, [0 x i64], i64, [0 x i64] }
%"std::fmt::Formatter" = type { [0 x i64], { i64, i64 }, [0 x i64], { i64, i64 }, [0 x i64], { {}*, [3 x i64]* }, [0 x i32], i32, [0 x i32], i32, [0 x i8], i8, [7 x i8] }
%"std::alloc::Global" = type {}
%"core::fmt::Opaque" = type {}
%"std::fmt::Arguments" = type { [0 x i64], { [0 x { [0 x i8]*, i64 }]*, i64 }, [0 x i64], { i64*, i64 }, [0 x i64], { [0 x { i8*, i64* }]*, i64 }, [0 x i64] }
%"std::mem::ManuallyDrop<alloc::collections::btree::mem::replace::PanicGuard>" = type { [0 x i8], %"alloc::collections::btree::mem::replace::PanicGuard", [0 x i8] }
%"alloc::collections::btree::mem::replace::PanicGuard" = type {}
%"std::string::FromUtf8Error" = type { [0 x i64], %"std::vec::Vec<u8>", [0 x i64], %"std::str::Utf8Error", [0 x i64] }
%"std::str::Utf8Error" = type { [0 x i64], i64, [0 x i8], { i8, i8 }, [6 x i8] }
%"std::option::Option<std::string::String>" = type { [0 x i64], {}*, [2 x i64] }
%"std::option::Option<std::string::String>::Some" = type { [0 x i64], %"std::string::String", [0 x i64] }
%"std::string::String" = type { [0 x i64], %"std::vec::Vec<u8>", [0 x i64] }
%"std::sys::unix::process::process_common::Stdio::Fd" = type { [1 x i32], i32, [0 x i32] }
%"std::io::Error" = type { [0 x i64], %"std::io::error::Repr", [0 x i64] }
%"std::io::error::Repr" = type { [0 x i8], i8, [15 x i8] }
%"std::io::error::Custom" = type { [0 x i64], { {}*, [3 x i64]* }, [0 x i8], i8, [7 x i8] }
%"std::option::Option<std::process::Output>" = type { [0 x i64], {}*, [6 x i64] }
%"std::option::Option<std::process::Output>::Some" = type { [0 x i64], %"std::process::Output", [0 x i64] }
%"std::process::Output" = type { [0 x i64], %"std::vec::Vec<u8>", [0 x i64], %"std::vec::Vec<u8>", [0 x i32], i32, [1 x i32] }
%"std::result::Result<std::process::Output, std::io::Error>" = type { [0 x i64], i64, [7 x i64] }
%"std::result::Result<std::process::Output, std::io::Error>::Ok" = type { [1 x i64], %"std::process::Output", [0 x i64] }
%"std::result::Result<std::process::Output, std::io::Error>::Err" = type { [1 x i64], %"std::io::Error", [0 x i64] }
%"std::result::Result<std::string::String, std::env::VarError>::Ok" = type { [1 x i64], %"std::string::String", [0 x i64] }
%"std::result::Result<std::string::String, std::env::VarError>::Err" = type { [1 x i64], %"std::env::VarError", [0 x i64] }
%"std::env::VarError" = type { [0 x i64], {}*, [2 x i64] }
%"std::env::VarError::NotUnicode" = type { [0 x i64], %"std::ffi::OsString", [0 x i64] }
%"std::result::Result<std::string::String, std::string::FromUtf8Error>" = type { [0 x i64], i64, [5 x i64] }
%"std::result::Result<std::string::String, std::string::FromUtf8Error>::Ok" = type { [1 x i64], %"std::string::String", [0 x i64] }
%"std::result::Result<std::string::String, std::string::FromUtf8Error>::Err" = type { [1 x i64], %"std::string::FromUtf8Error", [0 x i64] }
%"std::option::Option<std::ffi::OsString>::Some" = type { [0 x i64], %"std::ffi::OsString", [0 x i64] }
%"std::io::error::Repr::Custom" = type { [1 x i64], %"std::io::error::Custom"*, [0 x i64] }
%"std::ptr::Repr<u8>" = type { [2 x i64] }
%"std::ptr::Repr<std::ffi::CString>" = type { [2 x i64] }
%"std::ptr::Repr<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>" = type { [2 x i64] }
%"std::ptr::Repr<*const i8>" = type { [2 x i64] }
%"std::mem::MaybeUninit<std::ptr::swap_nonoverlapping_bytes::UnalignedBlock>" = type { [4 x i64] }
%"std::ptr::swap_nonoverlapping_bytes::UnalignedBlock" = type { [0 x i64], i64, [0 x i64], i64, [0 x i64], i64, [0 x i64], i64, [0 x i64] }
%"std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>" = type { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>" = type { [3 x i64] }
%"std::mem::ManuallyDrop<std::ffi::OsString>" = type { [0 x i64], %"std::ffi::OsString", [0 x i64] }
%"std::mem::MaybeUninit<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>" = type { [3 x i64] }
%"std::mem::MaybeUninit<std::alloc::Global>" = type { [0 x i8] }
%"std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>" = type { [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }
%"std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>>" = type { [0 x i64], %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }
%"std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>>" = type { [3 x i64] }
%"std::marker::PhantomData<u8>" = type {}
%"alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>" = type { [0 x i64], %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", [0 x i64], [12 x i8*], [0 x i64] }
%"std::result::Result<u32, std::num::ParseIntError>" = type { [0 x i8], i8, [7 x i8] }
%"std::str::Split<char>" = type { [0 x i64], %"core::str::iter::SplitInternal<char>", [0 x i64] }
%"core::str::iter::SplitInternal<char>" = type { [0 x i64], i64, [0 x i64], i64, [0 x i64], %"std::str::pattern::CharSearcher", [0 x i8], i8, [0 x i8], i8, [6 x i8] }
%"std::str::pattern::CharSearcher" = type { [0 x i64], { [0 x i8]*, i64 }, [0 x i64], i64, [0 x i64], i64, [0 x i64], i64, [0 x i32], i32, [0 x i8], [4 x i8], [0 x i8] }
%"std::option::Option<(usize, usize)>" = type { [0 x i64], i64, [2 x i64] }
%"std::option::Option<(usize, usize)>::Some" = type { [1 x i64], { i64, i64 }, [0 x i64] }
%"std::ops::RangeFull" = type {}
%"std::option::Option<usize>::Some" = type { [1 x i64], i64, [0 x i64] }
%"std::result::Result<&str, usize>" = type { [0 x i64], i64, [2 x i64] }
%"std::result::Result<(), usize>::Ok" = type { [8 x i8], {}, [0 x i8] }
%"std::result::Result<&str, usize>::Ok" = type { [1 x i64], { [0 x i8]*, i64 }, [0 x i64] }
%"std::result::Result<&str, usize>::Err" = type { [1 x i64], i64, [0 x i64] }
%"std::marker::PhantomData<&u8>" = type {}
%"std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>::Err" = type { [0 x i8], %"std::alloc::AllocError", [0 x i8] }
%"std::alloc::AllocError" = type {}
%"std::result::Result<&[u8], std::option::NoneError>::Err" = type { [0 x i8], %"std::option::NoneError", [0 x i8] }
%"std::option::NoneError" = type {}
%"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>" = type { [0 x i64], i64, [3 x i64] }
%"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Err" = type { [1 x i64], { i64, i64* }, [0 x i64] }
%"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"std::result::Result<(), std::option::NoneError>::Err" = type { [1 x i8], %"std::option::NoneError", [0 x i8] }
%"std::result::Result<(), std::option::NoneError>::Ok" = type { [1 x i8], {}, [0 x i8] }
%"std::option::Option<()>::Some" = type { [1 x i8], {}, [0 x i8] }
%"std::result::Result<u32, std::num::ParseIntError>::Ok" = type { [1 x i32], i32, [0 x i32] }
%"std::option::Option<u32>::Some" = type { [1 x i32], i32, [0 x i32] }
%"std::result::Result<&str, std::str::Utf8Error>" = type { [0 x i64], i64, [2 x i64] }
%"std::result::Result<&str, std::str::Utf8Error>::Ok" = type { [1 x i64], { [0 x i8]*, i64 }, [0 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" = type { [0 x i8], %"std::marker::PhantomData<alloc::collections::btree::node::marker::KV>", [0 x i8], { i64, i64* }, [0 x i64], i64, [0 x i64] }
%"std::marker::PhantomData<alloc::collections::btree::node::marker::KV>" = type {}
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" = type { [0 x i8], %"std::marker::PhantomData<alloc::collections::btree::node::marker::KV>", [0 x i8], { i64, i64* }, [0 x i64], i64, [0 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>" = type { [0 x i8], %"std::marker::PhantomData<alloc::collections::btree::node::marker::KV>", [0 x i8], { i64, i64* }, [0 x i64], i64, [0 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>" = type { [0 x i8], %"std::marker::PhantomData<alloc::collections::btree::node::marker::KV>", [0 x i8], { i64, i64* }, [0 x i64], i64, [0 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>" = type { [0 x i8], %"std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", [0 x i8], { i64, i64* }, [0 x i64], i64, [0 x i64] }
%"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>" = type { [0 x i64], i64, [3 x i64] }
%"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", [0 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>" = type { [0 x i64], i64, [3 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>" = type { [0 x i64], i64, [2 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal" = type { [1 x i64], { i64, i64* }, [0 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", [0 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf" = type { [1 x i64], { i64, i64* }, [0 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", [0 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>" = type { [0 x i64], i64, [3 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>" = type {}
%"std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::LeafOrInternal)>" = type {}
%"std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>" = type {}
%"std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Leaf)>" = type {}
%"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::next_unchecked::{closure#0}]" = type {}
%"std::result::Result<&str, std::str::Utf8Error>::Err" = type { [1 x i64], %"std::str::Utf8Error", [0 x i64] }
%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>" = type { [0 x i64], {}*, [2 x i64] }
%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some" = type { [0 x i64], { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }, [0 x i64] }
%"std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>::Err" = type { [0 x i8], %"std::alloc::AllocError", [0 x i8] }
%"std::result::Result<(), usize>::Err" = type { [1 x i64], i64, [0 x i64] }
%"std::marker::PhantomData<dyn std::any::Any + std::marker::Send>" = type {}
%"std::option::Option<i32>::Some" = type { [1 x i32], i32, [0 x i32] }
%"[closure@/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.106/build.rs:116:14: 116:72]" = type {}
%"unwind::libunwind::_Unwind_Exception" = type { [0 x i64], i64, [0 x i64], void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [0 x i64], [6 x i64], [0 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@METASAFE_TYPE_ID = external thread_local global i64
@alloc165 = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/home/martin/projects/metasafe/trust-sec23/rust/library/alloc/src/collections/btree/map.rs" }>, align 1
@alloc166 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc165, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00v\05\00\00/\00\00\00" }>, align 8
@vtable.0 = private unnamed_addr constant { void (i64**)*, i64, i64, i32 (i64**)*, i32 (i64**)*, i32 (i64**)* } { void (i64**)* @_ZN4core3ptr13drop_in_place17h8eabf9d941115d8bE, i64 8, i64 8, i32 (i64**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hd348c98e2a8984ebE", i32 (i64**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hd348c98e2a8984ebE", i32 (i64**)* @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h6057d75396c583c5E" }, align 8
@vtable.1 = private unnamed_addr constant { void ({ i8*, i64 }*)*, i64, i64, { {}*, [3 x i64]* } ({ i8*, i64 }*)*, { {}*, [3 x i64]* } ({ i8*, i64 }*)* } { void ({ i8*, i64 }*)* @_ZN4core3ptr13drop_in_place17hd86f672610b7d593E, i64 16, i64 8, { {}*, [3 x i64]* } ({ i8*, i64 }*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h88b845e064888980E", { {}*, [3 x i64]* } ({ i8*, i64 }*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17hac03ddf3b553bbf4E" }, align 8
@alloc188 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/home/martin/projects/metasafe/trust-sec23/rust/library/core/src/char/methods.rs" }>, align 1
@alloc185 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc188, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\009\06\00\00\16\00\00\00" }>, align 8
@alloc187 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc188, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00S\06\00\00\0A\00\00\00" }>, align 8
@alloc125 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"encode_utf8: need " }>, align 1
@alloc127 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c" bytes to encode U+" }>, align 1
@alloc128 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c", but the buffer has " }>, align 1
@alloc126 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc125, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc127, i32 0, i32 0, i32 0), [8 x i8] c"\13\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc128, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc189 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc188, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00L\06\00\00\0E\00\00\00" }>, align 8
@alloc190 = private unnamed_addr constant <{ [77 x i8] }> <{ [77 x i8] c"/home/martin/projects/metasafe/trust-sec23/rust/library/core/src/slice/mod.rs" }>, align 1
@alloc191 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc190, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00\C9\06\00\00'\00\00\00" }>, align 8
@alloc194 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Option::unwrap()` on a `None` value" }>, align 1
@alloc91 = private unnamed_addr constant <{ [0 x i8] }> zeroinitializer, align 8
@alloc112 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"internal error: entered unreachable code: " }>, align 1
@alloc113 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [42 x i8] }>, <{ [42 x i8] }>* @alloc112, i32 0, i32 0, i32 0), [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc115 = private unnamed_addr constant <{ [29 x i8] }> <{ [29 x i8] c"BTreeMap has different depths" }>, align 1
@alloc116 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [29 x i8] }>, <{ [29 x i8] }>* @alloc115, i32 0, i32 0, i32 0), [8 x i8] c"\1D\00\00\00\00\00\00\00" }>, align 8
@alloc195 = private unnamed_addr constant <{ [95 x i8] }> <{ [95 x i8] c"/home/martin/projects/metasafe/trust-sec23/rust/library/alloc/src/collections/btree/navigate.rs" }>, align 1
@alloc196 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [95 x i8] }>, <{ [95 x i8] }>* @alloc195, i32 0, i32 0, i32 0), [16 x i8] c"_\00\00\00\00\00\00\00v\00\00\00\12\00\00\00" }>, align 8
@alloc197 = private unnamed_addr constant <{ [77 x i8] }> <{ [77 x i8] c"/home/martin/projects/metasafe/trust-sec23/rust/library/std/src/ffi/os_str.rs" }>, align 1
@alloc198 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc197, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00}\01\00\00\0A\00\00\00" }>, align 8
@alloc199 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/home/martin/projects/metasafe/trust-sec23/rust/library/core/src/str/pattern.rs" }>, align 1
@alloc200 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc199, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\B0\01\00\00&\00\00\00" }>, align 8
@vtable.2 = private unnamed_addr constant { void ({ [0 x i8]*, i64 }*)*, i64, i64, i64 ({ [0 x i8]*, i64 }*)* } { void ({ [0 x i8]*, i64 }*)* @_ZN4core3ptr13drop_in_place17h3fdd954428b77804E, i64 16, i64 8, i64 ({ [0 x i8]*, i64 }*)* @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h5d51012198a4764eE" }, align 8
@alloc1 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"cargo:rerun-if-changed=build.rs\0A" }>, align 1
@alloc2 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [32 x i8] }>, <{ [32 x i8] }>* @alloc1, i32 0, i32 0, i32 0), [8 x i8] c" \00\00\00\00\00\00\00" }>, align 8
@alloc201 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"Failed to get rustc version" }>, align 1
@alloc219 = private unnamed_addr constant <{ [82 x i8] }> <{ [82 x i8] c"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.106/build.rs" }>, align 1
@alloc203 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc219, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\09\00\00\00?\00\00\00" }>, align 8
@alloc204 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"CARGO_FEATURE_RUSTC_DEP_OF_STD" }>, align 1
@alloc205 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"CARGO_FEATURE_ALIGN" }>, align 1
@alloc206 = private unnamed_addr constant <{ [29 x i8] }> <{ [29 x i8] c"CARGO_FEATURE_CONST_EXTERN_FN" }>, align 1
@alloc207 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"LIBC_CI" }>, align 1
@alloc208 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"CARGO_FEATURE_USE_STD" }>, align 1
@alloc13 = private unnamed_addr constant <{ [132 x i8] }> <{ [132 x i8] c"cargo:warning=\22libc's use_std cargo feature is deprecated since libc 0.2.55; please consider using the `std` cargo feature instead\22\0A" }>, align 1
@alloc14 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [132 x i8] }>, <{ [132 x i8] }>* @alloc13, i32 0, i32 0, i32 0), [8 x i8] c"\84\00\00\00\00\00\00\00" }>, align 8
@alloc33 = private unnamed_addr constant <{ [26 x i8] }> <{ [26 x i8] c"cargo:rustc-cfg=freebsd13\0A" }>, align 1
@alloc34 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [26 x i8] }>, <{ [26 x i8] }>* @alloc33, i32 0, i32 0, i32 0), [8 x i8] c"\1A\00\00\00\00\00\00\00" }>, align 8
@alloc28 = private unnamed_addr constant <{ [26 x i8] }> <{ [26 x i8] c"cargo:rustc-cfg=freebsd12\0A" }>, align 1
@alloc29 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [26 x i8] }>, <{ [26 x i8] }>* @alloc28, i32 0, i32 0, i32 0), [8 x i8] c"\1A\00\00\00\00\00\00\00" }>, align 8
@alloc38 = private unnamed_addr constant <{ [26 x i8] }> <{ [26 x i8] c"cargo:rustc-cfg=freebsd11\0A" }>, align 1
@alloc39 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [26 x i8] }>, <{ [26 x i8] }>* @alloc38, i32 0, i32 0, i32 0), [8 x i8] c"\1A\00\00\00\00\00\00\00" }>, align 8
@alloc18 = private unnamed_addr constant <{ [26 x i8] }> <{ [26 x i8] c"cargo:rustc-cfg=freebsd10\0A" }>, align 1
@alloc19 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [26 x i8] }>, <{ [26 x i8] }>* @alloc18, i32 0, i32 0, i32 0), [8 x i8] c"\1A\00\00\00\00\00\00\00" }>, align 8
@alloc43 = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"cargo:rustc-cfg=libc_deny_warnings\0A" }>, align 1
@alloc44 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [35 x i8] }>, <{ [35 x i8] }>* @alloc43, i32 0, i32 0, i32 0), [8 x i8] c"#\00\00\00\00\00\00\00" }>, align 8
@alloc48 = private unnamed_addr constant <{ [34 x i8] }> <{ [34 x i8] c"cargo:rustc-cfg=libc_priv_mod_use\0A" }>, align 1
@alloc49 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [34 x i8] }>, <{ [34 x i8] }>* @alloc48, i32 0, i32 0, i32 0), [8 x i8] c"\22\00\00\00\00\00\00\00" }>, align 8
@alloc53 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"cargo:rustc-cfg=libc_union\0A" }>, align 1
@alloc54 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [27 x i8] }>, <{ [27 x i8] }>* @alloc53, i32 0, i32 0, i32 0), [8 x i8] c"\1B\00\00\00\00\00\00\00" }>, align 8
@alloc58 = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"cargo:rustc-cfg=libc_const_size_of\0A" }>, align 1
@alloc59 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [35 x i8] }>, <{ [35 x i8] }>* @alloc58, i32 0, i32 0, i32 0), [8 x i8] c"#\00\00\00\00\00\00\00" }>, align 8
@alloc63 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"cargo:rustc-cfg=libc_align\0A" }>, align 1
@alloc64 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [27 x i8] }>, <{ [27 x i8] }>* @alloc63, i32 0, i32 0, i32 0), [8 x i8] c"\1B\00\00\00\00\00\00\00" }>, align 8
@alloc68 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"cargo:rustc-cfg=libc_core_cvoid\0A" }>, align 1
@alloc69 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [32 x i8] }>, <{ [32 x i8] }>* @alloc68, i32 0, i32 0, i32 0), [8 x i8] c" \00\00\00\00\00\00\00" }>, align 8
@alloc73 = private unnamed_addr constant <{ [29 x i8] }> <{ [29 x i8] c"cargo:rustc-cfg=libc_packedN\0A" }>, align 1
@alloc74 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [29 x i8] }>, <{ [29 x i8] }>* @alloc73, i32 0, i32 0, i32 0), [8 x i8] c"\1D\00\00\00\00\00\00\00" }>, align 8
@alloc78 = private unnamed_addr constant <{ [39 x i8] }> <{ [39 x i8] c"cargo:rustc-cfg=libc_cfg_target_vendor\0A" }>, align 1
@alloc79 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [39 x i8] }>, <{ [39 x i8] }>* @alloc78, i32 0, i32 0, i32 0), [8 x i8] c"'\00\00\00\00\00\00\00" }>, align 8
@alloc83 = private unnamed_addr constant <{ [34 x i8] }> <{ [34 x i8] c"cargo:rustc-cfg=libc_thread_local\0A" }>, align 1
@alloc84 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [34 x i8] }>, <{ [34 x i8] }>* @alloc83, i32 0, i32 0, i32 0), [8 x i8] c"\22\00\00\00\00\00\00\00" }>, align 8
@alloc209 = private unnamed_addr constant <{ [51 x i8] }> <{ [51 x i8] c"const-extern-fn requires a nightly compiler >= 1.40" }>, align 1
@alloc211 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc219, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00R\00\00\00\0D\00\00\00" }>, align 8
@alloc88 = private unnamed_addr constant <{ [37 x i8] }> <{ [37 x i8] c"cargo:rustc-cfg=libc_const_extern_fn\0A" }>, align 1
@alloc89 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [37 x i8] }>, <{ [37 x i8] }>* @alloc88, i32 0, i32 0, i32 0), [8 x i8] c"%\00\00\00\00\00\00\00" }>, align 8
@alloc212 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"RUSTC" }>, align 1
@alloc213 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"--version" }>, align 1
@alloc100 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"rustc 1" }>, align 1
@alloc101 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [7 x i8] }>, <{ [7 x i8] }>* @alloc100, i32 0, i32 0, i32 0), [8 x i8] c"\07\00\00\00\00\00\00\00" }>, align 8
@alloc214 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"dev" }>, align 1
@alloc215 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"nightly" }>, align 1
@alloc216 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"freebsd-version" }>, align 1
@alloc218 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc219, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\80\00\00\00\19\00\00\00" }>, align 8
@alloc220 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc219, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\89\00\00\00\19\00\00\00" }>, align 8
@alloc221 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"10" }>, align 1
@alloc222 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"11" }>, align 1
@alloc223 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"12" }>, align 1
@alloc224 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"13" }>, align 1

; <std::ffi::os_str::OsString as core::ops::index::Index<core::ops::range::RangeFull>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::OsStr"*, i64 } @"_ZN105_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h45db50d3e74d251aE"(%"std::ffi::OsString"* mpk_immut noalias readonly align 8 dereferenceable(24) %self, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_5 = bitcast %"std::ffi::OsString"* %self to %"std::sys_common::os_str_bytes::Buf"*, !MPK-SmartPointer !3
; call std::sys_common::os_str_bytes::Buf::as_slice
  %1 = call { %"std::sys_common::os_str_bytes::Slice"*, i64 } @_ZN3std10sys_common12os_str_bytes3Buf8as_slice17hf87cca2ab68e5fc4E(%"std::sys_common::os_str_bytes::Buf"* mpk_immut noalias readonly align 8 dereferenceable(24) %_5)
  %_4.0 = extractvalue { %"std::sys_common::os_str_bytes::Slice"*, i64 } %1, 0
  %_4.1 = extractvalue { %"std::sys_common::os_str_bytes::Slice"*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::ffi::os_str::OsStr::from_inner
  %2 = call { %"std::ffi::OsStr"*, i64 } @_ZN3std3ffi6os_str5OsStr10from_inner17h6c80895f9ad60525E(%"std::sys_common::os_str_bytes::Slice"* mpk_immut noalias nonnull readonly align 1 %_4.0, i64 %_4.1)
  %3 = extractvalue { %"std::ffi::OsStr"*, i64 } %2, 0
  %4 = extractvalue { %"std::ffi::OsStr"*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = insertvalue { %"std::ffi::OsStr"*, i64 } undef, %"std::ffi::OsStr"* %3, 0
  %6 = insertvalue { %"std::ffi::OsStr"*, i64 } %5, i64 %4, 1
  ret { %"std::ffi::OsStr"*, i64 } %6
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h22f649cd5e620877E"(i64 %self.0, i64 %self.1, [0 x i8]* mpk_immut mpk_unsafe %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  store i64 1, i64* @METASAFE_TYPE_ID, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_4 = call mpk_immut i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h95f9230e8ed649a2E"([0 x i8]* mpk_immut %slice.0, i64 %slice.1), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::add
  %_3 = call mpk_immut mpk_unsafe i8* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h99c8c1bbc0117f6dE"(i8* mpk_immut mpk_unsafe %_4, i64 %self.0), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h3e19100558fc09ecE(i8* mpk_immut %_3, i64 %_7), !MPK-Unsafe !4
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hd948b7b1bc25165eE"(i64 %self.0, i64 %self.1, [0 x i8]* mpk_unsafe %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  store i64 1, i64* @METASAFE_TYPE_ID, align 8
; call core::ptr::mut_ptr::<impl *mut [T]>::as_mut_ptr
  %_4 = call i8* @"_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7923774adaf05c21E"([0 x i8]* %slice.0, i64 %slice.1), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::add
  %_3 = call mpk_unsafe i8* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17heaf3a9c41fdb296cE"(i8* mpk_unsafe %_4, i64 %self.0), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h33e258338f177735E(i8* %_3, i64 %_7), !MPK-Unsafe !4
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h405b24b080b76800E"(i64 %self.0, i64 %self.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_3 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  %_4 = icmp ugt i64 %self.0, %self.1
  br i1 %_4, label %bb1, label %bb3

bb1:                                              ; preds = %bb5, %start
  store i8 1, i8* %_3, align 1
  br label %bb4

bb2:                                              ; preds = %bb5
  store i8 0, i8* %_3, align 1
  br label %bb4

bb3:                                              ; preds = %start
; call core::slice::<impl [T]>::len
  %_9 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h0631a2df7f60cba4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %slice.0, i64 %slice.1)
  br label %bb5

bb4:                                              ; preds = %bb2, %bb1
  %1 = load i8, i8* %_3, align 1, !range !5
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb7, label %bb6

bb5:                                              ; preds = %bb3
  %_7 = icmp ugt i64 %self.1, %_9
  br i1 %_7, label %bb1, label %bb2

bb6:                                              ; preds = %bb4
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %3 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h22f649cd5e620877E"(i64 %self.0, i64 %self.1, [0 x i8]* mpk_immut mpk_unsafe %slice.0, i64 %slice.1), !MPK-Unsafe !4
  %_13.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb8

bb7:                                              ; preds = %bb4
  %4 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %4, align 8
  br label %bb9

bb8:                                              ; preds = %bb6
  %5 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  store [0 x i8]* %_13.0, [0 x i8]** %6, align 8, !MPK-Unsafe !4
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  store i64 %_13.1, i64* %7, align 8, !MPK-Unsafe !4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { i8*, i64 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64 } %12, i64 %11, 1
  ret { i8*, i64 } %13
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h8f2194ebaad00742E"(i64 %self.0, i64 %self.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_3 = icmp ugt i64 %self.0, %self.1
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::len
  %_10 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h0631a2df7f60cba4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %slice.0, i64 %slice.1)
  br label %bb3

bb2:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17hff3773a512c2a4b8E(i64 %self.0, i64 %self.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0)
  unreachable

bb3:                                              ; preds = %bb1
  %_8 = icmp ugt i64 %self.1, %_10
  br i1 %_8, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h22f649cd5e620877E"(i64 %self.0, i64 %self.1, [0 x i8]* mpk_immut mpk_unsafe %slice.0, i64 %slice.1), !MPK-Unsafe !4
  %_15.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_15.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb7

bb5:                                              ; preds = %bb3
; call core::slice::<impl [T]>::len
  %_13 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h0631a2df7f60cba4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %slice.0, i64 %slice.1)
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h63be533cc6b8936fE(i64 %self.1, i64 %_13, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0)
  unreachable

bb7:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_15.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_15.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb79147aeadc3ab84E"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_4 = icmp ugt i64 %self.0, %self.1
  br i1 %_4, label %bb2, label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::len
  %_11 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h0631a2df7f60cba4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %slice.0, i64 %slice.1)
  br label %bb3

bb2:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17hff3773a512c2a4b8E(i64 %self.0, i64 %self.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0)
  unreachable

bb3:                                              ; preds = %bb1
  %_9 = icmp ugt i64 %self.1, %_11
  br i1 %_9, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hd948b7b1bc25165eE"(i64 %self.0, i64 %self.1, [0 x i8]* mpk_unsafe %slice.0, i64 %slice.1), !MPK-Unsafe !4
  %_18.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_18.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb7

bb5:                                              ; preds = %bb3
; call core::slice::<impl [T]>::len
  %_14 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h0631a2df7f60cba4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %slice.0, i64 %slice.1)
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h63be533cc6b8936fE(i64 %self.1, i64 %_14, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0)
  unreachable

bb7:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_18.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_18.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hfe75ae2e71962f17E"(i64 %self, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_3 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %self, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %7 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h8f2194ebaad00742E"(i64 %4, i64 %6, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0)
  %8 = extractvalue { [0 x i8]*, i64 } %7, 0
  %9 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %9, 1
  ret { [0 x i8]*, i64 } %11
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17he3091bbce1d1eebfE"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_5 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_5 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %self, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %7 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb79147aeadc3ab84E"(i64 %4, i64 %6, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %7, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %9
}

; <alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN112_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha327ca422ada72c2E"(%"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>"* noalias nocapture sret dereferenceable(48) %0, %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* align 8 dereferenceable(56) %self) unnamed_addr #1 {
start:
  %_3 = alloca { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, align 8
  %1 = getelementptr inbounds %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %self, i32 0, i32 5
  %_2 = load i64, i64* %1, align 8
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %self, i32 0, i32 5
  %4 = getelementptr inbounds %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %self, i32 0, i32 5
  %5 = load i64, i64* %4, align 8
  %6 = sub i64 %5, 1
  store i64 %6, i64* %3, align 8
  %_7 = bitcast %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %self to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*
; call core::option::Option<T>::as_mut
  %_6 = call align 8 dereferenceable_or_null(24) i64* @"_ZN4core6option15Option$LT$T$GT$6as_mut17h4b2b0c430fdea080E"(%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* align 8 dereferenceable(24) %_7), !MPK-Unsafe !4
  br label %bb3

bb2:                                              ; preds = %start
  %7 = bitcast %"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>"* %0 to {}**
  store {}* null, {}** %7, align 8
  br label %bb6

bb3:                                              ; preds = %bb1
; call core::option::Option<T>::unwrap
  %_5 = call align 8 dereferenceable(24) %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h79b2436157265a1bE"(i64* align 8 dereferenceable_or_null(24) %_6, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc166 to %"std::panic::Location"*)), !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::next_unchecked
  call void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$14next_unchecked17hcee31d4d9dacfe44E"({ [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* noalias nocapture sret dereferenceable(48) %_3, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 dereferenceable(24) %_5), !MPK-Unsafe !4
  br label %bb5

bb5:                                              ; preds = %bb4
  %8 = bitcast %"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>"* %0 to %"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>::Some"*
  %9 = bitcast %"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>::Some"* %8 to { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }*
  %10 = bitcast { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* %9 to i8*
  %11 = bitcast { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 48, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb2, %bb5
  ret void
}

; <alloc::collections::btree::map::BTreeMap<K,V> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN115_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h6283f53be42bc0bcE"(%"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* noalias nocapture sret dereferenceable(56) %0, %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_2.i = alloca %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", align 8
  %_23 = alloca %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_22 = alloca %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_18 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_17 = alloca %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_16 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_15 = alloca %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_12 = alloca { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }, align 8
  %b = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %f = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_4 = alloca { i64*, i64 }, align 8
  %_3 = alloca %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", align 8
  %me = alloca %"std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>", align 8
  %1 = bitcast %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %_3 to i8*
  %2 = bitcast %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %_2.i to i8*
  %4 = bitcast %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false), !noalias !6
  %5 = bitcast %"std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>"* %me to %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*
  %6 = bitcast %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %5 to i8*
  %7 = bitcast %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !noalias !9
  br label %bb1

bb1:                                              ; preds = %start
  %_3.i = bitcast %"std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>"* %me to %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = bitcast %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %_3.i to { i64*, i64 }*
; call core::option::Option<T>::take
  %8 = call { i64*, i64 } @"_ZN4core6option15Option$LT$T$GT$4take17ha3b5f55c735034abE"({ i64*, i64 }* align 8 dereferenceable(16) %_5)
  store { i64*, i64 } %8, { i64*, i64 }* %_4, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %9 = bitcast { i64*, i64 }* %_4 to {}**
  %10 = load {}*, {}** %9, align 8
  %11 = icmp eq {}* %10, null
  %_8 = select i1 %11, i64 0, i64 1
  %12 = icmp eq i64 %_8, 1
  br i1 %12, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %13 = getelementptr inbounds %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_22, i32 0, i32 1
  store {}* null, {}** %13, align 8
  %14 = getelementptr inbounds %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_23, i32 0, i32 1
  store {}* null, {}** %14, align 8
  %15 = bitcast %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %0 to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*
  %16 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %15 to i8*
  %17 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  %18 = getelementptr inbounds %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %0, i32 0, i32 3
  %19 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %18 to i8*
  %20 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false)
  %21 = getelementptr inbounds %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %0, i32 0, i32 5
  store i64 0, i64* %21, align 8
  br label %bb9

bb5:                                              ; preds = %bb3
  %22 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 0
  %root.0 = load i64*, i64** %22, align 8, !nonnull !11
  %23 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  %root.1 = load i64, i64* %23, align 8
; call alloc::collections::btree::node::Root<K,V>::into_ref
  %24 = call { i64, i64* } @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$8into_ref17h6460d3310c92462bE"(i64* mpk_immut nonnull %root.0, i64 %root.1)
  %_13.0 = extractvalue { i64, i64* } %24, 0
  %_13.1 = extractvalue { i64, i64* } %24, 1
  br label %bb6

bb6:                                              ; preds = %bb5
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::full_range
  call void @"_ZN5alloc11collections5btree8navigate178_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$10full_range17hc4c7989b8ff762a6E"({ [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }* noalias nocapture sret dereferenceable(48) %_12, i64 %_13.0, i64* mpk_immut nonnull %_13.1)
  br label %bb7

bb7:                                              ; preds = %bb6
  %25 = bitcast { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }* %_12 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  %26 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %f to i8*
  %27 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false)
  %28 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }* %_12, i32 0, i32 3
  %29 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %b to i8*
  %30 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false)
  %31 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_16 to i8*
  %32 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false)
  %33 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_15 to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %34 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"* %33 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  %35 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %34 to i8*
  %36 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false)
  %37 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_18 to i8*
  %38 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %b to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false)
  %39 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_17 to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %40 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"* %39 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  %41 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %40 to i8*
  %42 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false)
  %43 = bitcast %"std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>"* %me to %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*
  br label %bb8

bb8:                                              ; preds = %bb7
  %44 = getelementptr inbounds %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %43, i32 0, i32 3
  %_19 = load i64, i64* %44, align 8
  %45 = bitcast %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %0 to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*
  %46 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %45 to i8*
  %47 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false)
  %48 = getelementptr inbounds %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %0, i32 0, i32 3
  %49 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %48 to i8*
  %50 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false)
  %51 = getelementptr inbounds %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %0, i32 0, i32 5
  store i64 %_19, i64* %51, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb4
  ret void
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h27883e369023a667E"(i8* mpk_immut nonnull %unique) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h055a443b2e13d456E"(i8* mpk_immut nonnull %unique), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5c5c968be544278cE"(i8* mpk_unsafe %_2), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut nonnull i64* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17he6db5958d3c3a6c4E"(i64* mpk_immut nonnull %unique) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hca9ca350dbe1ad0cE"(i64* mpk_immut nonnull %unique), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call mpk_immut mpk_unsafe nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h86967d3eb292b06bE"(%"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* mpk_unsafe %_2), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; <<alloc::collections::btree::map::IntoIter<K,V> as core::ops::drop::Drop>::drop::DropGuard<K,V> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN166_$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$K$C$V$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0988e0d5cbda9ad4E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_2.i = alloca %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_17 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %parent = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_11 = alloca %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_8 = alloca %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_7 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %node = alloca { i64, i64* }, align 8
  %_2 = alloca %"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>", align 8
  br label %bb1

bb1:                                              ; preds = %bb5, %start
  %0 = bitcast i64** %self to %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"**
  %_3 = load %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*, %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"** %0, align 8, !nonnull !11
; call <alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN112_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha327ca422ada72c2E"(%"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>"* noalias nocapture sret dereferenceable(48) %_2, %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* align 8 dereferenceable(56) %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>"* %_2 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_4 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_4, 1
  br i1 %4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hdfc8b089247fb3e6E(%"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>"* mpk_unsafe %_2)
  br label %bb6

bb4:                                              ; preds = %bb2
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hdfc8b089247fb3e6E(%"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>"* mpk_unsafe %_2)
  br label %bb5

bb5:                                              ; preds = %bb4
  br label %bb1

bb6:                                              ; preds = %bb3
  %5 = bitcast i64** %self to %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"**
  %6 = load %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*, %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"** %5, align 8, !nonnull !11, !MPK-Unsafe !4
  %_10 = bitcast %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %6 to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*
; call core::ptr::read
  call void @_ZN4core3ptr4read17hc31b192d5fea81d6E(%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(24) %_8, %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* mpk_immut mpk_unsafe %_10), !MPK-Unsafe !4
  br label %bb7

bb7:                                              ; preds = %bb6
  %7 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_2.i to i8*
  %8 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !noalias !12
; call core::option::Option<T>::unwrap_or_else
  call void @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h848bf7541053ac9aE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %_7, %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture dereferenceable(24) %_2.i), !noalias !15
  br label %bb8

bb8:                                              ; preds = %bb7
; call alloc::collections::btree::node::Handle<Node,Type>::into_node
  %9 = call { i64, i64* } @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h2f076b47bed1596fE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_7), !MPK-Unsafe !4
  %_6.0 = extractvalue { i64, i64* } %9, 0
  %_6.1 = extractvalue { i64, i64* } %9, 1
  br label %bb9

bb9:                                              ; preds = %bb8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>::forget_type
  %10 = call { i64, i64* } @"_ZN5alloc11collections5btree4node81NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$11forget_type17hfcc8340e47be90c1E"(i64 %_6.0, i64* mpk_immut nonnull %_6.1), !MPK-Unsafe !4
  store { i64, i64* } %10, { i64, i64* }* %node, align 8, !MPK-Unsafe !4
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb11

bb11:                                             ; preds = %bb16, %bb10
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 0
  %_12.0 = load i64, i64* %11, align 8, !MPK-Unsafe !4
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 1
  %_12.1 = load i64*, i64** %12, align 8, !nonnull !11, !MPK-Unsafe !4
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::deallocate_and_ascend
  call void @"_ZN5alloc11collections5btree4node127NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$21deallocate_and_ascend17h4079bfe7baf266d6E"(%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(24) %_11, i64 %_12.0, i64* mpk_immut mpk_unsafe nonnull %_12.1), !MPK-Unsafe !4
  br label %bb12

bb12:                                             ; preds = %bb11
  %13 = getelementptr inbounds %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_11, i32 0, i32 1
  %14 = load {}*, {}** %13, align 8, !MPK-Unsafe !4
  %15 = icmp eq {}* %14, null
  %_13 = select i1 %15, i64 0, i64 1
  %16 = icmp eq i64 %_13, 1
  br i1 %16, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  ret void

bb14:                                             ; preds = %bb12
  %17 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_11 to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %18 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %17 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*
  %19 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent to i8*
  %20 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false), !MPK-Unsafe !4
  %21 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_17 to i8*
  %22 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false), !MPK-Unsafe !4
; call alloc::collections::btree::node::Handle<Node,Type>::into_node
  %23 = call { i64, i64* } @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17hbae0866c3ee7c49fE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_17), !MPK-Unsafe !4
  %_16.0 = extractvalue { i64, i64* } %23, 0
  %_16.1 = extractvalue { i64, i64* } %23, 1
  br label %bb15

bb15:                                             ; preds = %bb14
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::forget_type
  %24 = call { i64, i64* } @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$11forget_type17h144b8b4505e325a2E"(i64 %_16.0, i64* mpk_immut nonnull %_16.1), !MPK-Unsafe !4
  %_15.0 = extractvalue { i64, i64* } %24, 0
  %_15.1 = extractvalue { i64, i64* } %24, 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %25 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 0
  store i64 %_15.0, i64* %25, align 8, !MPK-Unsafe !4
  %26 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 1
  store i64* %_15.1, i64** %26, align 8, !MPK-Unsafe !4
  br label %bb11
}

; <T as core::any::Any>::type_id
; Function Attrs: nonlazybind uwtable
define internal i64 @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h5d51012198a4764eE"({ [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::any::TypeId::of
  %0 = call i64 @_ZN4core3any6TypeId2of17h1c59568a209856c6E()
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; std::sys_common::os_str_bytes::Buf::as_slice
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::sys_common::os_str_bytes::Slice"*, i64 } @_ZN3std10sys_common12os_str_bytes3Buf8as_slice17hf87cca2ab68e5fc4E(%"std::sys_common::os_str_bytes::Buf"* mpk_immut noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = alloca { %"std::sys_common::os_str_bytes::Slice"*, i64 }, align 8, !MPK-Unsafe !4
  %_4 = bitcast %"std::sys_common::os_str_bytes::Buf"* %self to %"std::vec::Vec<u8>"*, !MPK-SmartPointer !3
; call <alloc::vec::Vec<T> as core::ops::deref::Deref>::deref
  %1 = call { [0 x i8]*, i64 } @"_ZN68_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hfe00dc9b466b7d4dE"(%"std::vec::Vec<u8>"* mpk_immut noalias readonly align 8 dereferenceable(24) %_4), !MPK-Unsafe !4
  %_3.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { %"std::sys_common::os_str_bytes::Slice"*, i64 }* %0 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %_3.0, [0 x i8]** %3, align 8, !MPK-Unsafe !4
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %_3.1, i64* %4, align 8, !MPK-Unsafe !4
  %5 = getelementptr inbounds { %"std::sys_common::os_str_bytes::Slice"*, i64 }, { %"std::sys_common::os_str_bytes::Slice"*, i64 }* %0, i32 0, i32 0
  %6 = load %"std::sys_common::os_str_bytes::Slice"*, %"std::sys_common::os_str_bytes::Slice"** %5, align 8, !nonnull !11, !MPK-Unsafe !4
  %7 = getelementptr inbounds { %"std::sys_common::os_str_bytes::Slice"*, i64 }, { %"std::sys_common::os_str_bytes::Slice"*, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8, !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = insertvalue { %"std::sys_common::os_str_bytes::Slice"*, i64 } undef, %"std::sys_common::os_str_bytes::Slice"* %6, 0
  %10 = insertvalue { %"std::sys_common::os_str_bytes::Slice"*, i64 } %9, i64 %8, 1
  ret { %"std::sys_common::os_str_bytes::Slice"*, i64 } %10
}

; std::sys_common::os_str_bytes::Slice::from_u8_slice
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::sys_common::os_str_bytes::Slice"*, i64 } @_ZN3std10sys_common12os_str_bytes5Slice13from_u8_slice17hd512af9db01a6198E([0 x i8]* mpk_immut noalias nonnull readonly align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %0 = alloca { %"std::sys_common::os_str_bytes::Slice"*, i64 }, align 8, !MPK-Unsafe !4
  %1 = bitcast { %"std::sys_common::os_str_bytes::Slice"*, i64 }* %0 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %2, align 8, !MPK-Unsafe !4
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %s.1, i64* %3, align 8, !MPK-Unsafe !4
  %4 = getelementptr inbounds { %"std::sys_common::os_str_bytes::Slice"*, i64 }, { %"std::sys_common::os_str_bytes::Slice"*, i64 }* %0, i32 0, i32 0
  %5 = load %"std::sys_common::os_str_bytes::Slice"*, %"std::sys_common::os_str_bytes::Slice"** %4, align 8, !nonnull !11, !MPK-Unsafe !4
  %6 = getelementptr inbounds { %"std::sys_common::os_str_bytes::Slice"*, i64 }, { %"std::sys_common::os_str_bytes::Slice"*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8, !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { %"std::sys_common::os_str_bytes::Slice"*, i64 } undef, %"std::sys_common::os_str_bytes::Slice"* %5, 0
  %9 = insertvalue { %"std::sys_common::os_str_bytes::Slice"*, i64 } %8, i64 %7, 1
  ret { %"std::sys_common::os_str_bytes::Slice"*, i64 } %9
}

; std::sys_common::os_str_bytes::Slice::from_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::sys_common::os_str_bytes::Slice"*, i64 } @_ZN3std10sys_common12os_str_bytes5Slice8from_str17h793b823e46005143E([0 x i8]* mpk_immut noalias nonnull readonly align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8, !MPK-Unsafe !4
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8, !noalias !17, !MPK-Unsafe !4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8, !noalias !17, !MPK-Unsafe !4
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !noalias !17, !nonnull !11, !MPK-Unsafe !4
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !noalias !17, !MPK-Unsafe !4
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %_3.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::sys_common::os_str_bytes::Slice::from_u8_slice
  %9 = call { %"std::sys_common::os_str_bytes::Slice"*, i64 } @_ZN3std10sys_common12os_str_bytes5Slice13from_u8_slice17hd512af9db01a6198E([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_3.0, i64 %_3.1)
  %10 = extractvalue { %"std::sys_common::os_str_bytes::Slice"*, i64 } %9, 0
  %11 = extractvalue { %"std::sys_common::os_str_bytes::Slice"*, i64 } %9, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %12 = insertvalue { %"std::sys_common::os_str_bytes::Slice"*, i64 } undef, %"std::sys_common::os_str_bytes::Slice"* %10, 0
  %13 = insertvalue { %"std::sys_common::os_str_bytes::Slice"*, i64 } %12, i64 %11, 1
  ret { %"std::sys_common::os_str_bytes::Slice"*, i64 } %13
}

; std::sys_common::backtrace::__rust_end_short_backtrace
; Function Attrs: noinline noreturn nonlazybind uwtable
define internal void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17h3365c94aba92c7b6E(%"[closure@std::rt::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_5 = alloca {}, align 1
  %_3 = alloca {}, align 1
  %_2 = alloca %"[closure@std::rt::begin_panic<&str>::{closure#0}]", align 8
  %1 = bitcast %"[closure@std::rt::begin_panic<&str>::{closure#0}]"* %_2 to i8*
  %2 = bitcast %"[closure@std::rt::begin_panic<&str>::{closure#0}]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call std::panicking::begin_panic::{{closure}}
  call void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17he73226c26d1f0131E"(%"[closure@std::rt::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::hint::black_box
  invoke void @_ZN4core4hint9black_box17haf62e4539d9d534eE()
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.trap()
  unreachable

bb3:                                              ; preds = %cleanup
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = bitcast { i8*, i32 }* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

cleanup:                                          ; preds = %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb3
}

; std::sys_common::backtrace::__rust_begin_short_backtrace
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17he6ae76e7b58c630dE(void ()* mpk_immut nonnull %f) unnamed_addr #3 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_5 = alloca {}, align 1
  %_3 = alloca {}, align 1
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17hb0f61a47df5fc4b8E(void ()* mpk_immut nonnull %f)
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::hint::black_box
  invoke void @_ZN4core4hint9black_box17haf62e4539d9d534eE()
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %cleanup
  br label %bb4

bb4:                                              ; preds = %bb3
  %1 = bitcast { i8*, i32 }* %0 to i8**
  %2 = load i8*, i8** %1, align 8
  %3 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = insertvalue { i8*, i32 } undef, i8* %2, 0
  %6 = insertvalue { i8*, i32 } %5, i32 %4, 1
  resume { i8*, i32 } %6

cleanup:                                          ; preds = %bb1
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb3
}

; std::rt::lang_start
; Function Attrs: nonlazybind uwtable
define hidden i64 @_ZN3std2rt10lang_start17ha1ada3f1c945e901E(void ()* mpk_immut nonnull %main, i64 %argc, i8** mpk_immut %argv) unnamed_addr #1 {
start:
  %_7 = alloca i64*, align 8
  %0 = bitcast i64** %_7 to void ()**
  store void ()* %main, void ()** %0, align 8
  %_4.0 = bitcast i64** %_7 to {}*
; call std::rt::lang_start_internal
  %1 = call i64 @_ZN3std2rt19lang_start_internal17h2677a686eee71786E({}* mpk_immut nonnull align 1 %_4.0, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24) bitcast ({ void (i64**)*, i64, i64, i32 (i64**)*, i32 (i64**)*, i32 (i64**)* }* @vtable.0 to [3 x i64]*), i64 %argc, i8** mpk_immut %argv)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; std::rt::lang_start::{{closure}}
; Function Attrs: nonlazybind uwtable
define internal i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hd348c98e2a8984ebE"(i64** mpk_immut noalias readonly align 8 dereferenceable(8) %_1) unnamed_addr #1 {
start:
  %0 = bitcast i64** %_1 to void ()**
  %_3 = load void ()*, void ()** %0, align 8, !nonnull !11
; call std::sys_common::backtrace::__rust_begin_short_backtrace
  call void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17he6ae76e7b58c630dE(void ()* mpk_immut nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call <() as std::process::Termination>::report
  %1 = call i32 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17h2d838450e2c37799E"()
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %1
}

; std::env::var
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std3env3var17h2642a6f9a8f4a38fE(%"std::result::Result<std::string::String, std::env::VarError>"* noalias nocapture sret dereferenceable(32) %0, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %key = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %key, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %key, i32 0, i32 1
  store i64 %2, i64* %5, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %6 = invoke { %"std::ffi::OsStr"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h48e9281acdda823eE"({ [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %key)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_3.0 = extractvalue { %"std::ffi::OsStr"*, i64 } %6, 0
  %_3.1 = extractvalue { %"std::ffi::OsStr"*, i64 } %6, 1
; invoke std::env::_var
  invoke void @_ZN3std3env4_var17hf3cab80e3a018b1aE(%"std::result::Result<std::string::String, std::env::VarError>"* noalias nocapture sret dereferenceable(32) %0, %"std::ffi::OsStr"* mpk_immut noalias nonnull readonly align 1 %_3.0, i64 %_3.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void

bb4:                                              ; preds = %cleanup
  br label %bb5

bb5:                                              ; preds = %bb4
  %7 = bitcast { i8*, i32 }* %3 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1
  resume { i8*, i32 } %12

cleanup:                                          ; preds = %bb1, %start
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb4
}

; std::env::var_os
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std3env6var_os17h113e58876ab98543E(%"std::option::Option<std::ffi::OsString>"* noalias nocapture sret dereferenceable(24) %0, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %key = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %key, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %key, i32 0, i32 1
  store i64 %2, i64* %5, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %6 = invoke { %"std::ffi::OsStr"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h48e9281acdda823eE"({ [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %key)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_3.0 = extractvalue { %"std::ffi::OsStr"*, i64 } %6, 0
  %_3.1 = extractvalue { %"std::ffi::OsStr"*, i64 } %6, 1
; invoke std::env::_var_os
  invoke void @_ZN3std3env7_var_os17h7a041bd284a5ba2dE(%"std::option::Option<std::ffi::OsString>"* noalias nocapture sret dereferenceable(24) %0, %"std::ffi::OsStr"* mpk_immut noalias nonnull readonly align 1 %_3.0, i64 %_3.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void

bb4:                                              ; preds = %cleanup
  br label %bb5

bb5:                                              ; preds = %bb4
  %7 = bitcast { i8*, i32 }* %3 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1
  resume { i8*, i32 } %12

cleanup:                                          ; preds = %bb1, %start
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb4
}

; std::ffi::os_str::OsStr::from_inner
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::OsStr"*, i64 } @_ZN3std3ffi6os_str5OsStr10from_inner17h6c80895f9ad60525E(%"std::sys_common::os_str_bytes::Slice"* mpk_immut noalias nonnull readonly align 1 %inner.0, i64 %inner.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast %"std::sys_common::os_str_bytes::Slice"* %inner.0 to %"std::ffi::OsStr"*
  %0 = insertvalue { %"std::ffi::OsStr"*, i64 } undef, %"std::ffi::OsStr"* %_2.0, 0
  %1 = insertvalue { %"std::ffi::OsStr"*, i64 } %0, i64 %inner.1, 1
  ret { %"std::ffi::OsStr"*, i64 } %1
}

; std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::OsStr"*, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h2e998311c0d316fbE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call std::sys_common::os_str_bytes::Slice::from_str
  %0 = call { %"std::sys_common::os_str_bytes::Slice"*, i64 } @_ZN3std10sys_common12os_str_bytes5Slice8from_str17h793b823e46005143E([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1)
  %_3.0 = extractvalue { %"std::sys_common::os_str_bytes::Slice"*, i64 } %0, 0
  %_3.1 = extractvalue { %"std::sys_common::os_str_bytes::Slice"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::ffi::os_str::OsStr::from_inner
  %1 = call { %"std::ffi::OsStr"*, i64 } @_ZN3std3ffi6os_str5OsStr10from_inner17h6c80895f9ad60525E(%"std::sys_common::os_str_bytes::Slice"* mpk_immut noalias nonnull readonly align 1 %_3.0, i64 %_3.1)
  %2 = extractvalue { %"std::ffi::OsStr"*, i64 } %1, 0
  %3 = extractvalue { %"std::ffi::OsStr"*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { %"std::ffi::OsStr"*, i64 } undef, %"std::ffi::OsStr"* %2, 0
  %5 = insertvalue { %"std::ffi::OsStr"*, i64 } %4, i64 %3, 1
  ret { %"std::ffi::OsStr"*, i64 } %5
}

; std::sys::unix::process::process_common::ExitCode::as_i32
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN3std3sys4unix7process14process_common8ExitCode6as_i3217h2aacd81451ee587bE(i8* mpk_immut noalias readonly align 1 dereferenceable(1) %self) unnamed_addr #0 {
start:
  %_2 = load i8, i8* %self, align 1
  %0 = zext i8 %_2 to i32
  ret i32 %0
}

; std::process::Command::arg
; Function Attrs: nonlazybind uwtable
define internal align 8 dereferenceable(184) %"std::process::Command"* @_ZN3std7process7Command3arg17hc34f3aafdf5e38bfE(%"std::process::Command"* align 8 dereferenceable(184) %self, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %0, i64 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %arg = alloca { [0 x i8]*, i64 }, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %arg, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %arg, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %_5 = bitcast %"std::process::Command"* %self to %"std::sys::unix::process::process_common::Command"*, !MPK-SmartPointer !3
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %5 = invoke { %"std::ffi::OsStr"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h48e9281acdda823eE"({ [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %arg)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_7.0 = extractvalue { %"std::ffi::OsStr"*, i64 } %5, 0
  %_7.1 = extractvalue { %"std::ffi::OsStr"*, i64 } %5, 1
; invoke std::sys::unix::process::process_common::Command::arg
  invoke void @_ZN3std3sys4unix7process14process_common7Command3arg17hd2f046177e388b39E(%"std::sys::unix::process::process_common::Command"* align 8 dereferenceable(184) %_5, %"std::ffi::OsStr"* mpk_immut noalias nonnull readonly align 1 %_7.0, i64 %_7.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"std::process::Command"* %self

bb4:                                              ; preds = %cleanup
  br label %bb5

bb5:                                              ; preds = %bb4
  %6 = bitcast { i8*, i32 }* %2 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11

cleanup:                                          ; preds = %bb1, %start
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb4
}

; std::process::Command::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std7process7Command3new17h54d8e050dff9d886E(%"std::process::Command"* noalias nocapture sret dereferenceable(184) %0, %"std::ffi::OsString"* noalias nocapture dereferenceable(24) %program) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"std::sys::unix::process::process_common::Command", align 8
; invoke <std::ffi::os_str::OsString as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
  %2 = invoke { %"std::ffi::OsStr"*, i64 } @"_ZN98_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17h5699c6f683bdeff1E"(%"std::ffi::OsString"* mpk_immut noalias readonly align 8 dereferenceable(24) %program)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_4.0 = extractvalue { %"std::ffi::OsStr"*, i64 } %2, 0
  %_4.1 = extractvalue { %"std::ffi::OsStr"*, i64 } %2, 1
; invoke std::sys::unix::process::process_common::Command::new
  invoke void @_ZN3std3sys4unix7process14process_common7Command3new17h0d78b572904cac1bE(%"std::sys::unix::process::process_common::Command"* noalias nocapture sret dereferenceable(184) %_2, %"std::ffi::OsStr"* mpk_immut noalias nonnull readonly align 1 %_4.0, i64 %_4.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %3 = bitcast %"std::process::Command"* %0 to %"std::sys::unix::process::process_common::Command"*, !MPK-SmartPointer !3
  %4 = bitcast %"std::sys::unix::process::process_common::Command"* %3 to i8*
  %5 = bitcast %"std::sys::unix::process::process_common::Command"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 184, i1 false)
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h49c15d43aee983b9E(%"std::ffi::OsString"* mpk_unsafe %program)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h49c15d43aee983b9E(%"std::ffi::OsString"* mpk_unsafe %program) #14
  br label %bb5

bb5:                                              ; preds = %bb4
  %6 = bitcast { i8*, i32 }* %1 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11

cleanup:                                          ; preds = %bb1, %start
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb4
}

; std::process::Command::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std7process7Command3new17he848548e12c3b5c1E(%"std::process::Command"* noalias nocapture sret dereferenceable(184) %0, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"std::sys::unix::process::process_common::Command", align 8
  %program = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %program, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %program, i32 0, i32 1
  store i64 %2, i64* %5, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %6 = invoke { %"std::ffi::OsStr"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h48e9281acdda823eE"({ [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %program)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_4.0 = extractvalue { %"std::ffi::OsStr"*, i64 } %6, 0
  %_4.1 = extractvalue { %"std::ffi::OsStr"*, i64 } %6, 1
; invoke std::sys::unix::process::process_common::Command::new
  invoke void @_ZN3std3sys4unix7process14process_common7Command3new17h0d78b572904cac1bE(%"std::sys::unix::process::process_common::Command"* noalias nocapture sret dereferenceable(184) %_2, %"std::ffi::OsStr"* mpk_immut noalias nonnull readonly align 1 %_4.0, i64 %_4.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %7 = bitcast %"std::process::Command"* %0 to %"std::sys::unix::process::process_common::Command"*, !MPK-SmartPointer !3
  %8 = bitcast %"std::sys::unix::process::process_common::Command"* %7 to i8*
  %9 = bitcast %"std::sys::unix::process::process_common::Command"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 184, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void

bb4:                                              ; preds = %cleanup
  br label %bb5

bb5:                                              ; preds = %bb4
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

cleanup:                                          ; preds = %bb1, %start
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb4
}

; std::panicking::begin_panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
define internal void @_ZN3std9panicking11begin_panic17h2c2e27bf65c0b307E([0 x i8]* mpk_immut noalias nonnull readonly align 1 %msg.0, i64 %msg.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0) unnamed_addr #4 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_4 = alloca i8, align 1
  %_3 = alloca %"[closure@std::rt::begin_panic<&str>::{closure#0}]", align 8
  store i8 0, i8* %_4, align 1
  store i8 1, i8* %_4, align 1
; invoke core::panic::Location::caller
  %loc = invoke mpk_immut align 8 dereferenceable(24) %"std::panic::Location"* @_ZN4core5panic8Location6caller17hdc67367c0d053777E(%"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_4, align 1
  %2 = bitcast %"[closure@std::rt::begin_panic<&str>::{closure#0}]"* %_3 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %msg.1, i64* %4, align 8
  %5 = getelementptr inbounds %"[closure@std::rt::begin_panic<&str>::{closure#0}]", %"[closure@std::rt::begin_panic<&str>::{closure#0}]"* %_3, i32 0, i32 3
  store %"std::panic::Location"* %loc, %"std::panic::Location"** %5, align 8
; invoke std::sys_common::backtrace::__rust_end_short_backtrace
  invoke void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17h3365c94aba92c7b6E(%"[closure@std::rt::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_3)
          to label %unreachable unwind label %cleanup

bb2:                                              ; preds = %bb3, %bb4
  %6 = bitcast { i8*, i32 }* %1 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11

bb3:                                              ; preds = %bb4
  br label %bb2

bb4:                                              ; preds = %cleanup
  %12 = load i8, i8* %_4, align 1, !range !5
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb3, label %bb2

cleanup:                                          ; preds = %bb1, %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable
}

; std::panicking::begin_panic::PanicPayload<A>::new
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17h6343fd1698243118E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %inner.0, i64 %inner.1) unnamed_addr #1 {
start:
  %_2 = alloca { i8*, i64 }, align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %inner.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %inner.1, i64* %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %5, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { i8*, i64 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i64 } %14, i64 %13, 1
  ret { i8*, i64 } %15
}

; std::panicking::begin_panic::{{closure}}
; Function Attrs: noreturn nonlazybind uwtable
define internal void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17he73226c26d1f0131E"(%"[closure@std::rt::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_1) unnamed_addr #5 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i64*, align 8
  %_5 = alloca { i8*, i64 }, align 8
  %1 = bitcast %"[closure@std::rt::begin_panic<&str>::{closure#0}]"* %_1 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !11
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %_6.1 = load i64, i64* %3, align 8
; call std::panicking::begin_panic::PanicPayload<A>::new
  %4 = call { i8*, i64 } @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17h6343fd1698243118E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_6.0, i64 %_6.1)
  store { i8*, i64 } %4, { i8*, i64 }* %_5, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_2.0 = bitcast { i8*, i64 }* %_5 to {}*
  %5 = bitcast i64** %_7 to {}**
  store {}* null, {}** %5, align 8
  %6 = getelementptr inbounds %"[closure@std::rt::begin_panic<&str>::{closure#0}]", %"[closure@std::rt::begin_panic<&str>::{closure#0}]"* %_1, i32 0, i32 3
  %_8 = load %"std::panic::Location"*, %"std::panic::Location"** %6, align 8, !nonnull !11
  %7 = load i64*, i64** %_7, align 8
; invoke std::panicking::rust_panic_with_hook
  invoke void @_ZN3std9panicking20rust_panic_with_hook17he34aa81080741830E({}* nonnull align 1 %_2.0, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24) bitcast ({ void ({ i8*, i64 }*)*, i64, i64, { {}*, [3 x i64]* } ({ i8*, i64 }*)*, { {}*, [3 x i64]* } ({ i8*, i64 }*)* }* @vtable.1 to [3 x i64]*), i64* mpk_immut noalias readonly align 8 dereferenceable_or_null(48) %7, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %_8)
          to label %unreachable unwind label %cleanup

bb2:                                              ; preds = %cleanup
  br label %bb3

bb3:                                              ; preds = %bb2
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

unreachable:                                      ; preds = %bb1
  unreachable

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb2
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h80e1dc8c3233516eE"({ [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !11
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_4.1 = load i64, i64* %1, align 8
; call <str as core::fmt::Display>::fmt
  %2 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h8d32920bf513d1aeE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_4.0, i64 %_4.1, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hf6bbc741b2b54270E"(i64 %start1, i64 %n) unnamed_addr #0 {
start:
; call core::num::<impl usize>::unchecked_add
  %0 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h1fb6f4d4d849c880E"(i64 %start1, i64 %n), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17h25443b14e669492bE(%"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* mpk_immut mpk_unsafe %src, %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* mpk_unsafe %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 24, %count
  %1 = bitcast %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %dst to i8*
  %2 = bitcast %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17h33dc6cc49163f985E(%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* mpk_immut mpk_unsafe %src, %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* mpk_unsafe %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 24, %count
  %1 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %dst to i8*
  %2 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17h3633a71a02d07b71E(%"std::option::Option<std::ffi::OsString>"* mpk_immut mpk_unsafe %src, %"std::option::Option<std::ffi::OsString>"* mpk_unsafe %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 24, %count
  %1 = bitcast %"std::option::Option<std::ffi::OsString>"* %dst to i8*
  %2 = bitcast %"std::option::Option<std::ffi::OsString>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17h39b77f011644999cE({ i64, i64* }* mpk_immut mpk_unsafe %src, { i64, i64* }* mpk_unsafe %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 16, %count
  %1 = bitcast { i64, i64* }* %dst to i8*
  %2 = bitcast { i64, i64* }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17h428b5e52243e57a3E(i8* mpk_immut mpk_unsafe %src, i8* mpk_unsafe %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 1, %count
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %0, i1 false), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17h46efc78f72814690E(i64* mpk_immut mpk_unsafe %src, i64* mpk_unsafe %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 8, %count
  %1 = bitcast i64* %dst to i8*
  %2 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17h4c297f92ab4736bbE(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* mpk_immut mpk_unsafe %src, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* mpk_unsafe %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 24, %count
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %dst to i8*
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17h4e24f846eecb6479E({ i64*, i64 }* mpk_immut mpk_unsafe %src, { i64*, i64 }* mpk_unsafe %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 16, %count
  %1 = bitcast { i64*, i64 }* %dst to i8*
  %2 = bitcast { i64*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17h5bdc1c13616869a2E({ i8*, i64 }* mpk_immut mpk_unsafe %src, { i8*, i64 }* mpk_unsafe %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 16, %count
  %1 = bitcast { i8*, i64 }* %dst to i8*
  %2 = bitcast { i8*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17haedc4244148763ccE(i64** mpk_immut mpk_unsafe %src, i64** mpk_unsafe %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 8, %count
  %1 = bitcast i64** %dst to i8*
  %2 = bitcast i64** %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17hc975b9534d6a5c38E(%"std::alloc::Global"* mpk_immut mpk_unsafe %src, %"std::alloc::Global"* mpk_unsafe %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 0, %count
  %1 = bitcast %"std::alloc::Global"* %dst to i8*
  %2 = bitcast %"std::alloc::Global"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %0, i1 false), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17hecbea3c17c39049fE(%"std::ffi::OsString"* mpk_immut mpk_unsafe %src, %"std::ffi::OsString"* mpk_unsafe %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 24, %count
  %1 = bitcast %"std::ffi::OsString"* %dst to i8*
  %2 = bitcast %"std::ffi::OsString"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::any::TypeId::of
; Function Attrs: nonlazybind uwtable
define internal i64 @_ZN4core3any6TypeId2of17h1c59568a209856c6E() unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 9147559743429524724, i64* %0, align 8
  %_1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %_1, i64* %1, align 8
  %2 = load i64, i64* %1, align 8
  ret i64 %2
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hdfeb2774e9a09366E"(i64* mpk_immut noalias readonly align 8 dereferenceable(8) %self, i64* mpk_immut noalias readonly align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %_3 = load i64, i64* %self, align 8
  %_4 = load i64, i64* %other, align 8
  %0 = icmp ult i64 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h5a0874503325093dE"({ [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self, { [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %other) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_3.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !11
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_3.1 = load i64, i64* %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !11
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1
  %_4.1 = load i64, i64* %3, align 8
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %4 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17h059ebe82a3200ccaE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_3.0, i64 %_3.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %_4.0, i64 %_4.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::ne
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2ne17h44f36eb1e402783eE"({ [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self, { [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %other) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_3.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !11
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_3.1 = load i64, i64* %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !11
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1
  %_4.1 = load i64, i64* %3, align 8
; call core::str::traits::<impl core::cmp::PartialEq for str>::ne
  %4 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2ne17h840cf27d56ba505eE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_3.0, i64 %_3.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %_4.0, i64 %_4.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h95c2430e331161a0E({ [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %x, i1 ({ [0 x i8]*, i64 }*, %"std::fmt::Formatter"*)* mpk_immut nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8, !MPK-Unsafe !4
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)*, align 8, !MPK-Unsafe !4
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %1 to i1 ({ [0 x i8]*, i64 }*, %"std::fmt::Formatter"*)**
  store i1 ({ [0 x i8]*, i64 }*, %"std::fmt::Formatter"*)* %f, i1 ({ [0 x i8]*, i64 }*, %"std::fmt::Formatter"*)** %3, align 8, !MPK-Unsafe !4
  %_3 = load i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %1, align 8, !nonnull !11, !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"core::fmt::Opaque"** %0 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %4, align 8, !MPK-Unsafe !4
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !11, !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8, !MPK-Unsafe !4
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %7, align 8, !MPK-Unsafe !4
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !11, !MPK-Unsafe !4
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !11, !MPK-Unsafe !4
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h9614be4a74880fe3E(i64* mpk_immut noalias readonly align 8 dereferenceable(8) %x, i1 (i64*, %"std::fmt::Formatter"*)* mpk_immut nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8, !MPK-Unsafe !4
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)*, align 8, !MPK-Unsafe !4
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %1 to i1 (i64*, %"std::fmt::Formatter"*)**
  store i1 (i64*, %"std::fmt::Formatter"*)* %f, i1 (i64*, %"std::fmt::Formatter"*)** %3, align 8, !MPK-Unsafe !4
  %_3 = load i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %1, align 8, !nonnull !11, !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"core::fmt::Opaque"** %0 to i64**
  store i64* %x, i64** %4, align 8, !MPK-Unsafe !4
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !11, !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8, !MPK-Unsafe !4
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %7, align 8, !MPK-Unsafe !4
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !11, !MPK-Unsafe !4
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !11, !MPK-Unsafe !4
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hd30e0ab06b7a3addE(i32* mpk_immut noalias readonly align 4 dereferenceable(4) %x, i1 (i32*, %"std::fmt::Formatter"*)* mpk_immut nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8, !MPK-Unsafe !4
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)*, align 8, !MPK-Unsafe !4
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %1 to i1 (i32*, %"std::fmt::Formatter"*)**
  store i1 (i32*, %"std::fmt::Formatter"*)* %f, i1 (i32*, %"std::fmt::Formatter"*)** %3, align 8, !MPK-Unsafe !4
  %_3 = load i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %1, align 8, !nonnull !11, !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"core::fmt::Opaque"** %0 to i32**
  store i32* %x, i32** %4, align 8, !MPK-Unsafe !4
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !11, !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8, !MPK-Unsafe !4
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"std::fmt::Formatter"*)** %7, align 8, !MPK-Unsafe !4
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !11, !MPK-Unsafe !4
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !11, !MPK-Unsafe !4
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %0, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 %args.0, i64 %args.1) unnamed_addr #0 {
start:
  %_4 = alloca { i64*, i64 }, align 8
  %1 = bitcast { i64*, i64 }* %_4 to {}**
  store {}* null, {}** %1, align 8
  %2 = bitcast %"std::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %3 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %2, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %3, align 8
  %4 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %2, i32 0, i32 1
  store i64 %pieces.1, i64* %4, align 8
  %5 = getelementptr inbounds %"std::fmt::Arguments", %"std::fmt::Arguments"* %0, i32 0, i32 3
  %6 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %5, i32 0, i32 0
  store i64* %7, i64** %10, align 8
  %11 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %5, i32 0, i32 1
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"std::fmt::Arguments", %"std::fmt::Arguments"* %0, i32 0, i32 5
  %13 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %12, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %13, align 8
  %14 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %12, i32 0, i32 1
  store i64 %args.1, i64* %14, align 8
  ret void
}

; core::mem::size_of_val
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3mem11size_of_val17hb797e2a3a2f8bfc4E([0 x i8]* mpk_immut noalias nonnull readonly align 1 %val.0, i64 %val.1) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = mul i64 %val.1, 1
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem4drop17h0bf1687fe04c972cE(%"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* noalias nocapture dereferenceable(56) %_x) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h1759f50957095470E(%"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* mpk_unsafe %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem4drop17h6ed8125703b788a3E({ [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* noalias nocapture dereferenceable(48) %_x) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h5431fb575a1b2b7eE({ [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* mpk_unsafe %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::swap
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem4swap17h608990769002651fE({ i8*, i64 }* align 8 dereferenceable(16) %x, { i8*, i64 }* align 8 dereferenceable(16) %y) unnamed_addr #0 {
start:
; call core::ptr::swap_nonoverlapping_one
  call void @_ZN4core3ptr23swap_nonoverlapping_one17hd564d9b243055803E({ i8*, i64 }* mpk_unsafe %x, { i8*, i64 }* mpk_unsafe %y), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::swap
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem4swap17h8d528d52fb8ebde1E({ i64*, i64 }* align 8 dereferenceable(16) %x, { i64*, i64 }* align 8 dereferenceable(16) %y) unnamed_addr #0 {
start:
; call core::ptr::swap_nonoverlapping_one
  call void @_ZN4core3ptr23swap_nonoverlapping_one17h38e29042fe1d0b59E({ i64*, i64 }* mpk_unsafe %x, { i64*, i64 }* mpk_unsafe %y), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::swap
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem4swap17hb000e5ae7e165621E(i64* align 8 dereferenceable(8) %x, i64* align 8 dereferenceable(8) %y) unnamed_addr #0 {
start:
; call core::ptr::swap_nonoverlapping_one
  call void @_ZN4core3ptr23swap_nonoverlapping_one17h622c64681fa30c2dE(i64* mpk_unsafe %x, i64* mpk_unsafe %y), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::take
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN4core3mem4take17h086bdabf0b4d15ebE({ i8*, i64 }* align 8 dereferenceable(16) %dest) unnamed_addr #0 {
start:
; call <core::option::Option<T> as core::default::Default>::default
  %0 = call { i8*, i64 } @"_ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h8c9221f3229e5336E"()
  %_3.0 = extractvalue { i8*, i64 } %0, 0
  %_3.1 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::replace
  %1 = call { i8*, i64 } @_ZN4core3mem7replace17hda7c329bbdd15937E({ i8*, i64 }* align 8 dereferenceable(16) %dest, i8* mpk_immut noalias readonly align 1 %_3.0, i64 %_3.1)
  %2 = extractvalue { i8*, i64 } %1, 0
  %3 = extractvalue { i8*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i8*, i64 } undef, i8* %2, 0
  %5 = insertvalue { i8*, i64 } %4, i64 %3, 1
  ret { i8*, i64 } %5
}

; core::mem::take
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64*, i64 } @_ZN4core3mem4take17hca945d2c967eca45E({ i64*, i64 }* align 8 dereferenceable(16) %dest) unnamed_addr #0 {
start:
; call <core::option::Option<T> as core::default::Default>::default
  %0 = call { i64*, i64 } @"_ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h94811efe173bb29dE"()
  %_3.0 = extractvalue { i64*, i64 } %0, 0
  %_3.1 = extractvalue { i64*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::replace
  %1 = call { i64*, i64 } @_ZN4core3mem7replace17he69fc30503b5579cE({ i64*, i64 }* align 8 dereferenceable(16) %dest, i64* mpk_immut %_3.0, i64 %_3.1)
  %2 = extractvalue { i64*, i64 } %1, 0
  %3 = extractvalue { i64*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64*, i64 } undef, i64* %2, 0
  %5 = insertvalue { i64*, i64 } %4, i64 %3, 1
  ret { i64*, i64 } %5
}

; core::mem::forget
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem6forget17h2ee503e9785972d4E(i64* align 8 dereferenceable(56) %t) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  store i64* %t, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !11
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::forget
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem6forget17h31500c94f1a86283E() unnamed_addr #0 {
start:
  %0 = alloca %"std::mem::ManuallyDrop<alloc::collections::btree::mem::replace::PanicGuard>", align 1
  %1 = bitcast %"std::mem::ManuallyDrop<alloc::collections::btree::mem::replace::PanicGuard>"* %0 to %"alloc::collections::btree::mem::replace::PanicGuard"*
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3mem7replace17h58124cfc911d8b54E(i64* align 8 dereferenceable(8) %dest, i64 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
; invoke core::mem::swap
  invoke void @_ZN4core3mem4swap17hb000e5ae7e165621E(i64* align 8 dereferenceable(8) %dest, i64* align 8 dereferenceable(8) %src)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = load i64, i64* %src, align 8
  ret i64 %2

bb2:                                              ; preds = %cleanup
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast { i8*, i32 }* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

cleanup:                                          ; preds = %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb2
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN4core3mem7replace17hda7c329bbdd15937E({ i8*, i64 }* align 8 dereferenceable(16) %dest, i8* mpk_immut noalias readonly align 1 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %src = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; invoke core::mem::swap
  invoke void @_ZN4core3mem4swap17h608990769002651fE({ i8*, i64 }* align 8 dereferenceable(16) %dest, { i8*, i64 }* align 8 dereferenceable(16) %src)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10

bb2:                                              ; preds = %cleanup
  br label %bb3

bb3:                                              ; preds = %bb2
  %11 = bitcast { i8*, i32 }* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

cleanup:                                          ; preds = %start
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb2
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64*, i64 } @_ZN4core3mem7replace17he69fc30503b5579cE({ i64*, i64 }* align 8 dereferenceable(16) %dest, i64* mpk_immut %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %src = alloca { i64*, i64 }, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %src, i32 0, i32 0
  store i64* %0, i64** %3, align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %src, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; invoke core::mem::swap
  invoke void @_ZN4core3mem4swap17h8d528d52fb8ebde1E({ i64*, i64 }* align 8 dereferenceable(16) %dest, { i64*, i64 }* align 8 dereferenceable(16) %src)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %src, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %src, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64*, i64 } undef, i64* %6, 0
  %10 = insertvalue { i64*, i64 } %9, i64 %8, 1
  ret { i64*, i64 } %10

bb2:                                              ; preds = %cleanup
  br label %bb3

bb3:                                              ; preds = %bb2
  %11 = bitcast { i8*, i32 }* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

cleanup:                                          ; preds = %start
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb2
}

; core::num::<impl usize>::wrapping_sub
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h999568d552da1079E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = sub i64 %self, %rhs
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::num::<impl usize>::unchecked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h1fb6f4d4d849c880E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8, !MPK-Unsafe !4
  %1 = add nuw i64 %self, %rhs
  store i64 %1, i64* %0, align 8, !MPK-Unsafe !4
  %2 = load i64, i64* %0, align 8, !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::num::nonzero::NonZeroUsize::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hbd44f6aa1a738923E(i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 %n, i64* %0, align 8, !MPK-Unsafe !4
  %1 = load i64, i64* %0, align 8, !range !20, !MPK-Unsafe !4
  ret i64 %1
}

; core::num::nonzero::NonZeroUsize::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize3get17h9441cfddde214715E(i64 %self) unnamed_addr #0 {
start:
  ret i64 %self
}

; core::ops::function::FnOnce::call_once{{vtable.shim}}
; Function Attrs: nonlazybind uwtable
define internal i32 @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h6057d75396c583c5E"(i64** %_1) unnamed_addr #1 {
start:
  %_2 = alloca {}, align 1
  %0 = load i64*, i64** %_1, align 8, !nonnull !11
; call core::ops::function::FnOnce::call_once
  %1 = call i32 @_ZN4core3ops8function6FnOnce9call_once17h5d2da39c98998f58E(i64* mpk_immut nonnull %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %1
}

; core::ops::function::FnOnce::call_once
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN4core3ops8function6FnOnce9call_once17h5d2da39c98998f58E(i64* mpk_immut nonnull %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
; invoke std::rt::lang_start::{{closure}}
  %2 = invoke i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hd348c98e2a8984ebE"(i64** mpk_immut noalias readonly align 8 dereferenceable(8) %_1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %2

bb3:                                              ; preds = %cleanup
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = bitcast { i8*, i32 }* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

cleanup:                                          ; preds = %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb3
}

; core::ops::function::FnOnce::call_once
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hb0f61a47df5fc4b8E(void ()* mpk_immut nonnull %_1) unnamed_addr #1 {
start:
  %_2 = alloca {}, align 1
  call void %_1()
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h0592225f2e5a8517E(%"std::vec::Vec<u8>"* mpk_unsafe %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca {}, align 1
; invoke <alloc::vec::Vec<T> as core::ops::drop::Drop>::drop
  invoke void @"_ZN66_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6866992f80b914bfE"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %bb4
  ret void

bb3:                                              ; preds = %cleanup
  %8 = bitcast %"std::vec::Vec<u8>"* %_1 to { i8*, i64 }*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h479b92c3af0671e7E({ i8*, i64 }* mpk_unsafe %8) #14
  br label %bb1

bb4:                                              ; preds = %start
  %9 = bitcast %"std::vec::Vec<u8>"* %_1 to { i8*, i64 }*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h479b92c3af0671e7E({ i8*, i64 }* mpk_unsafe %9)
  br label %bb2

cleanup:                                          ; preds = %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h15044d78c9130bbcE(%"std::string::FromUtf8Error"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::string::FromUtf8Error"* %_1 to %"std::vec::Vec<u8>"*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h0592225f2e5a8517E(%"std::vec::Vec<u8>"* mpk_unsafe %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h1759f50957095470E(%"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
; call <alloc::collections::btree::map::IntoIter<K,V> as core::ops::drop::Drop>::drop
  call void @"_ZN95_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h92b4c7d6b1a5c70cE"(%"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* align 8 dereferenceable(56) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h17f93f402ea08f25E(%"std::option::Option<std::string::String>"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::option::Option<std::string::String>"* %_1 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %5 = bitcast %"std::option::Option<std::string::String>"* %_1 to %"std::option::Option<std::string::String>::Some"*, !MPK-SmartPointer !3
  %6 = bitcast %"std::option::Option<std::string::String>::Some"* %5 to %"std::string::String"*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hfe01a2209d12e44fE(%"std::string::String"* mpk_unsafe %6)
  br label %bb1
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h1c04a91a46ba443aE({ i64*, i64 }* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha6e53f2a326b4a25E"({ i64*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h1c15b6b5a50c6108E({ i32, i32 }* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast { i32, i32 }* %_1 to i32*
  %2 = load i32, i32* %1, align 4, !range !21
  %_2 = zext i32 %2 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb1
    i64 2, label %bb1
  ]

bb1:                                              ; preds = %bb2, %start, %start, %start
  ret void

bb2:                                              ; preds = %start
  %3 = bitcast { i32, i32 }* %_1 to %"std::sys::unix::process::process_common::Stdio::Fd"*
  %4 = getelementptr inbounds %"std::sys::unix::process::process_common::Stdio::Fd", %"std::sys::unix::process::process_common::Stdio::Fd"* %3, i32 0, i32 1
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h73d04c2fb784f501E(i32* mpk_unsafe %4)
  br label %bb1
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h1d020f0f820367deE(%"std::sys::unix::process::process_common::Command"* mpk_unsafe %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca {}, align 1
  %2 = bitcast %"std::sys::unix::process::process_common::Command"* %_1 to { i8*, i64 }*, !MPK-SmartPointer !3
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17hf3ed581a016a95f4E({ i8*, i64 }* mpk_unsafe %2)
          to label %bb18 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %3 = bitcast { i8*, i32 }* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %bb11
  ret void

bb3:                                              ; preds = %cleanup7, %bb4
  %9 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 21
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h9dbc41f7253da0b9E({ i32, i32 }* mpk_unsafe %9) #14
  br label %bb1

bb4:                                              ; preds = %cleanup6, %bb5
  %10 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 19
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h9dbc41f7253da0b9E({ i32, i32 }* mpk_unsafe %10) #14
  br label %bb3

bb5:                                              ; preds = %cleanup5, %bb6
  %11 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 17
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h9dbc41f7253da0b9E({ i32, i32 }* mpk_unsafe %11) #14
  br label %bb4

bb6:                                              ; preds = %cleanup4, %bb7
  %12 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 11, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hdf09b7504cd3b20cE(%"std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>"* mpk_unsafe %12) #14
  br label %bb5

bb7:                                              ; preds = %cleanup3, %bb8
  %13 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 9
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h44c2f6fcf054ebfcE({ i8*, i64 }* mpk_unsafe %13) #14
  br label %bb6

bb8:                                              ; preds = %cleanup2, %bb9
  %14 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 7
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17ha6a935f79191a843E(%"std::sys_common::process::CommandEnv"* mpk_unsafe %14) #14
  br label %bb7

bb9:                                              ; preds = %cleanup1, %bb10
  %15 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 5, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hf9cf17716b6f560dE(%"std::sys::unix::process::process_common::Argv"* mpk_unsafe %15) #14
  br label %bb8

bb10:                                             ; preds = %cleanup
  %16 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 3, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h4dbdd84b5e785a0dE(%"std::vec::Vec<std::ffi::CString>"* mpk_unsafe %16) #14
  br label %bb9

bb11:                                             ; preds = %bb12
  %17 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 21
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h9dbc41f7253da0b9E({ i32, i32 }* mpk_unsafe %17)
  br label %bb2

bb12:                                             ; preds = %bb13
  %18 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 19
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17h9dbc41f7253da0b9E({ i32, i32 }* mpk_unsafe %18)
          to label %bb11 unwind label %cleanup7

bb13:                                             ; preds = %bb14
  %19 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 17
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17h9dbc41f7253da0b9E({ i32, i32 }* mpk_unsafe %19)
          to label %bb12 unwind label %cleanup6

bb14:                                             ; preds = %bb15
  %20 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 11, !MPK-SmartPointer !3
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17hdf09b7504cd3b20cE(%"std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>"* mpk_unsafe %20)
          to label %bb13 unwind label %cleanup5

bb15:                                             ; preds = %bb16
  %21 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 9
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17h44c2f6fcf054ebfcE({ i8*, i64 }* mpk_unsafe %21)
          to label %bb14 unwind label %cleanup4

bb16:                                             ; preds = %bb17
  %22 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 7
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17ha6a935f79191a843E(%"std::sys_common::process::CommandEnv"* mpk_unsafe %22)
          to label %bb15 unwind label %cleanup3

bb17:                                             ; preds = %bb18
  %23 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 5, !MPK-SmartPointer !3
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17hf9cf17716b6f560dE(%"std::sys::unix::process::process_common::Argv"* mpk_unsafe %23)
          to label %bb16 unwind label %cleanup2

bb18:                                             ; preds = %start
  %24 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 3, !MPK-SmartPointer !3
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17h4dbdd84b5e785a0dE(%"std::vec::Vec<std::ffi::CString>"* mpk_unsafe %24)
          to label %bb17 unwind label %cleanup1

cleanup:                                          ; preds = %start
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb10

cleanup1:                                         ; preds = %bb18
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  %32 = extractvalue { i8*, i32 } %30, 1
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %32, i32* %34, align 8
  br label %bb9

cleanup2:                                         ; preds = %bb17
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  %37 = extractvalue { i8*, i32 } %35, 1
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %37, i32* %39, align 8
  br label %bb8

cleanup3:                                         ; preds = %bb16
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  %42 = extractvalue { i8*, i32 } %40, 1
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %42, i32* %44, align 8
  br label %bb7

cleanup4:                                         ; preds = %bb15
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  %47 = extractvalue { i8*, i32 } %45, 1
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %46, i8** %48, align 8
  %49 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %47, i32* %49, align 8
  br label %bb6

cleanup5:                                         ; preds = %bb14
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  %52 = extractvalue { i8*, i32 } %50, 1
  %53 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %51, i8** %53, align 8
  %54 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %52, i32* %54, align 8
  br label %bb5

cleanup6:                                         ; preds = %bb13
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  %57 = extractvalue { i8*, i32 } %55, 1
  %58 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %56, i8** %58, align 8
  %59 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %57, i32* %59, align 8
  br label %bb4

cleanup7:                                         ; preds = %bb12
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  %62 = extractvalue { i8*, i32 } %60, 1
  %63 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %61, i8** %63, align 8
  %64 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %62, i32* %64, align 8
  br label %bb3
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h26de53b5c7c7408dE(%"std::io::Error"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::io::Error"* %_1 to %"std::io::error::Repr"*
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hb4c0f7bc5175aadfE(%"std::io::error::Repr"* mpk_unsafe %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h2e2f2b92ae86869fE([0 x { {}*, [3 x i64]* }]* mpk_unsafe %_1.0, i64 %_1.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca { {}*, [3 x i64]* }*, align 8
  %_9 = alloca { {}*, [3 x i64]* }*, align 8
  %_4 = alloca i64, align 8
  %1 = alloca {}, align 1
  br i1 false, label %bb7, label %bb12

bb1:                                              ; preds = %bb6, %bb11
  ret void

bb2:                                              ; preds = %bb4, %bb9
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb3:                                              ; preds = %bb4
  %8 = load i64, i64* %_4, align 8
  %_5 = getelementptr inbounds [0 x { {}*, [3 x i64]* }], [0 x { {}*, [3 x i64]* }]* %_1.0, i64 0, i64 %8, !MPK-SmartPointer !3
  %9 = load i64, i64* %_4, align 8
  %10 = add i64 %9, 1
  store i64 %10, i64* %_4, align 8
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h8c3f4ebaec6a2ee1E({ {}*, [3 x i64]* }* mpk_unsafe %_5) #14
  br label %bb4

bb4:                                              ; preds = %bb3, %cleanup1
  %11 = load i64, i64* %_4, align 8
  %_6 = icmp eq i64 %11, %_1.1
  br i1 %_6, label %bb2, label %bb3

bb5:                                              ; preds = %bb6
  %12 = load i64, i64* %_4, align 8
  %_7 = getelementptr inbounds [0 x { {}*, [3 x i64]* }], [0 x { {}*, [3 x i64]* }]* %_1.0, i64 0, i64 %12, !MPK-SmartPointer !3
  %13 = load i64, i64* %_4, align 8
  %14 = add i64 %13, 1
  store i64 %14, i64* %_4, align 8
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17h8c3f4ebaec6a2ee1E({ {}*, [3 x i64]* }* mpk_unsafe %_7)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5, %bb7
  %15 = load i64, i64* %_4, align 8
  %_8 = icmp eq i64 %15, %_1.1
  br i1 %_8, label %bb1, label %bb5

bb7:                                              ; preds = %start
  store i64 0, i64* %_4, align 8
  br label %bb6

bb8:                                              ; preds = %bb9
  %_11 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8
  %16 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8
  %17 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %16, i64 1
  store { {}*, [3 x i64]* }* %17, { {}*, [3 x i64]* }** %_9, align 8
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h8c3f4ebaec6a2ee1E({ {}*, [3 x i64]* }* mpk_unsafe %_11) #14
  br label %bb9

bb9:                                              ; preds = %bb8, %cleanup
  %18 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8
  %19 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_10, align 8
  %_12 = icmp eq { {}*, [3 x i64]* }* %18, %19
  br i1 %_12, label %bb2, label %bb8

bb10:                                             ; preds = %bb11
  %_13 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8
  %20 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8
  %21 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %20, i64 1
  store { {}*, [3 x i64]* }* %21, { {}*, [3 x i64]* }** %_9, align 8
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17h8c3f4ebaec6a2ee1E({ {}*, [3 x i64]* }* mpk_unsafe %_13)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10, %bb12
  %22 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8
  %23 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_10, align 8
  %_14 = icmp eq { {}*, [3 x i64]* }* %22, %23
  br i1 %_14, label %bb1, label %bb10

bb12:                                             ; preds = %start
  %24 = bitcast [0 x { {}*, [3 x i64]* }]* %_1.0 to { {}*, [3 x i64]* }*
  store { {}*, [3 x i64]* }* %24, { {}*, [3 x i64]* }** %_9, align 8
  %25 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8
  %26 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %25, i64 %_1.1
  store { {}*, [3 x i64]* }* %26, { {}*, [3 x i64]* }** %_10, align 8
  br label %bb11

cleanup:                                          ; preds = %bb10
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb9

cleanup1:                                         ; preds = %bb5
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  %34 = extractvalue { i8*, i32 } %32, 1
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %34, i32* %36, align 8
  br label %bb4
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h32fa2c2880276104E(%"std::io::error::Custom"** mpk_unsafe %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca {}, align 1
  %2 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %_1, align 8, !nonnull !11
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17hea3a2cbe5209647fE(%"std::io::error::Custom"* mpk_unsafe %2)
          to label %bb3 unwind label %cleanup

bb1:                                              ; preds = %bb3
  ret void

bb2:                                              ; preds = %bb4
  %3 = bitcast { i8*, i32 }* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb3:                                              ; preds = %start
  %9 = bitcast %"std::io::error::Custom"** %_1 to i64**
  %10 = load i64*, i64** %9, align 8, !nonnull !11
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h4455a2f220e81425E(i64* mpk_immut mpk_unsafe nonnull %10)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %11 = bitcast %"std::io::error::Custom"** %_1 to i64**
  %12 = load i64*, i64** %11, align 8, !nonnull !11
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h4455a2f220e81425E(i64* mpk_immut mpk_unsafe nonnull %12) #14
  br label %bb2

cleanup:                                          ; preds = %start
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb4
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h36ecb83222f60ff1E(%"std::process::Command"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::process::Command"* %_1 to %"std::sys::unix::process::process_common::Command"*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h1d020f0f820367deE(%"std::sys::unix::process::process_common::Command"* mpk_unsafe %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h3fa3e3c7da331285E([0 x { i8*, i64 }]* mpk_unsafe %_1.0, i64 %_1.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca { i8*, i64 }*, align 8
  %_9 = alloca { i8*, i64 }*, align 8
  %_4 = alloca i64, align 8
  %1 = alloca {}, align 1
  br i1 false, label %bb7, label %bb12

bb1:                                              ; preds = %bb6, %bb11
  ret void

bb2:                                              ; preds = %bb4, %bb9
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb3:                                              ; preds = %bb4
  %8 = load i64, i64* %_4, align 8
  %_5 = getelementptr inbounds [0 x { i8*, i64 }], [0 x { i8*, i64 }]* %_1.0, i64 0, i64 %8, !MPK-SmartPointer !3
  %9 = load i64, i64* %_4, align 8
  %10 = add i64 %9, 1
  store i64 %10, i64* %_4, align 8
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hf3ed581a016a95f4E({ i8*, i64 }* mpk_unsafe %_5) #14
  br label %bb4

bb4:                                              ; preds = %bb3, %cleanup1
  %11 = load i64, i64* %_4, align 8
  %_6 = icmp eq i64 %11, %_1.1
  br i1 %_6, label %bb2, label %bb3

bb5:                                              ; preds = %bb6
  %12 = load i64, i64* %_4, align 8
  %_7 = getelementptr inbounds [0 x { i8*, i64 }], [0 x { i8*, i64 }]* %_1.0, i64 0, i64 %12, !MPK-SmartPointer !3
  %13 = load i64, i64* %_4, align 8
  %14 = add i64 %13, 1
  store i64 %14, i64* %_4, align 8
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17hf3ed581a016a95f4E({ i8*, i64 }* mpk_unsafe %_7)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5, %bb7
  %15 = load i64, i64* %_4, align 8
  %_8 = icmp eq i64 %15, %_1.1
  br i1 %_8, label %bb1, label %bb5

bb7:                                              ; preds = %start
  store i64 0, i64* %_4, align 8
  br label %bb6

bb8:                                              ; preds = %bb9
  %_11 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8
  %16 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %16, i64 1
  store { i8*, i64 }* %17, { i8*, i64 }** %_9, align 8
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hf3ed581a016a95f4E({ i8*, i64 }* mpk_unsafe %_11) #14
  br label %bb9

bb9:                                              ; preds = %bb8, %cleanup
  %18 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8
  %19 = load { i8*, i64 }*, { i8*, i64 }** %_10, align 8
  %_12 = icmp eq { i8*, i64 }* %18, %19
  br i1 %_12, label %bb2, label %bb8

bb10:                                             ; preds = %bb11
  %_13 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8
  %20 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %20, i64 1
  store { i8*, i64 }* %21, { i8*, i64 }** %_9, align 8
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17hf3ed581a016a95f4E({ i8*, i64 }* mpk_unsafe %_13)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10, %bb12
  %22 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8
  %23 = load { i8*, i64 }*, { i8*, i64 }** %_10, align 8
  %_14 = icmp eq { i8*, i64 }* %22, %23
  br i1 %_14, label %bb1, label %bb10

bb12:                                             ; preds = %start
  %24 = bitcast [0 x { i8*, i64 }]* %_1.0 to { i8*, i64 }*
  store { i8*, i64 }* %24, { i8*, i64 }** %_9, align 8
  %25 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i64 %_1.1
  store { i8*, i64 }* %26, { i8*, i64 }** %_10, align 8
  br label %bb11

cleanup:                                          ; preds = %bb10
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb9

cleanup1:                                         ; preds = %bb5
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  %34 = extractvalue { i8*, i32 } %32, 1
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %34, i32* %36, align 8
  br label %bb4
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h3fdd954428b77804E({ [0 x i8]*, i64 }* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h44c2f6fcf054ebfcE({ i8*, i64 }* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast { i8*, i64 }* %_1 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hf3ed581a016a95f4E({ i8*, i64 }* mpk_unsafe %_1)
  br label %bb1
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h479b92c3af0671e7E({ i8*, i64 }* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hce5a047a21cd9753E"({ i8*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h49c15d43aee983b9E(%"std::ffi::OsString"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::ffi::OsString"* %_1 to %"std::sys_common::os_str_bytes::Buf"*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h827fa1cad6141adeE(%"std::sys_common::os_str_bytes::Buf"* mpk_unsafe %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h4ad6c62a92b0352aE({ [0 x i8]*, i64 }* mpk_unsafe %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca {}, align 1
  br label %bb3

bb1:                                              ; preds = %bb3
  ret void

bb2:                                              ; preds = %bb4
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb3:                                              ; preds = %start
  %8 = bitcast { [0 x i8]*, i64 }* %_1 to { i8*, i64 }*, !MPK-SmartPointer !3
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !nonnull !11
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %8, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17he22ada79ae88b798E(i8* mpk_immut mpk_unsafe nonnull %10, i64 %12)
  br label %bb1

bb4:                                              ; No predecessors!
  %13 = bitcast { [0 x i8]*, i64 }* %_1 to { i8*, i64 }*, !MPK-SmartPointer !3
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8, !nonnull !11
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17he22ada79ae88b798E(i8* mpk_immut mpk_unsafe nonnull %15, i64 %17) #14
  br label %bb2
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h4dbdd84b5e785a0dE(%"std::vec::Vec<std::ffi::CString>"* mpk_unsafe %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca {}, align 1
; invoke <alloc::vec::Vec<T> as core::ops::drop::Drop>::drop
  invoke void @"_ZN66_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hff8afa11dd02e002E"(%"std::vec::Vec<std::ffi::CString>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %bb4
  ret void

bb3:                                              ; preds = %cleanup
  %8 = bitcast %"std::vec::Vec<std::ffi::CString>"* %_1 to { i64*, i64 }*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h1c04a91a46ba443aE({ i64*, i64 }* mpk_unsafe %8) #14
  br label %bb1

bb4:                                              ; preds = %start
  %9 = bitcast %"std::vec::Vec<std::ffi::CString>"* %_1 to { i64*, i64 }*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h1c04a91a46ba443aE({ i64*, i64 }* mpk_unsafe %9)
  br label %bb2

cleanup:                                          ; preds = %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h51be0da9827be877E(%"std::option::Option<std::process::Output>"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::option::Option<std::process::Output>"* %_1 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %5 = bitcast %"std::option::Option<std::process::Output>"* %_1 to %"std::option::Option<std::process::Output>::Some"*, !MPK-SmartPointer !3
  %6 = bitcast %"std::option::Option<std::process::Output>::Some"* %5 to %"std::process::Output"*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17ha20829f1fc27472eE(%"std::process::Output"* mpk_unsafe %6)
  br label %bb1
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h5212006b1c28ee73E(i64** mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
; call <<alloc::collections::btree::map::IntoIter<K,V> as core::ops::drop::Drop>::drop::DropGuard<K,V> as core::ops::drop::Drop>::drop
  call void @"_ZN166_$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$K$C$V$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0988e0d5cbda9ad4E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h5431fb575a1b2b7eE({ [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* mpk_unsafe %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca {}, align 1
  %2 = bitcast { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* %_1 to %"std::ffi::OsString"*, !MPK-SmartPointer !3
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17h49c15d43aee983b9E(%"std::ffi::OsString"* mpk_unsafe %2)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %3 = bitcast { i8*, i32 }* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %bb4
  ret void

bb3:                                              ; preds = %cleanup
  %9 = getelementptr inbounds { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* %_1, i32 0, i32 3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hb0f6c901d3550874E(%"std::option::Option<std::ffi::OsString>"* mpk_unsafe %9) #14
  br label %bb1

bb4:                                              ; preds = %start
  %10 = getelementptr inbounds { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* %_1, i32 0, i32 3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hb0f6c901d3550874E(%"std::option::Option<std::ffi::OsString>"* mpk_unsafe %10)
  br label %bb2

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h57d158dc9267f3f5E({ i64*, i64 }* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h26318d665f610598E"({ i64*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h57db1d16fc703566E(%"std::result::Result<std::process::Output, std::io::Error>"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::result::Result<std::process::Output, std::io::Error>"* %_1 to i64*
  %_2 = load i64, i64* %1, align 8, !range !22
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb2, label %bb3

bb1:                                              ; preds = %bb2, %bb3
  ret void

bb2:                                              ; preds = %start
  %3 = bitcast %"std::result::Result<std::process::Output, std::io::Error>"* %_1 to %"std::result::Result<std::process::Output, std::io::Error>::Ok"*
  %4 = getelementptr inbounds %"std::result::Result<std::process::Output, std::io::Error>::Ok", %"std::result::Result<std::process::Output, std::io::Error>::Ok"* %3, i32 0, i32 1, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17ha20829f1fc27472eE(%"std::process::Output"* mpk_unsafe %4)
  br label %bb1

bb3:                                              ; preds = %start
  %5 = bitcast %"std::result::Result<std::process::Output, std::io::Error>"* %_1 to %"std::result::Result<std::process::Output, std::io::Error>::Err"*
  %6 = getelementptr inbounds %"std::result::Result<std::process::Output, std::io::Error>::Err", %"std::result::Result<std::process::Output, std::io::Error>::Err"* %5, i32 0, i32 1
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h26de53b5c7c7408dE(%"std::io::Error"* mpk_unsafe %6)
  br label %bb1
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h5ab18b5d7132d8deE(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::result::Result<std::string::String, std::env::VarError>"* %_1 to i64*
  %_2 = load i64, i64* %1, align 8, !range !22
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb2, label %bb3

bb1:                                              ; preds = %bb2, %bb3
  ret void

bb2:                                              ; preds = %start
  %3 = bitcast %"std::result::Result<std::string::String, std::env::VarError>"* %_1 to %"std::result::Result<std::string::String, std::env::VarError>::Ok"*
  %4 = getelementptr inbounds %"std::result::Result<std::string::String, std::env::VarError>::Ok", %"std::result::Result<std::string::String, std::env::VarError>::Ok"* %3, i32 0, i32 1, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hfe01a2209d12e44fE(%"std::string::String"* mpk_unsafe %4)
  br label %bb1

bb3:                                              ; preds = %start
  %5 = bitcast %"std::result::Result<std::string::String, std::env::VarError>"* %_1 to %"std::result::Result<std::string::String, std::env::VarError>::Err"*
  %6 = getelementptr inbounds %"std::result::Result<std::string::String, std::env::VarError>::Err", %"std::result::Result<std::string::String, std::env::VarError>::Err"* %5, i32 0, i32 1
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h6b6f8efc5b8c5f97E(%"std::env::VarError"* mpk_unsafe %6)
  br label %bb1
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h69c80585bdf43786E(%"alloc::collections::btree::mem::replace::PanicGuard"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
; call <alloc::collections::btree::mem::replace::PanicGuard as core::ops::drop::Drop>::drop
  call void @"_ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17h198c1cd303f9370fE"(%"alloc::collections::btree::mem::replace::PanicGuard"* nonnull align 1 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h6b6f8efc5b8c5f97E(%"std::env::VarError"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::env::VarError"* %_1 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %5 = bitcast %"std::env::VarError"* %_1 to %"std::env::VarError::NotUnicode"*, !MPK-SmartPointer !3
  %6 = bitcast %"std::env::VarError::NotUnicode"* %5 to %"std::ffi::OsString"*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h49c15d43aee983b9E(%"std::ffi::OsString"* mpk_unsafe %6)
  br label %bb1
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h6dcb5b07ab431932E({ i64*, i64 }* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9318fa4bea3d6f12E"({ i64*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h73d04c2fb784f501E(i32* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
; call <std::sys::unix::fd::FileDesc as core::ops::drop::Drop>::drop
  call void @"_ZN70_$LT$std..sys..unix..fd..FileDesc$u20$as$u20$core..ops..drop..Drop$GT$4drop17hdec7a096768d2599E"(i32* align 4 dereferenceable(4) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h7d1ede6c737d7b35E(%"std::result::Result<std::string::String, std::string::FromUtf8Error>"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::result::Result<std::string::String, std::string::FromUtf8Error>"* %_1 to i64*
  %_2 = load i64, i64* %1, align 8, !range !22
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb2, label %bb3

bb1:                                              ; preds = %bb2, %bb3
  ret void

bb2:                                              ; preds = %start
  %3 = bitcast %"std::result::Result<std::string::String, std::string::FromUtf8Error>"* %_1 to %"std::result::Result<std::string::String, std::string::FromUtf8Error>::Ok"*
  %4 = getelementptr inbounds %"std::result::Result<std::string::String, std::string::FromUtf8Error>::Ok", %"std::result::Result<std::string::String, std::string::FromUtf8Error>::Ok"* %3, i32 0, i32 1, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hfe01a2209d12e44fE(%"std::string::String"* mpk_unsafe %4)
  br label %bb1

bb3:                                              ; preds = %start
  %5 = bitcast %"std::result::Result<std::string::String, std::string::FromUtf8Error>"* %_1 to %"std::result::Result<std::string::String, std::string::FromUtf8Error>::Err"*
  %6 = getelementptr inbounds %"std::result::Result<std::string::String, std::string::FromUtf8Error>::Err", %"std::result::Result<std::string::String, std::string::FromUtf8Error>::Err"* %5, i32 0, i32 1, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h15044d78c9130bbcE(%"std::string::FromUtf8Error"* mpk_unsafe %6)
  br label %bb1
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h821ccf0581b71f8cE({}* mpk_unsafe %_1.0, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24) %_1.1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast [3 x i64]* %_1.1 to void ({}*)**
  %2 = getelementptr inbounds void ({}*)*, void ({}*)** %1, i64 0
  %3 = load void ({}*)*, void ({}*)** %2, align 8, !invariant.load !11, !nonnull !11
  call void %3({}* mpk_unsafe %_1.0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h827fa1cad6141adeE(%"std::sys_common::os_str_bytes::Buf"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::sys_common::os_str_bytes::Buf"* %_1 to %"std::vec::Vec<u8>"*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h0592225f2e5a8517E(%"std::vec::Vec<u8>"* mpk_unsafe %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h8c3f4ebaec6a2ee1E({ {}*, [3 x i64]* }* mpk_unsafe %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca {}, align 1
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 0
  %3 = load {}*, {}** %2, align 8, !nonnull !11
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 1
  %5 = load [3 x i64]*, [3 x i64]** %4, align 8, !nonnull !11
  %6 = bitcast [3 x i64]* %5 to void ({}*)**
  %7 = getelementptr inbounds void ({}*)*, void ({}*)** %6, i64 0
  %8 = load void ({}*)*, void ({}*)** %7, align 8, !invariant.load !11, !nonnull !11
  invoke void %8({}* mpk_unsafe %3)
          to label %bb3 unwind label %cleanup

bb1:                                              ; preds = %bb3
  ret void

bb2:                                              ; preds = %bb4
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb3:                                              ; preds = %start
  %15 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %16 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %15, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8, !nonnull !11
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %15, i32 0, i32 1
  %19 = load i64*, i64** %18, align 8, !nonnull !11
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h9a908ac3ace5b65eE(i8* mpk_immut mpk_unsafe nonnull %17, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %19)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %20 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !nonnull !11
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 1
  %24 = load i64*, i64** %23, align 8, !nonnull !11
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h9a908ac3ace5b65eE(i8* mpk_immut mpk_unsafe nonnull %22, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %24) #14
  br label %bb2

cleanup:                                          ; preds = %start
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb4
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h8eabf9d941115d8bE(i64** mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17h9dbc41f7253da0b9E({ i32, i32 }* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast { i32, i32 }* %_1 to i32*
  %2 = load i32, i32* %1, align 4, !range !23
  %3 = sub i32 %2, 4
  %4 = icmp eq i32 %3, 0
  %_2 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_2, 0
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h1c15b6b5a50c6108E({ i32, i32 }* mpk_unsafe %_1)
  br label %bb1
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17ha20829f1fc27472eE(%"std::process::Output"* mpk_unsafe %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca {}, align 1
  %2 = bitcast %"std::process::Output"* %_1 to %"std::vec::Vec<u8>"*, !MPK-SmartPointer !3
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17h0592225f2e5a8517E(%"std::vec::Vec<u8>"* mpk_unsafe %2)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %3 = bitcast { i8*, i32 }* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %bb4
  ret void

bb3:                                              ; preds = %cleanup
  %9 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %_1, i32 0, i32 3, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h0592225f2e5a8517E(%"std::vec::Vec<u8>"* mpk_unsafe %9) #14
  br label %bb1

bb4:                                              ; preds = %start
  %10 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %_1, i32 0, i32 3, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h0592225f2e5a8517E(%"std::vec::Vec<u8>"* mpk_unsafe %10)
  br label %bb2

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17ha23f37a31aa7b255E({}* mpk_unsafe %_1.0, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24) %_1.1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast [3 x i64]* %_1.1 to void ({}*)**
  %2 = getelementptr inbounds void ({}*)*, void ({}*)** %1, i64 0
  %3 = load void ({}*)*, void ({}*)** %2, align 8, !invariant.load !11, !nonnull !11
  call void %3({}* mpk_unsafe %_1.0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17ha6a935f79191a843E(%"std::sys_common::process::CommandEnv"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::sys_common::process::CommandEnv"* %_1 to %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hacbad922eba55da9E(%"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* mpk_unsafe %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17hacbad922eba55da9E(%"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
; call <alloc::collections::btree::map::BTreeMap<K,V> as core::ops::drop::Drop>::drop
  call void @"_ZN95_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6f7c269257b901b2E"(%"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* align 8 dereferenceable(24) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17hb0f6c901d3550874E(%"std::option::Option<std::ffi::OsString>"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::option::Option<std::ffi::OsString>"* %_1 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %5 = bitcast %"std::option::Option<std::ffi::OsString>"* %_1 to %"std::option::Option<std::ffi::OsString>::Some"*, !MPK-SmartPointer !3
  %6 = bitcast %"std::option::Option<std::ffi::OsString>::Some"* %5 to %"std::ffi::OsString"*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h49c15d43aee983b9E(%"std::ffi::OsString"* mpk_unsafe %6)
  br label %bb1
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17hb4c0f7bc5175aadfE(%"std::io::error::Repr"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::io::error::Repr"* %_1 to i8*
  %2 = load i8, i8* %1, align 8, !range !24
  %_2 = zext i8 %2 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb1
  ]

bb1:                                              ; preds = %bb2, %start, %start
  ret void

bb2:                                              ; preds = %start
  %3 = bitcast %"std::io::error::Repr"* %_1 to %"std::io::error::Repr::Custom"*
  %4 = getelementptr inbounds %"std::io::error::Repr::Custom", %"std::io::error::Repr::Custom"* %3, i32 0, i32 1, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h32fa2c2880276104E(%"std::io::error::Custom"** mpk_unsafe %4)
  br label %bb1
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17hc737563cd16a9234E({}* mpk_unsafe %_1.0, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24) %_1.1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast [3 x i64]* %_1.1 to void ({}*)**
  %2 = getelementptr inbounds void ({}*)*, void ({}*)** %1, i64 0
  %3 = load void ({}*)*, void ({}*)** %2, align 8, !invariant.load !11, !nonnull !11
  call void %3({}* mpk_unsafe %_1.0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17hd01b63c27d4a87ecE(%"std::vec::Vec<*const i8>"* mpk_unsafe %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca {}, align 1
; invoke <alloc::vec::Vec<T> as core::ops::drop::Drop>::drop
  invoke void @"_ZN66_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h19d27d587856f3c7E"(%"std::vec::Vec<*const i8>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %bb4
  ret void

bb3:                                              ; preds = %cleanup
  %8 = bitcast %"std::vec::Vec<*const i8>"* %_1 to { i64*, i64 }*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h6dcb5b07ab431932E({ i64*, i64 }* mpk_unsafe %8) #14
  br label %bb1

bb4:                                              ; preds = %start
  %9 = bitcast %"std::vec::Vec<*const i8>"* %_1 to { i64*, i64 }*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h6dcb5b07ab431932E({ i64*, i64 }* mpk_unsafe %9)
  br label %bb2

cleanup:                                          ; preds = %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17hd86f672610b7d593E({ i8*, i64 }* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17hdf09b7504cd3b20cE(%"std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>"* mpk_unsafe %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca {}, align 1
; invoke <alloc::vec::Vec<T> as core::ops::drop::Drop>::drop
  invoke void @"_ZN66_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1eb2760529614e81E"(%"std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %bb4
  ret void

bb3:                                              ; preds = %cleanup
  %8 = bitcast %"std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>"* %_1 to { i64*, i64 }*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h57d158dc9267f3f5E({ i64*, i64 }* mpk_unsafe %8) #14
  br label %bb1

bb4:                                              ; preds = %start
  %9 = bitcast %"std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>"* %_1 to { i64*, i64 }*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h57d158dc9267f3f5E({ i64*, i64 }* mpk_unsafe %9)
  br label %bb2

cleanup:                                          ; preds = %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17hdfc8b089247fb3e6E(%"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>"* %_1 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %5 = bitcast %"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>"* %_1 to %"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>::Some"*
  %6 = bitcast %"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>::Some"* %5 to { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }*
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h5431fb575a1b2b7eE({ [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* mpk_unsafe %6)
  br label %bb1
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17he3198d92ddbebfc4E({ {}*, [3 x i64]* }* mpk_unsafe %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca {}, align 1
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 0
  %3 = load {}*, {}** %2, align 8, !nonnull !11
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 1
  %5 = load [3 x i64]*, [3 x i64]** %4, align 8, !nonnull !11
  %6 = bitcast [3 x i64]* %5 to void ({}*)**
  %7 = getelementptr inbounds void ({}*)*, void ({}*)** %6, i64 0
  %8 = load void ({}*)*, void ({}*)** %7, align 8, !invariant.load !11, !nonnull !11
  invoke void %8({}* mpk_unsafe %3)
          to label %bb3 unwind label %cleanup

bb1:                                              ; preds = %bb3
  ret void

bb2:                                              ; preds = %bb4
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb3:                                              ; preds = %start
  %15 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %16 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %15, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8, !nonnull !11
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %15, i32 0, i32 1
  %19 = load i64*, i64** %18, align 8, !nonnull !11
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hf917015f2501f83bE(i8* mpk_immut mpk_unsafe nonnull %17, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %19)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %20 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !nonnull !11
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 1
  %24 = load i64*, i64** %23, align 8, !nonnull !11
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hf917015f2501f83bE(i8* mpk_immut mpk_unsafe nonnull %22, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %24) #14
  br label %bb2

cleanup:                                          ; preds = %start
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb4
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17he94cfc3a4ca2a32bE({ {}*, [3 x i64]* }* mpk_unsafe %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca {}, align 1
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 0
  %3 = load {}*, {}** %2, align 8, !nonnull !11
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 1
  %5 = load [3 x i64]*, [3 x i64]** %4, align 8, !nonnull !11
  %6 = bitcast [3 x i64]* %5 to void ({}*)**
  %7 = getelementptr inbounds void ({}*)*, void ({}*)** %6, i64 0
  %8 = load void ({}*)*, void ({}*)** %7, align 8, !invariant.load !11, !nonnull !11
  invoke void %8({}* mpk_unsafe %3)
          to label %bb3 unwind label %cleanup

bb1:                                              ; preds = %bb3
  ret void

bb2:                                              ; preds = %bb4
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb3:                                              ; preds = %start
  %15 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %16 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %15, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8, !nonnull !11
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %15, i32 0, i32 1
  %19 = load i64*, i64** %18, align 8, !nonnull !11
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h166ac6f6983836c2E(i8* mpk_immut mpk_unsafe nonnull %17, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %19)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %20 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !nonnull !11
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 1
  %24 = load i64*, i64** %23, align 8, !nonnull !11
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h166ac6f6983836c2E(i8* mpk_immut mpk_unsafe nonnull %22, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %24) #14
  br label %bb2

cleanup:                                          ; preds = %start
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb4
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17hea3a2cbe5209647fE(%"std::io::error::Custom"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::io::error::Custom"* %_1 to { {}*, [3 x i64]* }*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17he3198d92ddbebfc4E({ {}*, [3 x i64]* }* mpk_unsafe %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17hf3ed581a016a95f4E({ i8*, i64 }* mpk_unsafe %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca {}, align 1
; invoke <std::ffi::c_str::CString as core::ops::drop::Drop>::drop
  invoke void @"_ZN66_$LT$std..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbf8f81e536a9d1cbE"({ i8*, i64 }* align 8 dereferenceable(16) %_1)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %bb4
  ret void

bb3:                                              ; preds = %cleanup
  %8 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h4ad6c62a92b0352aE({ [0 x i8]*, i64 }* mpk_unsafe %8) #14
  br label %bb1

bb4:                                              ; preds = %start
  %9 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h4ad6c62a92b0352aE({ [0 x i8]*, i64 }* mpk_unsafe %9)
  br label %bb2

cleanup:                                          ; preds = %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17hf9cf17716b6f560dE(%"std::sys::unix::process::process_common::Argv"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::sys::unix::process::process_common::Argv"* %_1 to %"std::vec::Vec<*const i8>"*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hd01b63c27d4a87ecE(%"std::vec::Vec<*const i8>"* mpk_unsafe %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4core3ptr13drop_in_place17hfe01a2209d12e44fE(%"std::string::String"* mpk_unsafe %_1) unnamed_addr #1 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"std::string::String"* %_1 to %"std::vec::Vec<u8>"*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h0592225f2e5a8517E(%"std::vec::Vec<u8>"* mpk_unsafe %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr19swap_nonoverlapping17h241d6297c58f86d9E({ i8*, i64 }* mpk_unsafe %x, { i8*, i64 }* mpk_unsafe %y, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %x1 = bitcast { i8*, i64 }* %x to i8*
  %y2 = bitcast { i8*, i64 }* %y to i8*
  store i64 16, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %len = mul i64 %1, %count
; call core::ptr::swap_nonoverlapping_bytes
  call void @_ZN4core3ptr25swap_nonoverlapping_bytes17ha34450ee2f17468eE(i8* mpk_unsafe %x1, i8* mpk_unsafe %y2, i64 %len), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr19swap_nonoverlapping17h3415b3cfcb9352c2E(i64* mpk_unsafe %x, i64* mpk_unsafe %y, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %x1 = bitcast i64* %x to i8*
  %y2 = bitcast i64* %y to i8*
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %len = mul i64 %1, %count
; call core::ptr::swap_nonoverlapping_bytes
  call void @_ZN4core3ptr25swap_nonoverlapping_bytes17ha34450ee2f17468eE(i8* mpk_unsafe %x1, i8* mpk_unsafe %y2, i64 %len), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr19swap_nonoverlapping17hb9c6706d752f092fE({ i64*, i64 }* mpk_unsafe %x, { i64*, i64 }* mpk_unsafe %y, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %x1 = bitcast { i64*, i64 }* %x to i8*
  %y2 = bitcast { i64*, i64 }* %y to i8*
  store i64 16, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %len = mul i64 %1, %count
; call core::ptr::swap_nonoverlapping_bytes
  call void @_ZN4core3ptr25swap_nonoverlapping_bytes17ha34450ee2f17468eE(i8* mpk_unsafe %x1, i8* mpk_unsafe %y2, i64 %len), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h3e19100558fc09ecE(i8* mpk_immut %data, i64 %len) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"std::ptr::Repr<u8>", align 8, !MPK-SmartPointer !3
  %0 = bitcast { i8*, i64 }* %_4 to i8**
  store i8* %data, i8** %0, align 8, !MPK-Unsafe !4
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %len, i64* %1, align 8, !MPK-Unsafe !4
  %2 = bitcast %"std::ptr::Repr<u8>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8, !MPK-Unsafe !4
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !MPK-Unsafe !4
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8, !MPK-Unsafe !4
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8, !MPK-Unsafe !4
  %9 = bitcast %"std::ptr::Repr<u8>"* %_3 to { [0 x i8]*, i64 }*, !MPK-SmartPointer !3
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8, !MPK-Unsafe !4
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !MPK-Unsafe !4
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::swap_nonoverlapping_one
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr23swap_nonoverlapping_one17h38e29042fe1d0b59E({ i64*, i64 }* mpk_unsafe %x, { i64*, i64 }* mpk_unsafe %y) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %2 = alloca {}, align 1
  store i8 0, i8* %_18, align 1
  store i64 16, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp ult i64 %3, 32
  br i1 %_3, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::swap_nonoverlapping
  call void @_ZN4core3ptr19swap_nonoverlapping17hb9c6706d752f092fE({ i64*, i64 }* mpk_unsafe %x, { i64*, i64 }* mpk_unsafe %y, i64 1), !MPK-Unsafe !4
  br label %bb7

bb3:                                              ; preds = %bb1
  store i8 1, i8* %_18, align 1, !MPK-Unsafe !4
; call core::ptr::read
  %4 = call { i64*, i64 } @_ZN4core3ptr4read17h7d6fc65b798779a9E({ i64*, i64 }* mpk_immut mpk_unsafe %x), !MPK-Unsafe !4
  %z.0 = extractvalue { i64*, i64 } %4, 0
  %z.1 = extractvalue { i64*, i64 } %4, 1
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::intrinsics::copy_nonoverlapping
  invoke void @_ZN4core10intrinsics19copy_nonoverlapping17h4e24f846eecb6479E({ i64*, i64 }* mpk_immut mpk_unsafe %y, { i64*, i64 }* mpk_unsafe %x, i64 1)
          to label %bb5 unwind label %cleanup, !MPK-Unsafe !4

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_18, align 1, !MPK-Unsafe !4
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h412482dbbbd94ed4E({ i64*, i64 }* mpk_unsafe %y, i64* mpk_immut mpk_unsafe %z.0, i64 %z.1)
          to label %bb6 unwind label %cleanup, !MPK-Unsafe !4

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_18, align 1, !MPK-Unsafe !4
  br label %bb8

bb7:                                              ; preds = %bb2
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  ret void

bb9:                                              ; preds = %bb10, %bb11
  %5 = bitcast { i8*, i32 }* %1 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb10:                                             ; preds = %bb11
  br label %bb9

bb11:                                             ; preds = %cleanup
  %11 = load i8, i8* %_18, align 1, !range !5, !MPK-Unsafe !4
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb10, label %bb9

cleanup:                                          ; preds = %bb5, %bb4
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb11
}

; core::ptr::swap_nonoverlapping_one
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr23swap_nonoverlapping_one17h622c64681fa30c2dE(i64* mpk_unsafe %x, i64* mpk_unsafe %y) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %2 = alloca {}, align 1
  store i8 0, i8* %_18, align 1
  store i64 8, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp ult i64 %3, 32
  br i1 %_3, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::swap_nonoverlapping
  call void @_ZN4core3ptr19swap_nonoverlapping17h3415b3cfcb9352c2E(i64* mpk_unsafe %x, i64* mpk_unsafe %y, i64 1), !MPK-Unsafe !4
  br label %bb7

bb3:                                              ; preds = %bb1
  store i8 1, i8* %_18, align 1, !MPK-Unsafe !4
; call core::ptr::read
  %z = call i64 @_ZN4core3ptr4read17h76731e1940d86973E(i64* mpk_immut mpk_unsafe %x), !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::intrinsics::copy_nonoverlapping
  invoke void @_ZN4core10intrinsics19copy_nonoverlapping17h46efc78f72814690E(i64* mpk_immut mpk_unsafe %y, i64* mpk_unsafe %x, i64 1)
          to label %bb5 unwind label %cleanup, !MPK-Unsafe !4

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_18, align 1, !MPK-Unsafe !4
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h229f700e4309c63eE(i64* mpk_unsafe %y, i64 %z)
          to label %bb6 unwind label %cleanup, !MPK-Unsafe !4

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_18, align 1, !MPK-Unsafe !4
  br label %bb8

bb7:                                              ; preds = %bb2
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  ret void

bb9:                                              ; preds = %bb10, %bb11
  %4 = bitcast { i8*, i32 }* %1 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = insertvalue { i8*, i32 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i32 } %8, i32 %7, 1
  resume { i8*, i32 } %9

bb10:                                             ; preds = %bb11
  br label %bb9

bb11:                                             ; preds = %cleanup
  %10 = load i8, i8* %_18, align 1, !range !5, !MPK-Unsafe !4
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb10, label %bb9

cleanup:                                          ; preds = %bb5, %bb4
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb11
}

; core::ptr::swap_nonoverlapping_one
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr23swap_nonoverlapping_one17hd564d9b243055803E({ i8*, i64 }* mpk_unsafe %x, { i8*, i64 }* mpk_unsafe %y) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %2 = alloca {}, align 1
  store i8 0, i8* %_18, align 1
  store i64 16, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp ult i64 %3, 32
  br i1 %_3, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::swap_nonoverlapping
  call void @_ZN4core3ptr19swap_nonoverlapping17h241d6297c58f86d9E({ i8*, i64 }* mpk_unsafe %x, { i8*, i64 }* mpk_unsafe %y, i64 1), !MPK-Unsafe !4
  br label %bb7

bb3:                                              ; preds = %bb1
  store i8 1, i8* %_18, align 1, !MPK-Unsafe !4
; call core::ptr::read
  %4 = call { i8*, i64 } @_ZN4core3ptr4read17h430c205074519711E({ i8*, i64 }* mpk_immut mpk_unsafe %x), !MPK-Unsafe !4
  %z.0 = extractvalue { i8*, i64 } %4, 0
  %z.1 = extractvalue { i8*, i64 } %4, 1
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::intrinsics::copy_nonoverlapping
  invoke void @_ZN4core10intrinsics19copy_nonoverlapping17h5bdc1c13616869a2E({ i8*, i64 }* mpk_immut mpk_unsafe %y, { i8*, i64 }* mpk_unsafe %x, i64 1)
          to label %bb5 unwind label %cleanup, !MPK-Unsafe !4

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_18, align 1, !MPK-Unsafe !4
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hb29d21d86c7584d0E({ i8*, i64 }* mpk_unsafe %y, i8* mpk_immut noalias readonly align 1 %z.0, i64 %z.1)
          to label %bb6 unwind label %cleanup, !MPK-Unsafe !4

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_18, align 1, !MPK-Unsafe !4
  br label %bb8

bb7:                                              ; preds = %bb2
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  ret void

bb9:                                              ; preds = %bb10, %bb11
  %5 = bitcast { i8*, i32 }* %1 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb10:                                             ; preds = %bb11
  br label %bb9

bb11:                                             ; preds = %cleanup
  %11 = load i8, i8* %_18, align 1, !range !5, !MPK-Unsafe !4
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb10, label %bb9

cleanup:                                          ; preds = %bb5, %bb4
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb11
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x { i8*, i64 }]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h1071b83cf5b203d9E({ i8*, i64 }* %data, i64 %len) unnamed_addr #0 {
start:
  %_4 = alloca { i64*, i64 }, align 8
  %_3 = alloca %"std::ptr::Repr<std::ffi::CString>", align 8, !MPK-SmartPointer !3
  %0 = bitcast { i64*, i64 }* %_4 to { i8*, i64 }**
  store { i8*, i64 }* %data, { i8*, i64 }** %0, align 8, !MPK-Unsafe !4
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  store i64 %len, i64* %1, align 8, !MPK-Unsafe !4
  %2 = bitcast %"std::ptr::Repr<std::ffi::CString>"* %_3 to { i64*, i64 }*
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8, !MPK-Unsafe !4
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !MPK-Unsafe !4
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  store i64* %4, i64** %7, align 8, !MPK-Unsafe !4
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8, !MPK-Unsafe !4
  %9 = bitcast %"std::ptr::Repr<std::ffi::CString>"* %_3 to { [0 x { i8*, i64 }]*, i64 }*, !MPK-SmartPointer !3
  %10 = getelementptr inbounds { [0 x { i8*, i64 }]*, i64 }, { [0 x { i8*, i64 }]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x { i8*, i64 }]*, [0 x { i8*, i64 }]** %10, align 8, !MPK-Unsafe !4
  %12 = getelementptr inbounds { [0 x { i8*, i64 }]*, i64 }, { [0 x { i8*, i64 }]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !MPK-Unsafe !4
  %14 = insertvalue { [0 x { i8*, i64 }]*, i64 } undef, [0 x { i8*, i64 }]* %11, 0
  %15 = insertvalue { [0 x { i8*, i64 }]*, i64 } %14, i64 %13, 1
  ret { [0 x { i8*, i64 }]*, i64 } %15
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h33e258338f177735E(i8* %data, i64 %len) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"std::ptr::Repr<u8>", align 8, !MPK-SmartPointer !3
  %0 = bitcast { i8*, i64 }* %_4 to i8**
  store i8* %data, i8** %0, align 8, !MPK-Unsafe !4
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %len, i64* %1, align 8, !MPK-Unsafe !4
  %2 = bitcast %"std::ptr::Repr<u8>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8, !MPK-Unsafe !4
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !MPK-Unsafe !4
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8, !MPK-Unsafe !4
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8, !MPK-Unsafe !4
  %9 = bitcast %"std::ptr::Repr<u8>"* %_3 to { [0 x i8]*, i64 }*, !MPK-SmartPointer !3
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8, !MPK-Unsafe !4
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !MPK-Unsafe !4
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x { {}*, [3 x i64]* }]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h892d0ec043a231d6E({ {}*, [3 x i64]* }* %data, i64 %len) unnamed_addr #0 {
start:
  %_4 = alloca { i64*, i64 }, align 8
  %_3 = alloca %"std::ptr::Repr<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>", align 8, !MPK-SmartPointer !3
  %0 = bitcast { i64*, i64 }* %_4 to { {}*, [3 x i64]* }**
  store { {}*, [3 x i64]* }* %data, { {}*, [3 x i64]* }** %0, align 8, !MPK-Unsafe !4
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  store i64 %len, i64* %1, align 8, !MPK-Unsafe !4
  %2 = bitcast %"std::ptr::Repr<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>"* %_3 to { i64*, i64 }*
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8, !MPK-Unsafe !4
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !MPK-Unsafe !4
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  store i64* %4, i64** %7, align 8, !MPK-Unsafe !4
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8, !MPK-Unsafe !4
  %9 = bitcast %"std::ptr::Repr<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>"* %_3 to { [0 x { {}*, [3 x i64]* }]*, i64 }*, !MPK-SmartPointer !3
  %10 = getelementptr inbounds { [0 x { {}*, [3 x i64]* }]*, i64 }, { [0 x { {}*, [3 x i64]* }]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x { {}*, [3 x i64]* }]*, [0 x { {}*, [3 x i64]* }]** %10, align 8, !MPK-Unsafe !4
  %12 = getelementptr inbounds { [0 x { {}*, [3 x i64]* }]*, i64 }, { [0 x { {}*, [3 x i64]* }]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !MPK-Unsafe !4
  %14 = insertvalue { [0 x { {}*, [3 x i64]* }]*, i64 } undef, [0 x { {}*, [3 x i64]* }]* %11, 0
  %15 = insertvalue { [0 x { {}*, [3 x i64]* }]*, i64 } %14, i64 %13, 1
  ret { [0 x { {}*, [3 x i64]* }]*, i64 } %15
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8*]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hd5179d101a001edbE(i8** %data, i64 %len) unnamed_addr #0 {
start:
  %_4 = alloca { i64*, i64 }, align 8
  %_3 = alloca %"std::ptr::Repr<*const i8>", align 8, !MPK-SmartPointer !3
  %0 = bitcast { i64*, i64 }* %_4 to i8***
  store i8** %data, i8*** %0, align 8, !MPK-Unsafe !4
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  store i64 %len, i64* %1, align 8, !MPK-Unsafe !4
  %2 = bitcast %"std::ptr::Repr<*const i8>"* %_3 to { i64*, i64 }*
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8, !MPK-Unsafe !4
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !MPK-Unsafe !4
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  store i64* %4, i64** %7, align 8, !MPK-Unsafe !4
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8, !MPK-Unsafe !4
  %9 = bitcast %"std::ptr::Repr<*const i8>"* %_3 to { [0 x i8*]*, i64 }*, !MPK-SmartPointer !3
  %10 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8*]*, [0 x i8*]** %10, align 8, !MPK-Unsafe !4
  %12 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !MPK-Unsafe !4
  %14 = insertvalue { [0 x i8*]*, i64 } undef, [0 x i8*]* %11, 0
  %15 = insertvalue { [0 x i8*]*, i64 } %14, i64 %13, 1
  ret { [0 x i8*]*, i64 } %15
}

; core::ptr::swap_nonoverlapping_bytes
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr25swap_nonoverlapping_bytes17ha34450ee2f17468eE(i8* mpk_unsafe %x, i8* mpk_unsafe %y, i64 %len) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %t1 = alloca %"std::mem::MaybeUninit<std::ptr::swap_nonoverlapping_bytes::UnalignedBlock>", align 8
  %t = alloca <4 x i64>, align 32
  %i = alloca i64, align 8
  %1 = alloca {}, align 1
  store i64 32, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 0, i64* %i, align 8
  br label %bb2

bb2:                                              ; preds = %bb11, %bb1
  %_8 = load i64, i64* %i, align 8
  %_7 = add i64 %_8, %2
  %_6 = icmp ule i64 %_7, %len
  br i1 %_6, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %_38 = load i64, i64* %i, align 8
  %_37 = icmp ult i64 %_38, %len
  br i1 %_37, label %bb13, label %bb12

bb4:                                              ; preds = %bb2
  %3 = bitcast <4 x i64>* %t to {}*
  br label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb5
  %t2 = bitcast <4 x i64>* %t to i8*
  %_17 = load i64, i64* %i, align 8, !MPK-Unsafe !4
; call core::ptr::mut_ptr::<impl *mut T>::add
  %x3 = call mpk_unsafe i8* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17heaf3a9c41fdb296cE"(i8* mpk_unsafe %x, i64 %_17), !MPK-Unsafe !4
  br label %bb7

bb7:                                              ; preds = %bb6
  %_20 = load i64, i64* %i, align 8, !MPK-Unsafe !4
; call core::ptr::mut_ptr::<impl *mut T>::add
  %y4 = call mpk_unsafe i8* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17heaf3a9c41fdb296cE"(i8* mpk_unsafe %y, i64 %_20), !MPK-Unsafe !4
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h428b5e52243e57a3E(i8* mpk_immut mpk_unsafe %x3, i8* mpk_unsafe %t2, i64 %2), !MPK-Unsafe !4
  br label %bb9

bb9:                                              ; preds = %bb8
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h428b5e52243e57a3E(i8* mpk_immut mpk_unsafe %y4, i8* mpk_unsafe %x3, i64 %2), !MPK-Unsafe !4
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h428b5e52243e57a3E(i8* mpk_immut mpk_unsafe %t2, i8* mpk_unsafe %y4, i64 %2), !MPK-Unsafe !4
  br label %bb11

bb11:                                             ; preds = %bb10
  %4 = load i64, i64* %i, align 8
  %5 = add i64 %4, %2
  store i64 %5, i64* %i, align 8
  br label %bb2

bb12:                                             ; preds = %bb3
  br label %bb21

bb13:                                             ; preds = %bb3
  %6 = bitcast %"std::mem::MaybeUninit<std::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"* %t1 to {}*
  br label %bb14

bb14:                                             ; preds = %bb13
  %_43 = load i64, i64* %i, align 8
  %rem = sub i64 %len, %_43
  %7 = bitcast %"std::mem::MaybeUninit<std::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"* %t1 to %"std::ptr::swap_nonoverlapping_bytes::UnalignedBlock"*
  br label %bb15

bb15:                                             ; preds = %bb14
  %t5 = bitcast %"std::ptr::swap_nonoverlapping_bytes::UnalignedBlock"* %7 to i8*
  %_49 = load i64, i64* %i, align 8, !MPK-Unsafe !4
; call core::ptr::mut_ptr::<impl *mut T>::add
  %x6 = call mpk_unsafe i8* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17heaf3a9c41fdb296cE"(i8* mpk_unsafe %x, i64 %_49), !MPK-Unsafe !4
  br label %bb16

bb16:                                             ; preds = %bb15
  %_52 = load i64, i64* %i, align 8, !MPK-Unsafe !4
; call core::ptr::mut_ptr::<impl *mut T>::add
  %y7 = call mpk_unsafe i8* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17heaf3a9c41fdb296cE"(i8* mpk_unsafe %y, i64 %_52), !MPK-Unsafe !4
  br label %bb17

bb17:                                             ; preds = %bb16
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h428b5e52243e57a3E(i8* mpk_immut mpk_unsafe %x6, i8* mpk_unsafe %t5, i64 %rem), !MPK-Unsafe !4
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h428b5e52243e57a3E(i8* mpk_immut mpk_unsafe %y7, i8* mpk_unsafe %x6, i64 %rem), !MPK-Unsafe !4
  br label %bb19

bb19:                                             ; preds = %bb18
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h428b5e52243e57a3E(i8* mpk_immut mpk_unsafe %t5, i8* mpk_unsafe %y7, i64 %rem), !MPK-Unsafe !4
  br label %bb20

bb20:                                             ; preds = %bb19
  br label %bb21

bb21:                                             ; preds = %bb12, %bb20
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN4core3ptr4read17h430c205074519711E({ i8*, i64 }* mpk_immut mpk_unsafe %src) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %tmp = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  store { i8*, i64 } %7, { i8*, i64 }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h5bdc1c13616869a2E({ i8*, i64 }* mpk_immut mpk_unsafe %src, { i8*, i64 }* mpk_unsafe %tmp, i64 1), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 0
  %_7.0 = load i8*, i8** %8, align 8, !MPK-Unsafe !4
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 1
  %_7.1 = load i64, i64* %9, align 8, !MPK-Unsafe !4
  %10 = insertvalue { i8*, i64 } undef, i8* %_7.0, 0
  %11 = insertvalue { i8*, i64 } %10, i64 %_7.1, 1
  %12 = insertvalue { i8*, i64 } undef, i8* %_7.0, 0
  %13 = insertvalue { i8*, i64 } %12, i64 %_7.1, 1
  %14 = extractvalue { i8*, i64 } %13, 0
  %15 = extractvalue { i8*, i64 } %13, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %16 = insertvalue { i8*, i64 } undef, i8* %14, 0
  %17 = insertvalue { i8*, i64 } %16, i64 %15, 1
  ret { i8*, i64 } %17
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64* } @_ZN4core3ptr4read17h4520971887a8dc9cE({ i64, i64* }* mpk_immut mpk_unsafe %src) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8* }, align 8
  %tmp = alloca { i64, i8* }, align 8
  %1 = bitcast { i64, i8* }* %0 to {}*
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64, i8* } undef, i64 %3, 0
  %7 = insertvalue { i64, i8* } %6, i8* %5, 1
  store { i64, i8* } %7, { i64, i8* }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast { i64, i8* }* %tmp to { i64, i64* }*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h39b77f011644999cE({ i64, i64* }* mpk_immut mpk_unsafe %src, { i64, i64* }* mpk_unsafe %8, i64 1), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 0
  %_7.0 = load i64, i64* %9, align 8, !MPK-Unsafe !4
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 1
  %_7.1 = load i8*, i8** %10, align 8, !MPK-Unsafe !4
  %_3.1.i = bitcast i8* %_7.1 to i64*
  %11 = insertvalue { i64, i64* } undef, i64 %_7.0, 0
  %12 = insertvalue { i64, i64* } %11, i64* %_3.1.i, 1
  %13 = insertvalue { i64, i64* } undef, i64 %_7.0, 0
  %14 = insertvalue { i64, i64* } %13, i64* %_3.1.i, 1
  %15 = extractvalue { i64, i64* } %14, 0
  %16 = extractvalue { i64, i64* } %14, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %17 = insertvalue { i64, i64* } undef, i64 %15, 0
  %18 = insertvalue { i64, i64* } %17, i64* %16, 1
  ret { i64, i64* } %18
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3ptr4read17h76731e1940d86973E(i64* mpk_immut mpk_unsafe %src) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %1 = bitcast i64* %0 to {}*
  %2 = load i64, i64* %0, align 8
  store i64 %2, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h46efc78f72814690E(i64* mpk_immut mpk_unsafe %src, i64* mpk_unsafe %tmp, i64 1), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  %_7 = load i64, i64* %tmp, align 8, !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i64 %_7
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64*, i64 } @_ZN4core3ptr4read17h7d6fc65b798779a9E({ i64*, i64 }* mpk_immut mpk_unsafe %src) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %tmp = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  store { i8*, i64 } %7, { i8*, i64 }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %tmp to { i64*, i64 }*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h4e24f846eecb6479E({ i64*, i64 }* mpk_immut mpk_unsafe %src, { i64*, i64 }* mpk_unsafe %8, i64 1), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 0
  %_7.0 = load i8*, i8** %9, align 8, !MPK-Unsafe !4
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 1
  %_7.1 = load i64, i64* %10, align 8, !MPK-Unsafe !4
  %_3.0.i = bitcast i8* %_7.0 to i64*
  %11 = insertvalue { i64*, i64 } undef, i64* %_3.0.i, 0
  %12 = insertvalue { i64*, i64 } %11, i64 %_7.1, 1
  %13 = insertvalue { i64*, i64 } undef, i64* %_3.0.i, 0
  %14 = insertvalue { i64*, i64 } %13, i64 %_7.1, 1
  %15 = extractvalue { i64*, i64 } %14, 0
  %16 = extractvalue { i64*, i64 } %14, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %17 = insertvalue { i64*, i64 } undef, i64* %15, 0
  %18 = insertvalue { i64*, i64 } %17, i64 %16, 1
  ret { i64*, i64 } %18
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr4read17h94959b8d03135954E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* mpk_immut mpk_unsafe %src) unnamed_addr #0 {
start:
  %_3.i = alloca %"std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_7 = alloca %"std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %tmp = alloca %"std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %1 = bitcast %"std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h4c297f92ab4736bbE(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* mpk_immut mpk_unsafe %src, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* mpk_unsafe %2, i64 1), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast %"std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_7 to i8*
  %4 = bitcast %"std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false), !MPK-Unsafe !4
  %5 = bitcast %"std::mem::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_7 to %"std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*
  %6 = bitcast %"std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_3.i to i8*
  %7 = bitcast %"std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !noalias !25, !MPK-Unsafe !4
  %8 = bitcast %"std::mem::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_3.i to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0 to i8*
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !alias.scope !28, !noalias !32
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr4read17hae5c8d34effb9c3eE(%"std::ffi::OsString"* noalias nocapture sret dereferenceable(24) %0, %"std::ffi::OsString"* mpk_immut mpk_unsafe %src) unnamed_addr #0 {
start:
  %_3.i = alloca %"std::mem::ManuallyDrop<std::ffi::OsString>", align 8
  %_7 = alloca %"std::mem::MaybeUninit<std::ffi::OsString>", align 8
  %tmp = alloca %"std::mem::MaybeUninit<std::ffi::OsString>", align 8
  %1 = bitcast %"std::mem::MaybeUninit<std::ffi::OsString>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"std::mem::MaybeUninit<std::ffi::OsString>"* %tmp to %"std::ffi::OsString"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hecbea3c17c39049fE(%"std::ffi::OsString"* mpk_immut mpk_unsafe %src, %"std::ffi::OsString"* mpk_unsafe %2, i64 1), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast %"std::mem::MaybeUninit<std::ffi::OsString>"* %_7 to i8*
  %4 = bitcast %"std::mem::MaybeUninit<std::ffi::OsString>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false), !MPK-Unsafe !4
  %5 = bitcast %"std::mem::MaybeUninit<std::ffi::OsString>"* %_7 to %"std::mem::ManuallyDrop<std::ffi::OsString>"*, !MPK-SmartPointer !3
  %6 = bitcast %"std::mem::ManuallyDrop<std::ffi::OsString>"* %_3.i to i8*
  %7 = bitcast %"std::mem::ManuallyDrop<std::ffi::OsString>"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !noalias !34, !MPK-Unsafe !4
  %8 = bitcast %"std::mem::ManuallyDrop<std::ffi::OsString>"* %_3.i to %"std::ffi::OsString"*, !MPK-SmartPointer !3
  %9 = bitcast %"std::ffi::OsString"* %0 to i8*
  %10 = bitcast %"std::ffi::OsString"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !alias.scope !37, !noalias !41
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr4read17hb27876c496405365E(%"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* noalias nocapture sret dereferenceable(24) %0, %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* mpk_immut mpk_unsafe %src) unnamed_addr #0 {
start:
  %_3.i = alloca %"std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>", align 8
  %_7 = alloca %"std::mem::MaybeUninit<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>", align 8
  %tmp = alloca %"std::mem::MaybeUninit<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>", align 8
  %1 = bitcast %"std::mem::MaybeUninit<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"std::mem::MaybeUninit<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>"* %tmp to %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h25443b14e669492bE(%"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* mpk_immut mpk_unsafe %src, %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* mpk_unsafe %2, i64 1), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast %"std::mem::MaybeUninit<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>"* %_7 to i8*
  %4 = bitcast %"std::mem::MaybeUninit<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false), !MPK-Unsafe !4
  %5 = bitcast %"std::mem::MaybeUninit<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>"* %_7 to %"std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>"*
  %6 = bitcast %"std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>"* %_3.i to i8*
  %7 = bitcast %"std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !noalias !43, !MPK-Unsafe !4
  %8 = bitcast %"std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>"* %_3.i to %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*
  %9 = bitcast %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %0 to i8*
  %10 = bitcast %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !alias.scope !46, !noalias !50
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr4read17hb9aabf6c16efd5c3E(%"std::alloc::Global"* mpk_immut mpk_unsafe %src) unnamed_addr #0 {
start:
  %0 = alloca %"std::mem::MaybeUninit<std::alloc::Global>", align 1
  %tmp = alloca %"std::mem::MaybeUninit<std::alloc::Global>", align 1
  %1 = bitcast %"std::mem::MaybeUninit<std::alloc::Global>"* %0 to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"std::mem::MaybeUninit<std::alloc::Global>"* %tmp to %"std::alloc::Global"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hc975b9534d6a5c38E(%"std::alloc::Global"* mpk_immut mpk_unsafe %src, %"std::alloc::Global"* mpk_unsafe %2, i64 1), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr4read17hbaab8d5f554ed076E(%"std::option::Option<std::ffi::OsString>"* noalias nocapture sret dereferenceable(24) %0, %"std::option::Option<std::ffi::OsString>"* mpk_immut mpk_unsafe %src) unnamed_addr #0 {
start:
  %_3.i = alloca %"std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>", align 8
  %_7 = alloca %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>", align 8
  %tmp = alloca %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>", align 8
  %1 = bitcast %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* %tmp to %"std::option::Option<std::ffi::OsString>"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h3633a71a02d07b71E(%"std::option::Option<std::ffi::OsString>"* mpk_immut mpk_unsafe %src, %"std::option::Option<std::ffi::OsString>"* mpk_unsafe %2, i64 1), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* %_7 to i8*
  %4 = bitcast %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false), !MPK-Unsafe !4
  %5 = bitcast %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* %_7 to %"std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>"*
  %6 = bitcast %"std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>"* %_3.i to i8*
  %7 = bitcast %"std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !noalias !52, !MPK-Unsafe !4
  %8 = bitcast %"std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>"* %_3.i to %"std::option::Option<std::ffi::OsString>"*
  %9 = bitcast %"std::option::Option<std::ffi::OsString>"* %0 to i8*
  %10 = bitcast %"std::option::Option<std::ffi::OsString>"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !alias.scope !55, !noalias !59
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr4read17hc31b192d5fea81d6E(%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(24) %0, %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* mpk_immut mpk_unsafe %src) unnamed_addr #0 {
start:
  %_3.i = alloca %"std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>>", align 8
  %_7 = alloca %"std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>>", align 8
  %tmp = alloca %"std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>>", align 8
  %1 = bitcast %"std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>>"* %tmp to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h33dc6cc49163f985E(%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* mpk_immut mpk_unsafe %src, %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* mpk_unsafe %2, i64 1), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast %"std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>>"* %_7 to i8*
  %4 = bitcast %"std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false), !MPK-Unsafe !4
  %5 = bitcast %"std::mem::MaybeUninit<std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>>"* %_7 to %"std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>>"*
  %6 = bitcast %"std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>>"* %_3.i to i8*
  %7 = bitcast %"std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>>"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !noalias !61, !MPK-Unsafe !4
  %8 = bitcast %"std::mem::ManuallyDrop<std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>>"* %_3.i to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*
  %9 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %0 to i8*
  %10 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !alias.scope !64, !noalias !68
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe nonnull i64* @_ZN4core3ptr4read17hc5080dd3d2dc7e42E(i64** mpk_immut mpk_unsafe %src) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %1 = bitcast i8** %0 to {}*
  %2 = load i8*, i8** %0, align 8
  store i8* %2, i8** %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i8** %tmp to i64**
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17haedc4244148763ccE(i64** mpk_immut mpk_unsafe %src, i64** mpk_unsafe %3, i64 1), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  %_7 = load i8*, i8** %tmp, align 8, !MPK-Unsafe !4
  %_3.i = bitcast i8* %_7 to i64*
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i64* %_3.i
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr5write17h229f700e4309c63eE(i64* mpk_unsafe %dst, i64 %src) unnamed_addr #0 {
start:
  %0 = alloca {}, align 1
  store i64 %src, i64* %dst, align 8, !MPK-Unsafe !4
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr5write17h412482dbbbd94ed4E({ i64*, i64 }* mpk_unsafe %dst, i64* mpk_immut mpk_unsafe %src.0, i64 %src.1) unnamed_addr #0 {
start:
  %0 = alloca {}, align 1
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %dst, i32 0, i32 0
  store i64* %src.0, i64** %1, align 8, !MPK-Unsafe !4
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %dst, i32 0, i32 1
  store i64 %src.1, i64* %2, align 8, !MPK-Unsafe !4
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr5write17hb29d21d86c7584d0E({ i8*, i64 }* mpk_unsafe %dst, i8* mpk_immut noalias readonly align 1 %src.0, i64 %src.1) unnamed_addr #0 {
start:
  %0 = alloca {}, align 1
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %dst, i32 0, i32 0
  store i8* %src.0, i8** %1, align 8, !MPK-Unsafe !4
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %dst, i32 0, i32 1
  store i64 %src.1, i64* %2, align 8, !MPK-Unsafe !4
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr5write17hbbdd254f8f8e8747E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* mpk_unsafe %dst, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %src) unnamed_addr #0 {
start:
  %0 = alloca {}, align 1
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %dst to i8*
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !MPK-Unsafe !4
  ret void
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8ed15389c830e806E"(i8* mpk_unsafe %ptr) unnamed_addr #0 {
start:
  %_5 = alloca %"std::marker::PhantomData<u8>", align 1
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8, !MPK-Unsafe !4
  %1 = bitcast i8** %0 to %"std::marker::PhantomData<u8>"*
  %2 = load i8*, i8** %0, align 8, !nonnull !11
  ret i8* %2
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h14b17b4339c5ec4dE"(i64* mpk_immut nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call { {}*, [3 x i64]* }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8ff7ae4b7243ea53E"(i64* mpk_immut nonnull %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast { {}*, [3 x i64]* }* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8ed15389c830e806E"(i8* mpk_unsafe %_2), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h1b57f5409d20bc7eE"(i8* mpk_immut nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h58f5bce32f9db950E"(i8* mpk_immut nonnull %self.0, i64 %self.1), !MPK-Unsafe !4
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8ed15389c830e806E"(i8* mpk_unsafe %_2), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h268b36091a494cf6E"(i64* mpk_immut nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call { i8*, i64 }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h50170df2837cad77E"(i64* mpk_immut nonnull %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast { i8*, i64 }* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8ed15389c830e806E"(i8* mpk_unsafe %_2), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h29f12263614983baE"(i64* mpk_immut nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9babb15ec9dd7c22E"(i64* mpk_immut nonnull %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"std::io::error::Custom"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8ed15389c830e806E"(i8* mpk_unsafe %_2), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h336b38a98ea9a2eeE"(i8* mpk_immut nonnull %self.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h10edb571f0272455E"(i8* mpk_immut nonnull %self.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %self.1), !MPK-Unsafe !4
  %_3.0 = extractvalue { {}*, [3 x i64]* } %0, 0
  %_3.1 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast {}* %_3.0 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8ed15389c830e806E"(i8* mpk_unsafe %_2), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h4fb85a49341272baE"(i8* mpk_immut nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h055a443b2e13d456E"(i8* mpk_immut nonnull %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8ed15389c830e806E"(i8* mpk_unsafe %_3), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h65687c35f31535a8E"(i64* mpk_immut nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call i8** @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h46ffe94b6217a66cE"(i64* mpk_immut nonnull %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast i8** %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8ed15389c830e806E"(i8* mpk_unsafe %_2), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h68c779bb51c3a504E"(i8* mpk_immut nonnull %self.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hfde47f42fa023f11E"(i8* mpk_immut nonnull %self.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %self.1), !MPK-Unsafe !4
  %_3.0 = extractvalue { {}*, [3 x i64]* } %0, 0
  %_3.1 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast {}* %_3.0 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8ed15389c830e806E"(i8* mpk_unsafe %_2), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h871211ec4404e7d6E"(i8* mpk_immut nonnull %self.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h7dec8ced2f1d0a95E"(i8* mpk_immut nonnull %self.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %self.1), !MPK-Unsafe !4
  %_3.0 = extractvalue { {}*, [3 x i64]* } %0, 0
  %_3.1 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast {}* %_3.0 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h8ed15389c830e806E"(i8* mpk_unsafe %_2), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h055a443b2e13d456E"(i8* mpk_immut nonnull %self) unnamed_addr #0 {
start:
  ret i8* %self
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h10edb571f0272455E"(i8* mpk_immut nonnull %self.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to {}*
  %_2.1 = bitcast i64* %self.1 to [3 x i64]*
  %0 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %1 = insertvalue { {}*, [3 x i64]* } %0, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8** @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h46ffe94b6217a66cE"(i64* mpk_immut nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to i8**
  ret i8** %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h50170df2837cad77E"(i64* mpk_immut nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to { i8*, i64 }*
  ret { i8*, i64 }* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h58f5bce32f9db950E"(i8* mpk_immut nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to [0 x i8]*, !MPK-SmartPointer !3
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %self.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h7dec8ced2f1d0a95E"(i8* mpk_immut nonnull %self.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to {}*
  %_2.1 = bitcast i64* %self.1 to [3 x i64]*
  %0 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %1 = insertvalue { {}*, [3 x i64]* } %0, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8ff7ae4b7243ea53E"(i64* mpk_immut nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to { {}*, [3 x i64]* }*
  ret { {}*, [3 x i64]* }* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9babb15ec9dd7c22E"(i64* mpk_immut nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"std::io::error::Custom"*
  ret %"std::io::error::Custom"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hca9ca350dbe1ad0cE"(i64* mpk_immut nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*
  ret %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hfde47f42fa023f11E"(i8* mpk_immut nonnull %self.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to {}*
  %_2.1 = bitcast i64* %self.1 to [3 x i64]*
  %0 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %1 = insertvalue { {}*, [3 x i64]* } %0, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %1
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h27547dfc66358f22E"({ i8*, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !11, !MPK-Unsafe !4
  %1 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 1
  %_3.1 = load i64*, i64** %1, align 8, !nonnull !11, !MPK-Unsafe !4
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h7dec8ced2f1d0a95E"(i8* mpk_immut nonnull %_3.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %_3.1), !MPK-Unsafe !4
  %_2.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_2.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h589253e5cd9048c9E"({ i8*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !11, !MPK-Unsafe !4
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_3.1 = load i64, i64* %1, align 8, !MPK-Unsafe !4
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h58f5bce32f9db950E"(i8* mpk_immut nonnull %_3.0, i64 %_3.1), !MPK-Unsafe !4
  %_2.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_2.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %_2.1, 1
  ret { [0 x i8]*, i64 } %4
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut align 8 dereferenceable(24) %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h7efb4982570fec7fE"(i64** mpk_immut noalias readonly align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !11, !MPK-Unsafe !4
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9babb15ec9dd7c22E"(i64* mpk_immut nonnull %_3), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::io::error::Custom"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h87a270b6c7a9b3baE"({ i8*, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !11, !MPK-Unsafe !4
  %1 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 1
  %_3.1 = load i64*, i64** %1, align 8, !nonnull !11, !MPK-Unsafe !4
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hfde47f42fa023f11E"(i8* mpk_immut nonnull %_3.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %_3.1), !MPK-Unsafe !4
  %_2.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_2.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17haffa848dff94fdffE"({ i8*, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !11, !MPK-Unsafe !4
  %1 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 1
  %_3.1 = load i64*, i64** %1, align 8, !nonnull !11, !MPK-Unsafe !4
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h10edb571f0272455E"(i8* mpk_immut nonnull %_3.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %_3.1), !MPK-Unsafe !4
  %_2.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_2.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h30cf13fb3ba01486E"(i8* %self, i8* %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !5
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::mut_ptr::<impl *mut T>::add
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_unsafe i8* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17heaf3a9c41fdb296cE"(i8* mpk_unsafe %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::mut_ptr::<impl *mut T>::offset
  %0 = call mpk_unsafe i8* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hb2019f51100aa509E"(i8* mpk_unsafe %self, i64 %count), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; core::ptr::mut_ptr::<impl *mut T>::offset
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_unsafe i8* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hb2019f51100aa509E"(i8* mpk_unsafe %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8, !MPK-Unsafe !4
  %1 = getelementptr inbounds i8, i8* %self, i64 %count
  store i8* %1, i8** %0, align 8, !MPK-Unsafe !4
  %_3 = load i8*, i8** %0, align 8, !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %_3
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h17ad968d563091a6E"({ i8*, i64 }* %self) unnamed_addr #0 {
start:
  %_2 = bitcast { i8*, i64 }* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h30cf13fb3ba01486E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h5f72c14575dab494E"({ {}*, [3 x i64]* }* %self) unnamed_addr #0 {
start:
  %_2 = bitcast { {}*, [3 x i64]* }* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h30cf13fb3ba01486E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17had8f8dae2dac8a71E"(i8** %self) unnamed_addr #0 {
start:
  %_2 = bitcast i8** %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h30cf13fb3ba01486E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hc925ba59e5e66bb4E"(i8* %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h30cf13fb3ba01486E"(i8* %self, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7923774adaf05c21E"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h37fc4ff17ee9d0caE"([0 x i8]* mpk_unsafe %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8, !MPK-SmartPointer !3
  %1 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !MPK-SmartPointer !3
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %2, align 8, !MPK-Unsafe !4
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %ptr.1, i64* %3, align 8, !MPK-Unsafe !4
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !11
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5c5c968be544278cE"(i8* mpk_unsafe %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8, !MPK-Unsafe !4
  %1 = load i8*, i8** %0, align 8, !nonnull !11
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h86967d3eb292b06bE"(%"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* mpk_unsafe %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"**
  store %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %ptr, %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"** %1, align 8, !MPK-Unsafe !4
  %2 = load i64*, i64** %0, align 8, !nonnull !11
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hdf3ecc25d24a5e6dE"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hc925ba59e5e66bb4E"(i8* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast i8** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb5

bb3:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_5 = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5c5c968be544278cE"(i8* mpk_unsafe %ptr), !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
  store i8* %_5, i8** %0, align 8
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4
  %2 = load i8*, i8** %0, align 8
  ret i8* %2
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h2621d1fde24871a8E"(i64* mpk_immut nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha59f1a05e137e441E"(i64* mpk_immut nonnull %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5c5c968be544278cE"(i8* mpk_unsafe %_2), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hc36d3e4684c7506dE"(i64* mpk_immut nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h25863227eda3d58bE"(i64* mpk_immut nonnull %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %_3 to %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call mpk_immut mpk_unsafe nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h86967d3eb292b06bE"(%"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* mpk_unsafe %_2), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal %"alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h25863227eda3d58bE"(i64* mpk_immut nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*
  ret %"alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h37fda3e248a20362E"(i8* mpk_immut nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to [0 x i8]*, !MPK-SmartPointer !3
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %self.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h663abac54ec687f4E"(i8* mpk_immut nonnull %self) unnamed_addr #0 {
start:
  ret i8* %self
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha59f1a05e137e441E"(i64* mpk_immut nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*
  ret %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %_2
}

; core::ptr::non_null::NonNull<[T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h552e4fa7635a2cfbE"(i8* mpk_immut nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %_2 = call mpk_immut nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h021b92626d16b426E"(i8* mpk_immut nonnull %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h663abac54ec687f4E"(i8* mpk_immut nonnull %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h021b92626d16b426E"(i8* mpk_immut nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h37fda3e248a20362E"(i8* mpk_immut nonnull %self.0, i64 %self.1), !MPK-Unsafe !4
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  store i64 1, i64* @METASAFE_TYPE_ID, align 8
; call core::ptr::mut_ptr::<impl *mut [T]>::as_mut_ptr
  %_2 = call i8* @"_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7923774adaf05c21E"([0 x i8]* %_3.0, i64 %_3.1), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5c5c968be544278cE"(i8* mpk_unsafe %_2), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %1
}

; core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hf5b476faaa702565E"(i8* mpk_immut nonnull %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h663abac54ec687f4E"(i8* mpk_immut nonnull %data), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h33e258338f177735E(i8* %_4, i64 %len), !MPK-Unsafe !4
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h37fc4ff17ee9d0caE"([0 x i8]* mpk_unsafe %_3.0, i64 %_3.1), !MPK-Unsafe !4
  %2 = extractvalue { i8*, i64 } %1, 0
  %3 = extractvalue { i8*, i64 } %1, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { i8*, i64 } undef, i8* %2, 0
  %5 = insertvalue { i8*, i64 } %4, i64 %3, 1
  ret { i8*, i64 } %5
}

; core::ptr::const_ptr::<impl *const T>::wrapping_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut i8* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h4ccced04d4c41c99E"(i8* mpk_immut %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::wrapping_offset
  %0 = call mpk_immut i8* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h44e0719983d1defcE"(i8* mpk_immut %self, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; core::ptr::const_ptr::<impl *const T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h2214cd8937c16009E"(i8* mpk_immut %self, i8* mpk_immut %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !5
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::const_ptr::<impl *const T>::wrapping_offset
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut i8* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h44e0719983d1defcE"(i8* mpk_immut %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8, !MPK-Unsafe !4
  %1 = getelementptr i8, i8* %self, i64 %count, !MPK-Unsafe !4
  store i8* %1, i8** %0, align 8, !MPK-Unsafe !4
  %2 = load i8*, i8** %0, align 8, !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %2
}

; core::ptr::const_ptr::<impl *const T>::add
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe %"std::mem::MaybeUninit<std::ffi::OsString>"* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h89e9d04ced1ae095E"(%"std::mem::MaybeUninit<std::ffi::OsString>"* mpk_immut mpk_unsafe %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::offset
  %0 = call mpk_immut mpk_unsafe %"std::mem::MaybeUninit<std::ffi::OsString>"* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17haac80f127e3efd1aE"(%"std::mem::MaybeUninit<std::ffi::OsString>"* mpk_immut mpk_unsafe %self, i64 %count), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::mem::MaybeUninit<std::ffi::OsString>"* %0
}

; core::ptr::const_ptr::<impl *const T>::add
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe i8* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h99c8c1bbc0117f6dE"(i8* mpk_immut mpk_unsafe %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::offset
  %0 = call mpk_immut mpk_unsafe i8* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17heac2013d1e6fa26eE"(i8* mpk_immut mpk_unsafe %self, i64 %count), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; core::ptr::const_ptr::<impl *const T>::add
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe i8** @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hdc023ec9b8d32a17E"(i8** mpk_immut mpk_unsafe %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::offset
  %0 = call mpk_immut mpk_unsafe i8** @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hf443a42724a6b824E"(i8** mpk_immut mpk_unsafe %self, i64 %count), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i8** %0
}

; core::ptr::const_ptr::<impl *const T>::add
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hedf00ee91ea70bddE"(%"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* mpk_immut mpk_unsafe %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::offset
  %0 = call mpk_immut mpk_unsafe %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hda1ccad275e496c9E"(%"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* mpk_immut mpk_unsafe %self, i64 %count), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* %0
}

; core::ptr::const_ptr::<impl *const T>::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe nonnull i64* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4read17h2cde6e710cd8683bE"(i64** mpk_immut mpk_unsafe %self) unnamed_addr #0 {
start:
; call core::ptr::read
  %0 = call mpk_immut mpk_unsafe nonnull i64* @_ZN4core3ptr4read17hc5080dd3d2dc7e42E(i64** mpk_immut mpk_unsafe %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; core::ptr::const_ptr::<impl *const T>::offset
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe %"std::mem::MaybeUninit<std::ffi::OsString>"* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17haac80f127e3efd1aE"(%"std::mem::MaybeUninit<std::ffi::OsString>"* mpk_immut mpk_unsafe %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca %"std::mem::MaybeUninit<std::ffi::OsString>"*, align 8, !MPK-Unsafe !4
  %1 = getelementptr inbounds %"std::mem::MaybeUninit<std::ffi::OsString>", %"std::mem::MaybeUninit<std::ffi::OsString>"* %self, i64 %count
  store %"std::mem::MaybeUninit<std::ffi::OsString>"* %1, %"std::mem::MaybeUninit<std::ffi::OsString>"** %0, align 8, !MPK-Unsafe !4
  %2 = load %"std::mem::MaybeUninit<std::ffi::OsString>"*, %"std::mem::MaybeUninit<std::ffi::OsString>"** %0, align 8, !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::mem::MaybeUninit<std::ffi::OsString>"* %2
}

; core::ptr::const_ptr::<impl *const T>::offset
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hda1ccad275e496c9E"(%"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* mpk_immut mpk_unsafe %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"*, align 8, !MPK-Unsafe !4
  %1 = getelementptr inbounds %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>", %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* %self, i64 %count
  store %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* %1, %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"** %0, align 8, !MPK-Unsafe !4
  %2 = load %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"*, %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"** %0, align 8, !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* %2
}

; core::ptr::const_ptr::<impl *const T>::offset
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe i8* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17heac2013d1e6fa26eE"(i8* mpk_immut mpk_unsafe %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8, !MPK-Unsafe !4
  %1 = getelementptr inbounds i8, i8* %self, i64 %count
  store i8* %1, i8** %0, align 8, !MPK-Unsafe !4
  %2 = load i8*, i8** %0, align 8, !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %2
}

; core::ptr::const_ptr::<impl *const T>::offset
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe i8** @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hf443a42724a6b824E"(i8** mpk_immut mpk_unsafe %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i8**, align 8, !MPK-Unsafe !4
  %1 = getelementptr inbounds i8*, i8** %self, i64 %count
  store i8** %1, i8*** %0, align 8, !MPK-Unsafe !4
  %2 = load i8**, i8*** %0, align 8, !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i8** %2
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h5131a45c264af9bdE"(i8* mpk_immut %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h2214cd8937c16009E"(i8* mpk_immut %self, i8* mpk_immut null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut %"std::mem::MaybeUninit<std::ffi::OsString>"* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h1952cfc07ef3a18eE"([0 x %"std::mem::MaybeUninit<std::ffi::OsString>"]* mpk_immut %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x %"std::mem::MaybeUninit<std::ffi::OsString>"]* %self.0 to %"std::mem::MaybeUninit<std::ffi::OsString>"*
  ret %"std::mem::MaybeUninit<std::ffi::OsString>"* %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h8230072669f6ed79E"([0 x %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"]* mpk_immut %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"]* %self.0 to %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"*
  ret %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h95f9230e8ed649a2E"([0 x i8]* mpk_immut %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut i8** @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17he9b404f708bef45cE"([0 x i8*]* mpk_immut %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8*]* %self.0 to i8**
  ret i8** %0
}

; core::str::<impl str>::starts_with
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h60627922999eaaf8E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %pat.0, i64 %pat.1) unnamed_addr #1 {
start:
; call <&str as core::str::pattern::Pattern>::is_prefix_of
  %0 = call zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h6954df47436e1f35E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %pat.0, i64 %pat.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::str::<impl str>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h6ec6e77861e1899fE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, i64 %i.0, i64 %i.1) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h6bfa8089af37a505E"(i64 %i.0, i64 %i.1, [0 x i8]* mpk_immut mpk_unsafe %self.0, i64 %self.1), !MPK-Unsafe !4
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::str::<impl str>::len
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc05e4790373b1284E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8, !MPK-Unsafe !4
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8, !noalias !70, !MPK-Unsafe !4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8, !noalias !70, !MPK-Unsafe !4
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !noalias !70, !nonnull !11, !MPK-Unsafe !4
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !noalias !70, !MPK-Unsafe !4
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %_3.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::len
  %9 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h0631a2df7f60cba4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_3.0, i64 %_3.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %9
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h1b26b041629305f9E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca %"std::result::Result<u32, std::num::ParseIntError>", align 4
; call core::num::<impl core::str::traits::FromStr for u32>::from_str
  %2 = call i64 @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$u32$GT$8from_str17h9ed30d22c2318823E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1)
  store i64 %2, i64* %0, align 8
  %3 = bitcast %"std::result::Result<u32, std::num::ParseIntError>"* %1 to i8*
  %4 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"std::result::Result<u32, std::num::ParseIntError>"* %1 to i64*
  %6 = load i64, i64* %5, align 4
  ret i64 %6
}

; core::str::<impl str>::split
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h17c260f0a3fde4a5E"(%"std::str::Split<char>"* noalias nocapture sret dereferenceable(72) %0, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, i32 %pat) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_6 = alloca %"std::str::pattern::CharSearcher", align 8
  %_3 = alloca %"core::str::iter::SplitInternal<char>", align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
; invoke core::str::<impl str>::len
  %_4 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc05e4790373b1284E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; invoke <char as core::str::pattern::Pattern>::into_searcher
  invoke void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h36c2ebf4f2054de9E"(%"std::str::pattern::CharSearcher"* noalias nocapture sret dereferenceable(48) %_6, i32 %pat, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %2 = bitcast %"core::str::iter::SplitInternal<char>"* %_3 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 3
  store i64 %_4, i64* %3, align 8
  %4 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 5
  %5 = bitcast %"std::str::pattern::CharSearcher"* %4 to i8*
  %6 = bitcast %"std::str::pattern::CharSearcher"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 48, i1 false)
  %7 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 7
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 9
  store i8 0, i8* %8, align 1
  %9 = bitcast %"std::str::Split<char>"* %0 to %"core::str::iter::SplitInternal<char>"*
  %10 = bitcast %"core::str::iter::SplitInternal<char>"* %9 to i8*
  %11 = bitcast %"core::str::iter::SplitInternal<char>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 72, i1 false)
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %12 = bitcast { i8*, i32 }* %1 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17

bb4:                                              ; preds = %bb5
  br label %bb3

bb5:                                              ; preds = %cleanup
  %18 = load i8, i8* %_9, align 1, !range !5
  %19 = trunc i8 %18 to i1
  br i1 %19, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  %22 = extractvalue { i8*, i32 } %20, 1
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  br label %bb5
}

; core::str::iter::SplitInternal<P>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17hd2eb95b05998ccbaE"(%"core::str::iter::SplitInternal<char>"* align 8 dereferenceable(72) %self) unnamed_addr #0 {
start:
  %_12 = alloca { i64, i64 }, align 8
  %_5 = alloca %"std::option::Option<(usize, usize)>", align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 9
  %2 = load i8, i8* %1, align 1, !range !5
  %_2 = trunc i8 %2 to i1
  br i1 %_2, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 5
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %3 = call { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hca190abbc3d630cdE"(%"std::str::pattern::CharSearcher"* mpk_immut noalias readonly align 8 dereferenceable(48) %_4)
  %haystack.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %haystack.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb2:                                              ; preds = %start
  %4 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %4, align 8
  br label %bb11

bb3:                                              ; preds = %bb1
  %_6 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 5
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
  call void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h2c4e4a7535cc95d1E"(%"std::option::Option<(usize, usize)>"* noalias nocapture sret dereferenceable(24) %_5, %"std::str::pattern::CharSearcher"* align 8 dereferenceable(48) %_6)
  br label %bb4

bb4:                                              ; preds = %bb3
  %5 = bitcast %"std::option::Option<(usize, usize)>"* %_5 to i64*
  %_7 = load i64, i64* %5, align 8, !range !22
  switch i64 %_7, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb5:                                              ; preds = %bb4
; call core::str::iter::SplitInternal<P>::get_end
  %6 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17hb5493f0cb497a63cE"(%"core::str::iter::SplitInternal<char>"* align 8 dereferenceable(72) %self)
  store { i8*, i64 } %6, { i8*, i64 }* %0, align 8
  br label %bb9

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %7 = bitcast %"std::option::Option<(usize, usize)>"* %_5 to %"std::option::Option<(usize, usize)>::Some"*
  %8 = getelementptr inbounds %"std::option::Option<(usize, usize)>::Some", %"std::option::Option<(usize, usize)>::Some"* %7, i32 0, i32 1
  %9 = bitcast { i64, i64 }* %8 to i64*
  %a = load i64, i64* %9, align 8
  %10 = bitcast %"std::option::Option<(usize, usize)>"* %_5 to %"std::option::Option<(usize, usize)>::Some"*
  %11 = getelementptr inbounds %"std::option::Option<(usize, usize)>::Some", %"std::option::Option<(usize, usize)>::Some"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  %b = load i64, i64* %12, align 8
  %13 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*
  %_13 = load i64, i64* %13, align 8, !MPK-Unsafe !4
  %14 = bitcast { i64, i64 }* %_12 to i64*
  store i64 %_13, i64* %14, align 8, !MPK-Unsafe !4
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1
  store i64 %a, i64* %15, align 8, !MPK-Unsafe !4
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 0
  %17 = load i64, i64* %16, align 8, !MPK-Unsafe !4
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1
  %19 = load i64, i64* %18, align 8, !MPK-Unsafe !4
; call core::str::<impl str>::get_unchecked
  %20 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h6ec6e77861e1899fE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %haystack.0, i64 %haystack.1, i64 %17, i64 %19), !MPK-Unsafe !4
  %elt.0 = extractvalue { [0 x i8]*, i64 } %20, 0
  %elt.1 = extractvalue { [0 x i8]*, i64 } %20, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %21 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*
  store i64 %b, i64* %21, align 8, !MPK-Unsafe !4
  %22 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %22, i32 0, i32 0
  store [0 x i8]* %elt.0, [0 x i8]** %23, align 8, !MPK-Unsafe !4
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %22, i32 0, i32 1
  store i64 %elt.1, i64* %24, align 8, !MPK-Unsafe !4
  br label %bb10

bb9:                                              ; preds = %bb5
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb2
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = insertvalue { i8*, i64 } undef, i8* %26, 0
  %30 = insertvalue { i8*, i64 } %29, i64 %28, 1
  ret { i8*, i64 } %30
}

; core::str::iter::SplitInternal<P>::get_end
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17hb5493f0cb497a63cE"(%"core::str::iter::SplitInternal<char>"* align 8 dereferenceable(72) %self) unnamed_addr #0 {
start:
  %_15 = alloca { i64, i64 }, align 8
  %_5 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 9
  %2 = load i8, i8* %1, align 1, !range !5
  %_4 = trunc i8 %2 to i1
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb3, label %bb2

bb1:                                              ; preds = %bb8
  store i8 1, i8* %_2, align 1
  br label %bb4

bb2:                                              ; preds = %bb8, %start
  store i8 0, i8* %_2, align 1
  br label %bb4

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 7
  %4 = load i8, i8* %3, align 8, !range !5
  %_6 = trunc i8 %4 to i1
  br i1 %_6, label %bb5, label %bb7

bb4:                                              ; preds = %bb2, %bb1
  %5 = load i8, i8* %_2, align 1, !range !5
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb10, label %bb9

bb5:                                              ; preds = %bb7, %bb3
  store i8 1, i8* %_5, align 1
  br label %bb8

bb6:                                              ; preds = %bb7
  store i8 0, i8* %_5, align 1
  br label %bb8

bb7:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 3
  %_9 = load i64, i64* %7, align 8
  %8 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*
  %_10 = load i64, i64* %8, align 8
  %_8 = sub i64 %_9, %_10
  %_7 = icmp ugt i64 %_8, 0
  br i1 %_7, label %bb5, label %bb6

bb8:                                              ; preds = %bb6, %bb5
  %9 = load i8, i8* %_5, align 1, !range !5
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb1, label %bb2

bb9:                                              ; preds = %bb4
  %11 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %11, align 8
  br label %bb13

bb10:                                             ; preds = %bb4
  %12 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 9
  store i8 1, i8* %12, align 1
  %_14 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 5
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %13 = call { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hca190abbc3d630cdE"(%"std::str::pattern::CharSearcher"* mpk_immut noalias readonly align 8 dereferenceable(48) %_14), !MPK-Unsafe !4
  %_13.0 = extractvalue { [0 x i8]*, i64 } %13, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %13, 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %14 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*
  %_16 = load i64, i64* %14, align 8, !MPK-Unsafe !4
  %15 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 3
  %_17 = load i64, i64* %15, align 8, !MPK-Unsafe !4
  %16 = bitcast { i64, i64 }* %_15 to i64*
  store i64 %_16, i64* %16, align 8, !MPK-Unsafe !4
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1
  store i64 %_17, i64* %17, align 8, !MPK-Unsafe !4
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 0
  %19 = load i64, i64* %18, align 8, !MPK-Unsafe !4
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1
  %21 = load i64, i64* %20, align 8, !MPK-Unsafe !4
; call core::str::<impl str>::get_unchecked
  %22 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h6ec6e77861e1899fE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_13.0, i64 %_13.1, i64 %19, i64 %21), !MPK-Unsafe !4
  %string.0 = extractvalue { [0 x i8]*, i64 } %22, 0
  %string.1 = extractvalue { [0 x i8]*, i64 } %22, 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %23 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 0
  store [0 x i8]* %string.0, [0 x i8]** %24, align 8, !MPK-Unsafe !4
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 1
  store i64 %string.1, i64* %25, align 8, !MPK-Unsafe !4
  br label %bb13

bb13:                                             ; preds = %bb9, %bb12
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = insertvalue { i8*, i64 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i64 } %30, i64 %29, 1
  ret { i8*, i64 } %31
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h6bfa8089af37a505E"(i64 %self.0, i64 %self.1, [0 x i8]* mpk_immut mpk_unsafe %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  store i64 1, i64* @METASAFE_TYPE_ID, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call mpk_immut i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h95f9230e8ed649a2E"([0 x i8]* mpk_immut %slice.0, i64 %slice.1), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::add
  %ptr = call mpk_immut mpk_unsafe i8* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h99c8c1bbc0117f6dE"(i8* mpk_immut mpk_unsafe %_6, i64 %self.0), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %len = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h3e19100558fc09ecE(i8* mpk_immut %ptr, i64 %len)
  %_12.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !MPK-SmartPointer !3
  %_12.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_12.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_12.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::str::traits::<impl core::cmp::PartialEq for str>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h72016345713e77e8E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %other.0, i64 %other.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8, !MPK-Unsafe !4
  %1 = alloca { [0 x i8]*, i64 }, align 8, !MPK-Unsafe !4
  %_7 = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8, !noalias !73, !MPK-Unsafe !4
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8, !noalias !73, !MPK-Unsafe !4
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !noalias !73, !nonnull !11, !MPK-Unsafe !4
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %7 = load i64, i64* %6, align 8, !noalias !73, !MPK-Unsafe !4
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  store { [0 x i8]*, i64 } %9, { [0 x i8]*, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %10, align 8, !noalias !76, !MPK-Unsafe !4
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %other.1, i64* %11, align 8, !noalias !76, !MPK-Unsafe !4
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %13 = load [0 x i8]*, [0 x i8]** %12, align 8, !noalias !76, !nonnull !11, !MPK-Unsafe !4
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !76, !MPK-Unsafe !4
  %16 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %17 = insertvalue { [0 x i8]*, i64 } %16, i64 %15, 1
  store { [0 x i8]*, i64 } %17, { [0 x i8]*, i64 }* %_7, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %18 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h5a0874503325093dE"({ [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %_4, { [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %18
}

; core::str::traits::<impl core::cmp::PartialEq for str>::ne
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2ne17h840cf27d56ba505eE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %other.0, i64 %other.1) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_3 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h72016345713e77e8E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %other.0, i64 %other.1)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_3, true
  ret i1 %0
}

; core::str::converts::from_utf8_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h15739ddae93ad68aE([0 x i8]* mpk_immut noalias nonnull readonly align 1 %v.0, i64 %v.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8, !MPK-Unsafe !4
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %v.0, [0 x i8]** %1, align 8, !MPK-Unsafe !4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %v.1, i64* %2, align 8, !MPK-Unsafe !4
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !11, !MPK-Unsafe !4
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  ret { [0 x i8]*, i64 } %8
}

; core::str::converts::from_utf8_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17hffd4be3b47748c6cE([0 x i8]* nonnull align 1 %v.0, i64 %v.1) unnamed_addr #0 {
start:
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %v.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %v.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h28b97aadef0fc734E(i32 %0, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1) unnamed_addr #0 {
start:
  %_97 = alloca i64, align 8
  %_80 = alloca i64, align 8
  %_76 = alloca { [0 x i64], i64*, [0 x i64], i32*, [0 x i64], i64*, [0 x i64] }, align 8
  %_75 = alloca [3 x { i8*, i64* }], align 8
  %_68 = alloca %"std::fmt::Arguments", align 8
  %_11 = alloca %"std::ops::RangeFull", align 1
  %_6 = alloca { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, align 8
  %len = alloca i64, align 8
  %code = alloca i32, align 4
  store i32 %0, i32* %code, align 4
  %_5 = load i32, i32* %code, align 4
; call core::char::methods::len_utf8
  %1 = call i64 @_ZN4core4char7methods8len_utf817h623fa012aacc26a6E(i32 %_5)
  store i64 %1, i64* %len, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %len, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %2 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h9d8832c810e1fd7fE"([0 x i8]* nonnull align 1 %dst.0, i64 %dst.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc185 to %"std::panic::Location"*))
  %_9.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_9.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6 to i64*
  store i64 %_7, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6, i32 0, i32 3
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  store [0 x i8]* %_9.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  store i64 %_9.1, i64* %6, align 8
  %7 = bitcast { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6 to i64*
  %8 = load i64, i64* %7, align 8
  switch i64 %8, label %bb4 [
    i64 1, label %bb3
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
  ]

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6, i32 0, i32 3
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !11
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %_12 = load i64, i64* %12, align 8
  %_14 = icmp uge i64 %_12, 1
  br i1 %_14, label %bb8, label %bb4

bb4:                                              ; preds = %bb3, %bb5, %bb6, %bb7, %bb2
; call core::slice::<impl [T]>::len
  %13 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h0631a2df7f60cba4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %dst.0, i64 %dst.1)
  store i64 %13, i64* %_80, align 8
  br label %bb12

bb5:                                              ; preds = %bb2
  %14 = getelementptr inbounds { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6, i32 0, i32 3
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0
  %16 = load [0 x i8]*, [0 x i8]** %15, align 8, !nonnull !11
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1
  %_15 = load i64, i64* %17, align 8
  %_17 = icmp uge i64 %_15, 2
  br i1 %_17, label %bb9, label %bb4

bb6:                                              ; preds = %bb2
  %18 = getelementptr inbounds { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6, i32 0, i32 3
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %18, i32 0, i32 0
  %20 = load [0 x i8]*, [0 x i8]** %19, align 8, !nonnull !11
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %18, i32 0, i32 1
  %_18 = load i64, i64* %21, align 8
  %_20 = icmp uge i64 %_18, 3
  br i1 %_20, label %bb10, label %bb4

bb7:                                              ; preds = %bb2
  %22 = getelementptr inbounds { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6, i32 0, i32 3
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %22, i32 0, i32 0
  %24 = load [0 x i8]*, [0 x i8]** %23, align 8, !nonnull !11
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %22, i32 0, i32 1
  %_21 = load i64, i64* %25, align 8
  %_23 = icmp uge i64 %_21, 4
  br i1 %_23, label %bb11, label %bb4

bb8:                                              ; preds = %bb3
  %26 = getelementptr inbounds { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6, i32 0, i32 3
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0
  %28 = load [0 x i8]*, [0 x i8]** %27, align 8, !nonnull !11
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %a6 = getelementptr inbounds [0 x i8], [0 x i8]* %28, i64 0, i64 0
  %_25 = load i32, i32* %code, align 4
  %31 = trunc i32 %_25 to i8
  store i8 %31, i8* %a6, align 1
  br label %bb17

bb9:                                              ; preds = %bb5
  %32 = getelementptr inbounds { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6, i32 0, i32 3
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0
  %34 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !11
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %a4 = getelementptr inbounds [0 x i8], [0 x i8]* %34, i64 0, i64 0
  %37 = getelementptr inbounds { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6, i32 0, i32 3
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 0
  %39 = load [0 x i8]*, [0 x i8]** %38, align 8, !nonnull !11
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %b5 = getelementptr inbounds [0 x i8], [0 x i8]* %39, i64 0, i64 1
  %_31 = load i32, i32* %code, align 4
  %_30 = lshr i32 %_31, 6
  %_29 = and i32 %_30, 31
  %_28 = trunc i32 %_29 to i8
  %42 = or i8 %_28, -64
  store i8 %42, i8* %a4, align 1
  %_34 = load i32, i32* %code, align 4
  %_33 = and i32 %_34, 63
  %_32 = trunc i32 %_33 to i8
  %43 = or i8 %_32, -128
  store i8 %43, i8* %b5, align 1
  br label %bb17

bb10:                                             ; preds = %bb6
  %44 = getelementptr inbounds { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6, i32 0, i32 3
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %44, i32 0, i32 0
  %46 = load [0 x i8]*, [0 x i8]** %45, align 8, !nonnull !11
  %47 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %44, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %a1 = getelementptr inbounds [0 x i8], [0 x i8]* %46, i64 0, i64 0
  %49 = getelementptr inbounds { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6, i32 0, i32 3
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %49, i32 0, i32 0
  %51 = load [0 x i8]*, [0 x i8]** %50, align 8, !nonnull !11
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %49, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %b2 = getelementptr inbounds [0 x i8], [0 x i8]* %51, i64 0, i64 1
  %54 = getelementptr inbounds { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6, i32 0, i32 3
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %54, i32 0, i32 0
  %56 = load [0 x i8]*, [0 x i8]** %55, align 8, !nonnull !11
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %54, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %c3 = getelementptr inbounds [0 x i8], [0 x i8]* %56, i64 0, i64 2
  %_41 = load i32, i32* %code, align 4
  %_40 = lshr i32 %_41, 12
  %_39 = and i32 %_40, 15
  %_38 = trunc i32 %_39 to i8
  %59 = or i8 %_38, -32
  store i8 %59, i8* %a1, align 1
  %_45 = load i32, i32* %code, align 4
  %_44 = lshr i32 %_45, 6
  %_43 = and i32 %_44, 63
  %_42 = trunc i32 %_43 to i8
  %60 = or i8 %_42, -128
  store i8 %60, i8* %b2, align 1
  %_48 = load i32, i32* %code, align 4
  %_47 = and i32 %_48, 63
  %_46 = trunc i32 %_47 to i8
  %61 = or i8 %_46, -128
  store i8 %61, i8* %c3, align 1
  br label %bb17

bb11:                                             ; preds = %bb7
  %62 = getelementptr inbounds { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6, i32 0, i32 3
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 0
  %64 = load [0 x i8]*, [0 x i8]** %63, align 8, !nonnull !11
  %65 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %a = getelementptr inbounds [0 x i8], [0 x i8]* %64, i64 0, i64 0
  %67 = getelementptr inbounds { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6, i32 0, i32 3
  %68 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %67, i32 0, i32 0
  %69 = load [0 x i8]*, [0 x i8]** %68, align 8, !nonnull !11
  %70 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %67, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %b = getelementptr inbounds [0 x i8], [0 x i8]* %69, i64 0, i64 1
  %72 = getelementptr inbounds { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6, i32 0, i32 3
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %72, i32 0, i32 0
  %74 = load [0 x i8]*, [0 x i8]** %73, align 8, !nonnull !11
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %72, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %c = getelementptr inbounds [0 x i8], [0 x i8]* %74, i64 0, i64 2
  %77 = getelementptr inbounds { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }, { [0 x i64], i64, [0 x i64], { [0 x i8]*, i64 }, [0 x i64] }* %_6, i32 0, i32 3
  %78 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %77, i32 0, i32 0
  %79 = load [0 x i8]*, [0 x i8]** %78, align 8, !nonnull !11
  %80 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %77, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %d = getelementptr inbounds [0 x i8], [0 x i8]* %79, i64 0, i64 3
  %_56 = load i32, i32* %code, align 4
  %_55 = lshr i32 %_56, 18
  %_54 = and i32 %_55, 7
  %_53 = trunc i32 %_54 to i8
  %82 = or i8 %_53, -16
  store i8 %82, i8* %a, align 1
  %_60 = load i32, i32* %code, align 4
  %_59 = lshr i32 %_60, 12
  %_58 = and i32 %_59, 63
  %_57 = trunc i32 %_58 to i8
  %83 = or i8 %_57, -128
  store i8 %83, i8* %b, align 1
  %_64 = load i32, i32* %code, align 4
  %_63 = lshr i32 %_64, 6
  %_62 = and i32 %_63, 63
  %_61 = trunc i32 %_62 to i8
  %84 = or i8 %_61, -128
  store i8 %84, i8* %c, align 1
  %_67 = load i32, i32* %code, align 4
  %_66 = and i32 %_67, 63
  %_65 = trunc i32 %_66 to i8
  %85 = or i8 %_65, -128
  store i8 %85, i8* %d, align 1
  br label %bb17

bb12:                                             ; preds = %bb4
  %86 = bitcast { [0 x i64], i64*, [0 x i64], i32*, [0 x i64], i64*, [0 x i64] }* %_76 to i64**
  store i64* %len, i64** %86, align 8
  %87 = getelementptr inbounds { [0 x i64], i64*, [0 x i64], i32*, [0 x i64], i64*, [0 x i64] }, { [0 x i64], i64*, [0 x i64], i32*, [0 x i64], i64*, [0 x i64] }* %_76, i32 0, i32 3
  store i32* %code, i32** %87, align 8
  %88 = getelementptr inbounds { [0 x i64], i64*, [0 x i64], i32*, [0 x i64], i64*, [0 x i64] }, { [0 x i64], i64*, [0 x i64], i32*, [0 x i64], i64*, [0 x i64] }* %_76, i32 0, i32 5
  store i64* %_80, i64** %88, align 8
  %89 = bitcast { [0 x i64], i64*, [0 x i64], i32*, [0 x i64], i64*, [0 x i64] }* %_76 to i64**
  %arg0 = load i64*, i64** %89, align 8, !nonnull !11
  %90 = getelementptr inbounds { [0 x i64], i64*, [0 x i64], i32*, [0 x i64], i64*, [0 x i64] }, { [0 x i64], i64*, [0 x i64], i32*, [0 x i64], i64*, [0 x i64] }* %_76, i32 0, i32 3
  %arg1 = load i32*, i32** %90, align 8, !nonnull !11
  %91 = getelementptr inbounds { [0 x i64], i64*, [0 x i64], i32*, [0 x i64], i64*, [0 x i64] }, { [0 x i64], i64*, [0 x i64], i32*, [0 x i64], i64*, [0 x i64] }* %_76, i32 0, i32 5
  %arg2 = load i64*, i64** %91, align 8, !nonnull !11
; call core::fmt::ArgumentV1::new
  %92 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h9614be4a74880fe3E(i64* mpk_immut noalias readonly align 8 dereferenceable(8) %arg0, i1 (i64*, %"std::fmt::Formatter"*)* mpk_immut nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h0f57e3373191c50eE")
  %_85.0 = extractvalue { i8*, i64* } %92, 0
  %_85.1 = extractvalue { i8*, i64* } %92, 1
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::fmt::ArgumentV1::new
  %93 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hd30e0ab06b7a3addE(i32* mpk_immut noalias readonly align 4 dereferenceable(4) %arg1, i1 (i32*, %"std::fmt::Formatter"*)* mpk_immut nonnull @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h4773017a326a508bE")
  %_88.0 = extractvalue { i8*, i64* } %93, 0
  %_88.1 = extractvalue { i8*, i64* } %93, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::fmt::ArgumentV1::new
  %94 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h9614be4a74880fe3E(i64* mpk_immut noalias readonly align 8 dereferenceable(8) %arg2, i1 (i64*, %"std::fmt::Formatter"*)* mpk_immut nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h0f57e3373191c50eE")
  %_91.0 = extractvalue { i8*, i64* } %94, 0
  %_91.1 = extractvalue { i8*, i64* } %94, 1
  br label %bb15

bb15:                                             ; preds = %bb14
  %95 = bitcast [3 x { i8*, i64* }]* %_75 to { i8*, i64* }*
  %96 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %95, i32 0, i32 0
  store i8* %_85.0, i8** %96, align 8
  %97 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %95, i32 0, i32 1
  store i64* %_85.1, i64** %97, align 8
  %98 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_75, i32 0, i32 1
  %99 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %98, i32 0, i32 0
  store i8* %_88.0, i8** %99, align 8
  %100 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %98, i32 0, i32 1
  store i64* %_88.1, i64** %100, align 8
  %101 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_75, i32 0, i32 2
  %102 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %101, i32 0, i32 0
  store i8* %_91.0, i8** %102, align 8
  %103 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %101, i32 0, i32 1
  store i64* %_91.1, i64** %103, align 8
  %_72.0 = bitcast [3 x { i8*, i64* }]* %_75 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_68, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc126 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 %_72.0, i64 3)
  br label %bb16

bb16:                                             ; preds = %bb15
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h08461824ca4df3e0E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_68, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc189 to %"std::panic::Location"*))
  unreachable

bb17:                                             ; preds = %bb8, %bb9, %bb10, %bb11
  %_98 = load i64, i64* %len, align 8
  store i64 %_98, i64* %_97, align 8
  %104 = load i64, i64* %_97, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %105 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hc694761f040c1565E"([0 x i8]* nonnull align 1 %dst.0, i64 %dst.1, i64 %104, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc187 to %"std::panic::Location"*))
  %_95.0 = extractvalue { [0 x i8]*, i64 } %105, 0
  %_95.1 = extractvalue { [0 x i8]*, i64 } %105, 1
  br label %bb18

bb18:                                             ; preds = %bb17
  %106 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_95.0, 0
  %107 = insertvalue { [0 x i8]*, i64 } %106, i64 %_95.1, 1
  ret { [0 x i8]*, i64 } %107
}

; core::char::methods::<impl char>::encode_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817hae57437d21b9e930E"(i32 %self, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1) unnamed_addr #0 {
start:
  %0 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %0), !MPK-Unsafe !4
; call core::char::methods::encode_utf8_raw
  %1 = call { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h28b97aadef0fc734E(i32 %self, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1), !MPK-Unsafe !4
  %_7.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked_mut
  %2 = call { [0 x i8]*, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17hffd4be3b47748c6cE([0 x i8]* nonnull align 1 %_7.0, i64 %_7.1), !MPK-Unsafe !4
  %_5.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_5.0, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %_5.1, 1
  ret { [0 x i8]*, i64 } %4
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4char7methods8len_utf817h623fa012aacc26a6E(i32 %code) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_2 = icmp ult i32 %code, 128
  br i1 %_2, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %_4 = icmp ult i32 %code, 2048
  br i1 %_4, label %bb4, label %bb3

bb2:                                              ; preds = %start
  store i64 1, i64* %0, align 8
  br label %bb9

bb3:                                              ; preds = %bb1
  %_6 = icmp ult i32 %code, 65536
  br i1 %_6, label %bb6, label %bb5

bb4:                                              ; preds = %bb1
  store i64 2, i64* %0, align 8
  br label %bb8

bb5:                                              ; preds = %bb3
  store i64 4, i64* %0, align 8
  br label %bb7

bb6:                                              ; preds = %bb3
  store i64 3, i64* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  br label %bb8

bb8:                                              ; preds = %bb7, %bb4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb2
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; core::hint::black_box
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core4hint9black_box17haf62e4539d9d534eE() unnamed_addr #0 {
start:
  %dummy = alloca {}, align 1
  call void asm sideeffect "", "r,~{memory},~{dirflag},~{fpsr},~{flags}"({}* %dummy), !MPK-Unsafe !4, !srcloc !79
  ret void
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hccbeef3c3cfa1a66E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %_3 = bitcast { i64, i64 }* %self to i64*
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17hdfeb2774e9a09366E"(i64* mpk_immut noalias readonly align 8 dereferenceable(8) %_3, i64* mpk_immut noalias readonly align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb7

bb3:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hfd1821a1a4d07b4cE"(i64* mpk_immut noalias readonly align 8 dereferenceable(8) %_7), !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hf6bbc741b2b54270E"(i64 %_6, i64 1), !MPK-Unsafe !4
  br label %bb5

bb5:                                              ; preds = %bb4
  %_10 = bitcast { i64, i64 }* %self to i64*
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17h58124cfc911d8b54E(i64* align 8 dereferenceable(8) %_10, i64 %n)
  br label %bb6

bb6:                                              ; preds = %bb5
  %2 = bitcast { i64, i64 }* %0 to %"std::option::Option<usize>::Some"*
  %3 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %2, i32 0, i32 1
  store i64 %_8, i64* %3, align 8
  %4 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %4, align 8
  br label %bb7

bb7:                                              ; preds = %bb2, %bb6
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8, !range !22
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; core::iter::traits::iterator::Iterator::advance_by
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator10advance_by17h7e194a69978e406aE(%"std::str::Split<char>"* align 8 dereferenceable(72) %self, i64 %n) unnamed_addr #0 {
start:
  %_17 = alloca %"std::result::Result<&str, usize>", align 8
  %_16 = alloca %"std::result::Result<&str, usize>", align 8
  %_8 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_4 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_4 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %n, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %7 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h01c571666e8849f0E"(i64 %4, i64 %6)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_3.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_3.1, i64* %9, align 8
  br label %bb2

bb2:                                              ; preds = %bb15, %bb1
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %10 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hccbeef3c3cfa1a66E"({ i64, i64 }* align 8 dereferenceable(16) %iter)
  store { i64, i64 } %10, { i64, i64 }* %_8, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %11 = bitcast { i64, i64 }* %_8 to i64*
  %_11 = load i64, i64* %11, align 8, !range !22
  switch i64 %_11, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb4:                                              ; preds = %bb3
  %12 = bitcast { i64, i64 }* %0 to %"std::result::Result<(), usize>::Ok"*
  %13 = getelementptr inbounds %"std::result::Result<(), usize>::Ok", %"std::result::Result<(), usize>::Ok"* %12, i32 0, i32 1
  %14 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %14, align 8
  br label %bb16

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  %15 = bitcast { i64, i64 }* %_8 to %"std::option::Option<usize>::Some"*
  %16 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %15, i32 0, i32 1
  %val = load i64, i64* %16, align 8
; call <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %17 = call { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hafb586f3e80f4c52E"(%"std::str::Split<char>"* align 8 dereferenceable(72) %self)
  %_18.0 = extractvalue { i8*, i64 } %17, 0
  %_18.1 = extractvalue { i8*, i64 } %17, 1
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h8745657d193f9648E"(%"std::result::Result<&str, usize>"* noalias nocapture sret dereferenceable(24) %_17, i8* mpk_immut noalias readonly align 1 %_18.0, i64 %_18.1, i64 %val)
  br label %bb8

bb8:                                              ; preds = %bb7
; call <core::result::Result<T,E> as core::ops::try::Try>::into_result
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h067ad97db228bbd6E"(%"std::result::Result<&str, usize>"* noalias nocapture sret dereferenceable(24) %_16, %"std::result::Result<&str, usize>"* noalias nocapture dereferenceable(24) %_17)
  br label %bb9

bb9:                                              ; preds = %bb8
  %18 = bitcast %"std::result::Result<&str, usize>"* %_16 to i64*
  %_21 = load i64, i64* %18, align 8, !range !22
  switch i64 %_21, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ]

bb10:                                             ; preds = %bb9
  %19 = bitcast %"std::result::Result<&str, usize>"* %_16 to %"std::result::Result<&str, usize>::Ok"*
  %20 = getelementptr inbounds %"std::result::Result<&str, usize>::Ok", %"std::result::Result<&str, usize>::Ok"* %19, i32 0, i32 1
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0
  %val.0 = load [0 x i8]*, [0 x i8]** %21, align 8, !nonnull !11
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1
  %val.1 = load i64, i64* %22, align 8
  br label %bb15

bb11:                                             ; preds = %bb9
  unreachable

bb12:                                             ; preds = %bb9
  %23 = bitcast %"std::result::Result<&str, usize>"* %_16 to %"std::result::Result<&str, usize>::Err"*
  %24 = getelementptr inbounds %"std::result::Result<&str, usize>::Err", %"std::result::Result<&str, usize>::Err"* %23, i32 0, i32 1
  %err = load i64, i64* %24, align 8
; call <T as core::convert::From<T>>::from
  %_23 = call i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h688208fb66f98234E"(i64 %err)
  br label %bb13

bb13:                                             ; preds = %bb12
; call <core::result::Result<T,E> as core::ops::try::Try>::from_error
  %25 = call { i64, i64 } @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h7744c582a962a258E"(i64 %_23)
  store { i64, i64 } %25, { i64, i64 }* %0, align 8
  br label %bb14

bb14:                                             ; preds = %bb13
  br label %bb16

bb15:                                             ; preds = %bb10
  br label %bb2

bb16:                                             ; preds = %bb4, %bb14
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8, !range !22
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1
  ret { i64, i64 } %31
}

; core::iter::traits::iterator::Iterator::nth
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN4core4iter6traits8iterator8Iterator3nth17hb705b75ad30588e1E(%"std::str::Split<char>"* align 8 dereferenceable(72) %self, i64 %n) unnamed_addr #0 {
start:
  %_3 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
; call core::iter::traits::iterator::Iterator::advance_by
  %1 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator10advance_by17h7e194a69978e406aE(%"std::str::Split<char>"* align 8 dereferenceable(72) %self, i64 %n)
  %_5.0 = extractvalue { i64, i64 } %1, 0
  %_5.1 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::ok
  %_4 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h02870a3b3a2ccb95E"(i64 %_5.0, i64 %_5.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::option::Option<T> as core::ops::try::Try>::into_result
  %2 = call zeroext i1 @"_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h3b4307948a7547e3E"(i1 zeroext %_4)
  %3 = zext i1 %2 to i8
  store i8 %3, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = load i8, i8* %_3, align 1, !range !5
  %5 = trunc i8 %4 to i1
  %_8 = zext i1 %5 to i64
  switch i64 %_8, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb4:                                              ; preds = %bb3
; call <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %6 = call { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hafb586f3e80f4c52E"(%"std::str::Split<char>"* align 8 dereferenceable(72) %self)
  store { i8*, i64 } %6, { i8*, i64 }* %0, align 8
  br label %bb9

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h0ac440e7d91996d3E"()
  br label %bb7

bb7:                                              ; preds = %bb6
; call <core::option::Option<T> as core::ops::try::Try>::from_error
  %7 = call { i8*, i64 } @"_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hacc57c94fec72598E"()
  store { i8*, i64 } %7, { i8*, i64 }* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { i8*, i64 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64 } %12, i64 %11, 1
  ret { i8*, i64 } %13
}

; core::alloc::layout::size_align
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout10size_align17h4dcc4343069d5334E() unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 640, i64* %1, align 8
  %3 = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 8, i64* %0, align 8
  %4 = load i64, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64, i64 }* %2 to i64*
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; core::alloc::layout::size_align
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout10size_align17h730afec161e15256E() unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 544, i64* %1, align 8
  %3 = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 8, i64* %0, align 8
  %4 = load i64, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64, i64 }* %2 to i64*
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; core::alloc::layout::Layout::from_size_align_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha0958cf551fa9892E(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
; call core::num::nonzero::NonZeroUsize::new_unchecked
  %_4 = call i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hbd44f6aa1a738923E(i64 %align), !range !20, !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 %size, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_4, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !20
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h219f40e6c8eda679E() unnamed_addr #0 {
start:
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17h4dcc4343069d5334E()
  %_3.0 = extractvalue { i64, i64 } %0, 0
  %_3.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha0958cf551fa9892E(i64 %_3.0, i64 %_3.1), !MPK-Unsafe !4
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h741bdbba5f2ed990E() unnamed_addr #0 {
start:
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17h730afec161e15256E()
  %_3.0 = extractvalue { i64, i64 } %0, 0
  %_3.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha0958cf551fa9892E(i64 %_3.0, i64 %_3.1), !MPK-Unsafe !4
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::alloc::layout::Layout::size
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout4size17h859723dee916f642E({ i64, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64, i64 }* %self to i64*
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; core::alloc::layout::Layout::align
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout5align17h728db69c08e6e2b2E({ i64, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %_2 = load i64, i64* %0, align 8, !range !20
; call core::num::nonzero::NonZeroUsize::get
  %1 = call i64 @_ZN4core3num7nonzero12NonZeroUsize3get17h9441cfddde214715E(i64 %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::alloc::layout::Layout::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17h3c4ab69173781954E({ i64, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::alloc::layout::Layout::align
  %_3 = call i64 @_ZN4core5alloc6layout6Layout5align17h728db69c08e6e2b2E({ i64, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = inttoptr i64 %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5c5c968be544278cE"(i8* mpk_unsafe %_2), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hfd1821a1a4d07b4cE"(i64* mpk_immut noalias readonly align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = load i64, i64* %self, align 8
  ret i64 %0
}

; core::slice::<impl [T]>::starts_with
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17h38c4165e632ae3b5E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_15 = alloca i64, align 8
  %_12 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca i8, align 1
  %needle = alloca { [0 x i8]*, i64 }, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !11
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 1
  %_4.1 = load i64, i64* %6, align 8
; call core::slice::<impl [T]>::len
  %n = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h0631a2df7f60cba4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_4.0, i64 %_4.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::len
  %_6 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h0631a2df7f60cba4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1)
  br label %bb6

bb2:                                              ; preds = %bb8
  store i8 1, i8* %2, align 1
  br label %bb5

bb3:                                              ; preds = %bb8, %bb6
  store i8 0, i8* %2, align 1
  br label %bb5

bb4:                                              ; preds = %bb6
  store i64 %n, i64* %_15, align 8
  %7 = load i64, i64* %_15, align 8
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %8 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hae4d548c43c15b46E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, i64 %7, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc191 to %"std::panic::Location"*))
  %_13.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb7

bb5:                                              ; preds = %bb3, %bb2
  %9 = load i8, i8* %2, align 1, !range !5
  %10 = trunc i8 %9 to i1
  ret i1 %10

bb6:                                              ; preds = %bb1
  %_5 = icmp uge i64 %_6, %n
  br i1 %_5, label %bb4, label %bb3

bb7:                                              ; preds = %bb4
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 0
  store [0 x i8]* %_13.0, [0 x i8]** %11, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 1
  store i64 %_13.1, i64* %12, align 8
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_9 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h5a0874503325093dE"({ [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %needle, { [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %_12)
  br label %bb8

bb8:                                              ; preds = %bb7
  br i1 %_9, label %bb2, label %bb3
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut align 8 dereferenceable(24) %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h2915c8f9118aed43E"([0 x %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"]* mpk_immut noalias nonnull readonly align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call mpk_immut mpk_unsafe %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h72ac8fd9dffa5a11E"(i64 %index, [0 x %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"]* mpk_immut mpk_unsafe %self.0, i64 %self.1), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* %_3
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut align 8 dereferenceable(8) i8** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h34fcfb30e086a94cE"([0 x i8*]* mpk_immut noalias nonnull readonly align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call mpk_immut mpk_unsafe i8** @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h8cccf82f85dfe6c6E"(i64 %index, [0 x i8*]* mpk_immut mpk_unsafe %self.0, i64 %self.1), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i8** %_3
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut align 1 dereferenceable(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h748ca44f234e7964E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call mpk_immut mpk_unsafe i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h741ed440632cc139E"(i64 %index, [0 x i8]* mpk_immut mpk_unsafe %self.0, i64 %self.1), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %_3
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut align 8 dereferenceable(24) %"std::mem::MaybeUninit<std::ffi::OsString>"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfe52ecf757e3990bE"([0 x %"std::mem::MaybeUninit<std::ffi::OsString>"]* mpk_immut noalias nonnull readonly align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call mpk_immut mpk_unsafe %"std::mem::MaybeUninit<std::ffi::OsString>"* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h2d36023f35dd7735E"(i64 %index, [0 x %"std::mem::MaybeUninit<std::ffi::OsString>"]* mpk_immut mpk_unsafe %self.0, i64 %self.1), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::mem::MaybeUninit<std::ffi::OsString>"* %_3
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 1 dereferenceable(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h645317967e23b4edE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %_6 = call mpk_unsafe i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h7c9dd602ee682fb2E"(i64 %index, [0 x i8]* mpk_unsafe %self.0, i64 %self.1), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %_6
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hee00a66c2aa86079E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1) unnamed_addr #0 {
start:
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %0 = call { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h405b24b080b76800E"(i64 %index.0, i64 %index.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h0631a2df7f60cba4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"std::ptr::Repr<u8>", align 8, !MPK-SmartPointer !3
  %0 = bitcast %"std::ptr::Repr<u8>"* %_2 to { [0 x i8]*, i64 }*, !MPK-SmartPointer !3
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8, !MPK-Unsafe !4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8, !MPK-Unsafe !4
  %3 = bitcast %"std::ptr::Repr<u8>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8, !MPK-Unsafe !4
  ret i64 %5
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h132b05e0356dd56eE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h8dce5be910624dd4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1)
  %1 = extractvalue { i8*, i8* } %0, 0
  %2 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1
  ret { i8*, i8* } %4
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h8a1f3be8d1c09769E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17h059ebe82a3200ccaE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %0 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h7b168c05cab7092cE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %other.0, i64 %other.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17h5c8eec25162ec69aE(i8* mpk_immut mpk_unsafe %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h3e19100558fc09ecE(i8* mpk_immut %data, i64 %len), !MPK-Unsafe !4
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h8dce5be910624dd4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %end = alloca i8*, align 8
  %1 = alloca { i8*, i8* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call mpk_immut i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h8a1f3be8d1c09769E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h5131a45c264af9bdE"(i8* mpk_immut %ptr), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  store i64 1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
; call core::slice::<impl [T]>::len
  %_16 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h0631a2df7f60cba4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %slice.0, i64 %slice.1), !MPK-Unsafe !4
  br label %bb9

bb6:                                              ; preds = %bb4
; call core::slice::<impl [T]>::len
  %_13 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h0631a2df7f60cba4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %slice.0, i64 %slice.1), !MPK-Unsafe !4
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::ptr::const_ptr::<impl *const T>::wrapping_add
  %_10 = call mpk_immut i8* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h4ccced04d4c41c99E"(i8* mpk_immut %ptr, i64 %_13), !MPK-Unsafe !4
  br label %bb8

bb8:                                              ; preds = %bb7
  store i8* %_10, i8** %end, align 8, !MPK-Unsafe !4
  br label %bb11

bb9:                                              ; preds = %bb5
; call core::ptr::const_ptr::<impl *const T>::add
  %4 = call mpk_immut mpk_unsafe i8* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h99c8c1bbc0117f6dE"(i8* mpk_immut mpk_unsafe %ptr, i64 %_16), !MPK-Unsafe !4
  store i8* %4, i8** %end, align 8, !MPK-Unsafe !4
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb11

bb11:                                             ; preds = %bb8, %bb10
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5c5c968be544278cE"(i8* mpk_unsafe %ptr), !MPK-Unsafe !4
  br label %bb12

bb12:                                             ; preds = %bb11
  %_21 = load i8*, i8** %end, align 8, !MPK-Unsafe !4
  %5 = bitcast { i8*, i8* }* %1 to i8**
  store i8* %_18, i8** %5, align 8, !MPK-Unsafe !4
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  store i8* %_21, i8** %6, align 8, !MPK-Unsafe !4
  %7 = bitcast { i8*, i8* }* %1 to %"std::marker::PhantomData<&u8>"*
  %8 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !11
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = insertvalue { i8*, i8* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i8* } %12, i8* %11, 1
  ret { i8*, i8* } %13
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h0fc72280721bc76dE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h8f2194ebaad00742E"(i64 %index.0, i64 %index.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hae4d548c43c15b46E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, i64 %index, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hfe75ae2e71962f17E"(i64 %index, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h9d8832c810e1fd7fE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h154d1ffed99fc432E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hc694761f040c1565E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17he3091bbce1d1eebfE"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::slice::memchr::memchr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5slice6memchr6memchr17hb4c29610b6f49504E(i8 %0, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %text.0, i64 %text.1) unnamed_addr #0 {
start:
  %_10 = alloca i8*, align 8
  %_8 = alloca { i8*, i8* }, align 8
  %1 = alloca { i64, i64 }, align 8
  %x = alloca i8, align 1
  store i8 %0, i8* %x, align 1
; call core::slice::<impl [T]>::len
  %_4 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h0631a2df7f60cba4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %text.0, i64 %text.1)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp ult i64 %_4, 16
  br i1 %_3, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %_12 = load i8, i8* %x, align 1
; call core::slice::memchr::memchr_general_case
  %2 = call { i64, i64 } @_ZN4core5slice6memchr19memchr_general_case17hb178654d3738815eE(i8 %_12, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %text.0, i64 %text.1)
  store { i64, i64 } %2, { i64, i64 }* %1, align 8
  br label %bb6

bb3:                                              ; preds = %bb1
; call core::slice::<impl [T]>::iter
  %3 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h132b05e0356dd56eE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %text.0, i64 %text.1)
  store { i8*, i8* } %3, { i8*, i8* }* %_8, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  store i8* %x, i8** %_10, align 8
  %4 = load i8*, i8** %_10, align 8, !nonnull !11
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
  %5 = call { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h079dc7fbf7059b12E"({ i8*, i8* }* align 8 dereferenceable(16) %_8, i8* mpk_immut noalias readonly align 1 dereferenceable(1) %4)
  store { i64, i64 } %5, { i64, i64 }* %1, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
  br label %bb7

bb6:                                              ; preds = %bb2
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8, !range !22
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i64, i64 } undef, i64 %7, 0
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1
  ret { i64, i64 } %11
}

; core::slice::memchr::memchr::{{closure}}
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17hebd2cd7f45115ae2E"(i8** align 8 dereferenceable(8) %_1, i8* mpk_immut noalias readonly align 1 dereferenceable(1) %elt) unnamed_addr #1 {
start:
  %_3 = load i8, i8* %elt, align 1
  %0 = load i8*, i8** %_1, align 8, !nonnull !11
  %_4 = load i8, i8* %0, align 1
  %1 = icmp eq i8 %_3, %_4
  ret i1 %1
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h3b03f60e5e2a06d1E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %_6 = alloca {}, align 1
  %x = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %1 = getelementptr inbounds %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %self, i32 0, i32 1
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_3 = select i1 %3, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; call alloc::collections::btree::unwrap_unchecked::{{closure}}
  call void @"_ZN5alloc11collections5btree16unwrap_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17h592f46d5c4a8014eE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0)
  br label %bb4

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %self to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %5 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %4 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*
  %6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x to i8*
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0 to i8*
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  br label %bb7

bb4:                                              ; preds = %bb1
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5

bb7:                                              ; preds = %bb4, %bb3
  %10 = load i8, i8* %_7, align 1, !range !5
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h848bf7541053ac9aE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %_6 = alloca {}, align 1
  %x = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %1 = getelementptr inbounds %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %self, i32 0, i32 1
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_3 = select i1 %3, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; call alloc::collections::btree::unwrap_unchecked::{{closure}}
  call void @"_ZN5alloc11collections5btree16unwrap_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17h8dd5e8a54dab3094E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0)
  br label %bb4

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %self to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %5 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"* %4 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  %6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %x to i8*
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0 to i8*
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  br label %bb7

bb4:                                              ; preds = %bb1
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5

bb7:                                              ; preds = %bb4, %bb3
  %10 = load i8, i8* %_7, align 1, !range !5
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core6option15Option$LT$T$GT$3map17hd4790bd875aaa10dE"(i8* mpk_immut noalias readonly align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca { i8*, i64 }, align 8
  %2 = alloca i8, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_3 = select i1 %7, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
  store i8 2, i8* %2, align 1
  br label %bb7

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0
  %x.0 = load [0 x i8]*, [0 x i8]** %9, align 8, !nonnull !11
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1
  %x.1 = load i64, i64* %10, align 8
  store i8 0, i8* %_9, align 1
  %11 = bitcast { i8*, i64 }* %_7 to { [0 x i8]*, i64 }*
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0
  store [0 x i8]* %x.0, [0 x i8]** %12, align 8
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1
  store i64 %x.1, i64* %13, align 8
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8, !nonnull !11
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %15 to [0 x i8]*
; call build_script_build::rustc_minor_nightly::{{closure}}
  %_5 = call zeroext i1 @"_ZN18build_script_build19rustc_minor_nightly28_$u7b$$u7b$closure$u7d$$u7d$17hdf0a61d4a40b81ceE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %18, i64 %17)
  br label %bb4

bb4:                                              ; preds = %bb3
  %19 = zext i1 %_5 to i8
  store i8 %19, i8* %2, align 1
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %20 = load i8, i8* %2, align 1, !range !24
  ret i8 %20

bb6:                                              ; preds = %bb7
  br label %bb5

bb7:                                              ; preds = %bb1, %bb4
  %21 = load i8, i8* %_9, align 1, !range !5
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb6, label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$3map17hde4afe9441b73eddE"(%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(24) %0, i64* mpk_immut noalias readonly align 8 dereferenceable_or_null(8) %1, i64* mpk_immut noalias readonly align 8 dereferenceable(16) %f.0, i64* mpk_immut noalias readonly align 8 dereferenceable(8) %f.1) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i64*, align 8
  %_5 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %self = alloca i64*, align 8
  store i64* %1, i64** %self, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0, i32 0, i32 1
  store {}* null, {}** %5, align 8
  br label %bb7

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast i64** %self to i64***
  %x = load i64**, i64*** %6, align 8, !nonnull !11
  store i8 0, i8* %_9, align 1
  %7 = bitcast i64** %_7 to i64***
  store i64** %x, i64*** %7, align 8
  %8 = load i64*, i64** %_7, align 8, !nonnull !11
  %9 = bitcast i64* %8 to i64**
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend::{{closure}}
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend28_$u7b$$u7b$closure$u7d$$u7d$17hbbe8ab175a69f34aE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %_5, i64* mpk_immut noalias readonly align 8 dereferenceable(16) %f.0, i64* mpk_immut noalias readonly align 8 dereferenceable(8) %f.1, i64** mpk_immut noalias readonly align 8 dereferenceable(8) %9)
  br label %bb4

bb4:                                              ; preds = %bb3
  %10 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %11 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %10 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %11 to i8*
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5

bb7:                                              ; preds = %bb1, %bb4
  %14 = load i8, i8* %_9, align 1, !range !5
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb6, label %bb5
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$4take17h8a330ea2087114e9E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::mem::take
  %0 = call { i8*, i64 } @_ZN4core3mem4take17h086bdabf0b4d15ebE({ i8*, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64*, i64 } @"_ZN4core6option15Option$LT$T$GT$4take17ha3b5f55c735034abE"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::mem::take
  %0 = call { i64*, i64 } @_ZN4core3mem4take17hca945d2c967eca45E({ i64*, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64*, i64 } %0, 0
  %2 = extractvalue { i64*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64 } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64 } %3, i64 %2, 1
  ret { i64*, i64 } %4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h8745657d193f9648E"(%"std::result::Result<&str, usize>"* noalias nocapture sret dereferenceable(24) %0, i8* mpk_immut noalias readonly align 1 %1, i64 %2, i64 %err) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_3 = select i1 %7, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %8 = bitcast %"std::result::Result<&str, usize>"* %0 to %"std::result::Result<&str, usize>::Err"*
  %9 = getelementptr inbounds %"std::result::Result<&str, usize>::Err", %"std::result::Result<&str, usize>::Err"* %8, i32 0, i32 1
  store i64 %err, i64* %9, align 8
  %10 = bitcast %"std::result::Result<&str, usize>"* %0 to i64*
  store i64 1, i64* %10, align 8
  br label %bb4

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %11 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0
  %v.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !nonnull !11
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1
  %v.1 = load i64, i64* %13, align 8
  %14 = bitcast %"std::result::Result<&str, usize>"* %0 to %"std::result::Result<&str, usize>::Ok"*
  %15 = getelementptr inbounds %"std::result::Result<&str, usize>::Ok", %"std::result::Result<&str, usize>::Ok"* %14, i32 0, i32 1
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 0
  store [0 x i8]* %v.0, [0 x i8]** %16, align 8
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 1
  store i64 %v.1, i64* %17, align 8
  %18 = bitcast %"std::result::Result<&str, usize>"* %0 to i64*
  store i64 0, i64* %18, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %19 = load i8, i8* %_7, align 1, !range !5
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb4
  ret void

bb6:                                              ; preds = %bb4
  br label %bb5
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17ha36801f04fd74d88E"(i8* mpk_immut %0) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i8** %1 to %"std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>::Err"*
  %6 = bitcast %"std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>::Err"* %5 to %"std::alloc::AllocError"*
  %7 = bitcast i8** %1 to {}**
  store {}* null, {}** %7, align 8
  br label %bb4

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !11
  store i8* %v, i8** %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %8 = load i8, i8* %_7, align 1, !range !5
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb4
  %10 = load i8*, i8** %1, align 8
  ret i8* %10

bb6:                                              ; preds = %bb4
  br label %bb5
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hce733a44781c2e51E"(i8* mpk_immut noalias readonly align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_3 = select i1 %7, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %8 = bitcast { i8*, i64 }* %2 to %"std::result::Result<&[u8], std::option::NoneError>::Err"*
  %9 = bitcast %"std::result::Result<&[u8], std::option::NoneError>::Err"* %8 to %"std::option::NoneError"*
  %10 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %10, align 8
  br label %bb4

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %11 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0
  %v.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !nonnull !11
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1
  %v.1 = load i64, i64* %13, align 8
  %14 = bitcast { i8*, i64 }* %2 to { [0 x i8]*, i64 }*
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0
  store [0 x i8]* %v.0, [0 x i8]** %15, align 8
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1
  store i64 %v.1, i64* %16, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %17 = load i8, i8* %_7, align 1, !range !5
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb4
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = insertvalue { i8*, i64 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i64 } %23, i64 %22, 1
  ret { i8*, i64 } %24

bb6:                                              ; preds = %bb4
  br label %bb5
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$5ok_or17he159fa1952a76502E"(%"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* noalias nocapture sret dereferenceable(32) %0, %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture dereferenceable(24) %self, i64 %err.0, i64* mpk_immut nonnull %err.1) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %_5 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %v = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %1 = getelementptr inbounds %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %self, i32 0, i32 1
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_3 = select i1 %3, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %4 = bitcast %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %0 to %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Err"*
  %5 = getelementptr inbounds %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Err", %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Err"* %4, i32 0, i32 1
  %6 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %5, i32 0, i32 0
  store i64 %err.0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %5, i32 0, i32 1
  store i64* %err.1, i64** %7, align 8
  %8 = bitcast %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %0 to i64*
  store i64 1, i64* %8, align 8
  br label %bb4

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %self to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %10 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %9 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*
  %11 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %v to i8*
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_5 to i8*
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  %15 = bitcast %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %0 to %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok"*
  %16 = getelementptr inbounds %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok", %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok"* %15, i32 0, i32 1
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %16 to i8*
  %18 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false)
  %19 = bitcast %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %0 to i64*
  store i64 0, i64* %19, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %20 = load i8, i8* %_7, align 1, !range !5
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb4
  ret void

bb6:                                              ; preds = %bb4
  br label %bb5
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core6option15Option$LT$T$GT$5ok_or17hfac169cdd5ee0582E"(i1 zeroext %0) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, i8* %self, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %3 = load i8, i8* %self, align 1, !range !5
  %4 = trunc i8 %3 to i1
  %_3 = zext i1 %4 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i8* %1 to %"std::result::Result<(), std::option::NoneError>::Err"*
  %6 = getelementptr inbounds %"std::result::Result<(), std::option::NoneError>::Err", %"std::result::Result<(), std::option::NoneError>::Err"* %5, i32 0, i32 1
  store i8 1, i8* %1, align 1
  br label %bb4

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast i8* %1 to %"std::result::Result<(), std::option::NoneError>::Ok"*
  %8 = getelementptr inbounds %"std::result::Result<(), std::option::NoneError>::Ok", %"std::result::Result<(), std::option::NoneError>::Ok"* %7, i32 0, i32 1
  store i8 0, i8* %1, align 1
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %9 = load i8, i8* %_7, align 1, !range !5
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb4
  %11 = load i8, i8* %1, align 1, !range !5
  %12 = trunc i8 %11 to i1
  ret i1 %12

bb6:                                              ; preds = %bb4
  br label %bb5
}

; core::option::Option<T>::as_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 dereferenceable_or_null(24) i64* @"_ZN4core6option15Option$LT$T$GT$6as_mut17h4b2b0c430fdea080E"(%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = getelementptr inbounds %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %self, i32 0, i32 1
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
  %4 = bitcast i64** %0 to {}**
  store {}* null, {}** %4, align 8
  br label %bb4

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %self to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %x = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"* %5 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  %6 = bitcast i64** %0 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"**
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %x, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %6, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %7 = load i64*, i64** %0, align 8
  ret i64* %7
}

; core::option::Option<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut align 8 dereferenceable_or_null(8) i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17hccb7912e49412336E"(i64** mpk_immut noalias readonly align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %self to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
  %4 = bitcast i64** %0 to {}**
  store {}* null, {}** %4, align 8
  br label %bb4

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i64** %0 to i64***
  store i64** %self, i64*** %5, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i64*, i64** %0, align 8
  ret i64* %6
}

; core::option::Option<T>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i8 } @"_ZN4core6option15Option$LT$T$GT$6expect17h3c6b290800111044E"(i32 %0, i8 %1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %msg.0, i64 %msg.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %2) unnamed_addr #0 {
start:
  %self = alloca { i32, i8 }, align 4
  %3 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %self, i32 0, i32 1
  store i8 %1, i8* %4, align 4
  %5 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %self, i32 0, i32 1
  %6 = load i8, i8* %5, align 4, !range !24
  %7 = sub i8 %6, 2
  %8 = icmp eq i8 %7, 0
  %_3 = select i1 %8, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
; call core::option::expect_failed
  call void @_ZN4core6option13expect_failed17h0fe2e7cc4c6d4f13E([0 x i8]* mpk_immut noalias nonnull readonly align 1 %msg.0, i64 %msg.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %2)
  unreachable

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %self, i32 0, i32 0
  %val.0 = load i32, i32* %9, align 4
  %10 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %self, i32 0, i32 1
  %11 = load i8, i8* %10, align 4, !range !5
  %val.1 = trunc i8 %11 to i1
  %12 = zext i1 %val.1 to i8
  %13 = insertvalue { i32, i8 } undef, i32 %val.0, 0
  %14 = insertvalue { i32, i8 } %13, i8 %12, 1
  ret { i32, i8 } %14
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 dereferenceable(24) %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* @"_ZN4core6option15Option$LT$T$GT$6unwrap17h79b2436157265a1bE"(i64* align 8 dereferenceable_or_null(24) %0, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %1) unnamed_addr #0 {
start:
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hc14ab8d72efd34afE([0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [43 x i8] }>* @alloc194 to [0 x i8]*), i64 43, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %1)
  unreachable

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i64** %self to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"**
  %val = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %5, align 8, !nonnull !11
  ret %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %val
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$6unwrap17h9940e3212041b0a7E"(%"std::string::String"* noalias nocapture sret dereferenceable(24) %val, %"std::option::Option<std::string::String>"* noalias nocapture dereferenceable(24) %self, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = bitcast %"std::option::Option<std::string::String>"* %self to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hc14ab8d72efd34afE([0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [43 x i8] }>* @alloc194 to [0 x i8]*), i64 43, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0)
  unreachable

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"std::option::Option<std::string::String>"* %self to %"std::option::Option<std::string::String>::Some"*, !MPK-SmartPointer !3
  %5 = bitcast %"std::option::Option<std::string::String>::Some"* %4 to %"std::string::String"*, !MPK-SmartPointer !3
  %6 = bitcast %"std::string::String"* %val to i8*
  %7 = bitcast %"std::string::String"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  ret void
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$6unwrap17he952d3f44938620aE"(%"std::process::Output"* noalias nocapture sret dereferenceable(56) %val, %"std::option::Option<std::process::Output>"* noalias nocapture dereferenceable(56) %self, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = bitcast %"std::option::Option<std::process::Output>"* %self to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hc14ab8d72efd34afE([0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [43 x i8] }>* @alloc194 to [0 x i8]*), i64 43, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0)
  unreachable

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"std::option::Option<std::process::Output>"* %self to %"std::option::Option<std::process::Output>::Some"*, !MPK-SmartPointer !3
  %5 = bitcast %"std::option::Option<std::process::Output>::Some"* %4 to %"std::process::Output"*, !MPK-SmartPointer !3
  %6 = bitcast %"std::process::Output"* %val to i8*
  %7 = bitcast %"std::process::Output"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 56, i1 false)
  ret void
}

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h3c81b3c0a2a10991E"(%"std::option::Option<std::process::Output>"* mpk_immut noalias readonly align 8 dereferenceable(56) %self) unnamed_addr #0 {
start:
; call core::option::Option<T>::is_some
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h250c61084b29cdfaE"(%"std::option::Option<std::process::Output>"* mpk_immut noalias readonly align 8 dereferenceable(56) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_2, true
  ret i1 %0
}

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h56a3e545de2dc508E"(%"std::option::Option<std::string::String>"* mpk_immut noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
; call core::option::Option<T>::is_some
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17hb9addc085fa4ac69E"(%"std::option::Option<std::string::String>"* mpk_immut noalias readonly align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_2, true
  ret i1 %0
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h250c61084b29cdfaE"(%"std::option::Option<std::process::Output>"* mpk_immut noalias readonly align 8 dereferenceable(56) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"std::option::Option<std::process::Output>"* %self to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 1
  br i1 %4, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i8, i8* %0, align 1, !range !5
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17hb9addc085fa4ac69E"(%"std::option::Option<std::string::String>"* mpk_immut noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"std::option::Option<std::string::String>"* %self to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 1
  br i1 %4, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i8, i8* %0, align 1, !range !5
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17ha56d0d38303c320dE"(i8 %0, i1 zeroext %default) unnamed_addr #0 {
start:
  %_5 = alloca i8, align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  store i8 %0, i8* %self, align 1
  store i8 0, i8* %_5, align 1
  store i8 1, i8* %_5, align 1
  %2 = load i8, i8* %self, align 1, !range !24
  %3 = sub i8 %2, 2
  %4 = icmp eq i8 %3, 0
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
  store i8 0, i8* %_5, align 1
  %5 = zext i1 %default to i8
  store i8 %5, i8* %1, align 1
  br label %bb6

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = load i8, i8* %self, align 1, !range !5
  %x = trunc i8 %6 to i1
  %7 = zext i1 %x to i8
  store i8 %7, i8* %1, align 1
  br label %bb6

bb4:                                              ; preds = %bb5, %bb6
  %8 = load i8, i8* %1, align 1, !range !5
  %9 = trunc i8 %8 to i1
  ret i1 %9

bb5:                                              ; preds = %bb6
  br label %bb4

bb6:                                              ; preds = %bb1, %bb3
  %10 = load i8, i8* %_5, align 1, !range !5
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb5, label %bb4
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h02870a3b3a2ccb95E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %2 = alloca i8, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !22
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb1:                                              ; preds = %start
  store i8 0, i8* %2, align 1
  br label %bb6

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast i8* %2 to %"std::option::Option<()>::Some"*
  %7 = getelementptr inbounds %"std::option::Option<()>::Some", %"std::option::Option<()>::Some"* %6, i32 0, i32 1
  store i8 1, i8* %2, align 1
  br label %bb6

bb4:                                              ; preds = %bb5, %bb6
  %8 = load i8, i8* %2, align 1, !range !5
  %9 = trunc i8 %8 to i1
  ret i1 %9

bb5:                                              ; preds = %bb6
  br label %bb4

bb6:                                              ; preds = %bb3, %bb1
  %10 = bitcast { i64, i64 }* %self to i64*
  %_5 = load i64, i64* %10, align 8, !range !22
  %11 = icmp eq i64 %_5, 0
  br i1 %11, label %bb4, label %bb5
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h16fb6680afe4f8e1E"(i64 %0) unnamed_addr #0 {
start:
  %1 = alloca { i32, i32 }, align 4
  %2 = alloca i64, align 8
  %self = alloca %"std::result::Result<u32, std::num::ParseIntError>", align 4
  store i64 %0, i64* %2, align 8
  %3 = bitcast %"std::result::Result<u32, std::num::ParseIntError>"* %self to i8*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  %5 = bitcast %"std::result::Result<u32, std::num::ParseIntError>"* %self to i8*
  %6 = load i8, i8* %5, align 4, !range !5
  %7 = trunc i8 %6 to i1
  %_2 = zext i1 %7 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb1:                                              ; preds = %start
  %8 = bitcast { i32, i32 }* %1 to i32*
  store i32 0, i32* %8, align 4
  br label %bb6

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast %"std::result::Result<u32, std::num::ParseIntError>"* %self to %"std::result::Result<u32, std::num::ParseIntError>::Ok"*
  %10 = getelementptr inbounds %"std::result::Result<u32, std::num::ParseIntError>::Ok", %"std::result::Result<u32, std::num::ParseIntError>::Ok"* %9, i32 0, i32 1
  %x = load i32, i32* %10, align 4
  %11 = bitcast { i32, i32 }* %1 to %"std::option::Option<u32>::Some"*
  %12 = getelementptr inbounds %"std::option::Option<u32>::Some", %"std::option::Option<u32>::Some"* %11, i32 0, i32 1
  store i32 %x, i32* %12, align 4
  %13 = bitcast { i32, i32 }* %1 to i32*
  store i32 1, i32* %13, align 4
  br label %bb6

bb4:                                              ; preds = %bb5, %bb6
  %14 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4, !range !80
  %16 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = insertvalue { i32, i32 } undef, i32 %15, 0
  %19 = insertvalue { i32, i32 } %18, i32 %17, 1
  ret { i32, i32 } %19

bb5:                                              ; preds = %bb6
  br label %bb4

bb6:                                              ; preds = %bb3, %bb1
  %20 = bitcast %"std::result::Result<u32, std::num::ParseIntError>"* %self to i8*
  %21 = load i8, i8* %20, align 4, !range !5
  %22 = trunc i8 %21 to i1
  %_5 = zext i1 %22 to i64
  %23 = icmp eq i64 %_5, 0
  br i1 %23, label %bb4, label %bb5
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h570874008eb5a21bE"(%"std::result::Result<&str, std::str::Utf8Error>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast %"std::result::Result<&str, std::str::Utf8Error>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !22
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb1:                                              ; preds = %start
  %2 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %2, align 8
  br label %bb6

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"std::result::Result<&str, std::str::Utf8Error>"* %self to %"std::result::Result<&str, std::str::Utf8Error>::Ok"*
  %4 = getelementptr inbounds %"std::result::Result<&str, std::str::Utf8Error>::Ok", %"std::result::Result<&str, std::str::Utf8Error>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  %x.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !11
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  %x.1 = load i64, i64* %6, align 8
  %7 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %7, i32 0, i32 0
  store [0 x i8]* %x.0, [0 x i8]** %8, align 8
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %7, i32 0, i32 1
  store i64 %x.1, i64* %9, align 8
  br label %bb6

bb4:                                              ; preds = %bb5, %bb6
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { i8*, i64 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i64 } %14, i64 %13, 1
  ret { i8*, i64 } %15

bb5:                                              ; preds = %bb6
  br label %bb4

bb6:                                              ; preds = %bb3, %bb1
  %16 = bitcast %"std::result::Result<&str, std::str::Utf8Error>"* %self to i64*
  %_5 = load i64, i64* %16, align 8, !range !22
  %17 = icmp eq i64 %_5, 0
  br i1 %17, label %bb4, label %bb5
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h6d7ada569656293dE"(%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(24) %0, %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_4 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %x = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %1 = bitcast %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !22
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0, i32 0, i32 1
  store {}* null, {}** %2, align 8
  br label %bb6

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %self to %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok"*
  %4 = getelementptr inbounds %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok", %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok"* %3, i32 0, i32 1
  %5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x to i8*
  %6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_4 to i8*
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %10 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %9 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*
  %11 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %10 to i8*
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  br label %bb6

bb4:                                              ; preds = %bb5, %bb6
  ret void

bb5:                                              ; preds = %bb6
  br label %bb4

bb6:                                              ; preds = %bb3, %bb1
  %13 = bitcast %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %self to i64*
  %_5 = load i64, i64* %13, align 8, !range !22
  %14 = icmp eq i64 %_5, 0
  br i1 %14, label %bb4, label %bb5
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h7e8f17daf18c0399E"(%"std::option::Option<std::process::Output>"* noalias nocapture sret dereferenceable(56) %0, %"std::result::Result<std::process::Output, std::io::Error>"* noalias nocapture dereferenceable(64) %self) unnamed_addr #0 {
start:
  %_4 = alloca %"std::process::Output", align 8
  %x = alloca %"std::process::Output", align 8
  %1 = bitcast %"std::result::Result<std::process::Output, std::io::Error>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !22
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb1:                                              ; preds = %start
  %2 = bitcast %"std::option::Option<std::process::Output>"* %0 to {}**
  store {}* null, {}** %2, align 8
  br label %bb6

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"std::result::Result<std::process::Output, std::io::Error>"* %self to %"std::result::Result<std::process::Output, std::io::Error>::Ok"*
  %4 = getelementptr inbounds %"std::result::Result<std::process::Output, std::io::Error>::Ok", %"std::result::Result<std::process::Output, std::io::Error>::Ok"* %3, i32 0, i32 1, !MPK-SmartPointer !3
  %5 = bitcast %"std::process::Output"* %x to i8*
  %6 = bitcast %"std::process::Output"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 56, i1 false)
  %7 = bitcast %"std::process::Output"* %_4 to i8*
  %8 = bitcast %"std::process::Output"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 56, i1 false)
  %9 = bitcast %"std::option::Option<std::process::Output>"* %0 to %"std::option::Option<std::process::Output>::Some"*, !MPK-SmartPointer !3
  %10 = bitcast %"std::option::Option<std::process::Output>::Some"* %9 to %"std::process::Output"*, !MPK-SmartPointer !3
  %11 = bitcast %"std::process::Output"* %10 to i8*
  %12 = bitcast %"std::process::Output"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 56, i1 false)
  br label %bb6

bb4:                                              ; preds = %bb5, %bb6
  ret void

bb5:                                              ; preds = %bb6
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h57db1d16fc703566E(%"std::result::Result<std::process::Output, std::io::Error>"* mpk_unsafe %self)
  br label %bb4

bb6:                                              ; preds = %bb3, %bb1
  %13 = bitcast %"std::result::Result<std::process::Output, std::io::Error>"* %self to i64*
  %_5 = load i64, i64* %13, align 8, !range !22
  %14 = icmp eq i64 %_5, 0
  br i1 %14, label %bb4, label %bb5
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17he3f22ca44f0bf45fE"(%"std::option::Option<std::string::String>"* noalias nocapture sret dereferenceable(24) %0, %"std::result::Result<std::string::String, std::string::FromUtf8Error>"* noalias nocapture dereferenceable(48) %self) unnamed_addr #0 {
start:
  %_4 = alloca %"std::string::String", align 8, !MPK-SmartPointer !3
  %x = alloca %"std::string::String", align 8, !MPK-SmartPointer !3
  %1 = bitcast %"std::result::Result<std::string::String, std::string::FromUtf8Error>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !22
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb1:                                              ; preds = %start
  %2 = bitcast %"std::option::Option<std::string::String>"* %0 to {}**
  store {}* null, {}** %2, align 8
  br label %bb6

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"std::result::Result<std::string::String, std::string::FromUtf8Error>"* %self to %"std::result::Result<std::string::String, std::string::FromUtf8Error>::Ok"*
  %4 = getelementptr inbounds %"std::result::Result<std::string::String, std::string::FromUtf8Error>::Ok", %"std::result::Result<std::string::String, std::string::FromUtf8Error>::Ok"* %3, i32 0, i32 1, !MPK-SmartPointer !3
  %5 = bitcast %"std::string::String"* %x to i8*
  %6 = bitcast %"std::string::String"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = bitcast %"std::string::String"* %_4 to i8*
  %8 = bitcast %"std::string::String"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = bitcast %"std::option::Option<std::string::String>"* %0 to %"std::option::Option<std::string::String>::Some"*, !MPK-SmartPointer !3
  %10 = bitcast %"std::option::Option<std::string::String>::Some"* %9 to %"std::string::String"*, !MPK-SmartPointer !3
  %11 = bitcast %"std::string::String"* %10 to i8*
  %12 = bitcast %"std::string::String"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  br label %bb6

bb4:                                              ; preds = %bb5, %bb6
  ret void

bb5:                                              ; preds = %bb6
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h7d1ede6c737d7b35E(%"std::result::Result<std::string::String, std::string::FromUtf8Error>"* mpk_unsafe %self)
  br label %bb4

bb6:                                              ; preds = %bb3, %bb1
  %13 = bitcast %"std::result::Result<std::string::String, std::string::FromUtf8Error>"* %self to i64*
  %_5 = load i64, i64* %13, align 8, !range !22
  %14 = icmp eq i64 %_5, 0
  br i1 %14, label %bb4, label %bb5
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hc28740ea5cb02f24E"(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_immut noalias readonly align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"std::result::Result<std::string::String, std::env::VarError>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !22
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, i8* %0, align 1, !range !5
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; core::convert::num::<impl core::convert::From<u16> for usize>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core7convert3num66_$LT$impl$u20$core..convert..From$LT$u16$GT$$u20$for$u20$usize$GT$4from17h6f1e79bd0b9fc220E"(i16 %small) unnamed_addr #0 {
start:
  %0 = zext i16 %small to i64
  ret i64 %0
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h0ac440e7d91996d3E"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h688208fb66f98234E"(i64 %t) unnamed_addr #1 {
start:
  ret i64 %t
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb63f453704836e08E"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define internal mpk_immut nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3bf0f375e1555b4fE"(i8* mpk_immut nonnull %self) unnamed_addr #1 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call mpk_immut nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h27883e369023a667E"(i8* mpk_immut nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; <char as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h36c2ebf4f2054de9E"(%"std::str::pattern::CharSearcher"* noalias nocapture sret dereferenceable(48) %0, i32 %self, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %_16 = alloca [4 x i8], align 1
  %utf8_encoded = alloca [4 x i8], align 1
  %1 = getelementptr inbounds [4 x i8], [4 x i8]* %utf8_encoded, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 4, i1 false)
  %_8.0 = bitcast [4 x i8]* %utf8_encoded to [0 x i8]*
; call core::char::methods::<impl char>::encode_utf8
  %2 = call { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817hae57437d21b9e930E"(i32 %self, [0 x i8]* nonnull align 1 %_8.0, i64 4)
  %_6.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::<impl str>::len
  %utf8_size = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc05e4790373b1284E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_6.0, i64 %_6.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::str::<impl str>::len
  %_12 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc05e4790373b1284E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %haystack.0, i64 %haystack.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast [4 x i8]* %_16 to i8*
  %4 = bitcast [4 x i8]* %utf8_encoded to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 4, i1 false)
  %5 = bitcast %"std::str::pattern::CharSearcher"* %0 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  store i64 %haystack.1, i64* %7, align 8
  %8 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %0, i32 0, i32 3
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %0, i32 0, i32 5
  store i64 %_12, i64* %9, align 8
  %10 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %0, i32 0, i32 9
  store i32 %self, i32* %10, align 8
  %11 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %0, i32 0, i32 7
  store i64 %utf8_size, i64* %11, align 8
  %12 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %0, i32 0, i32 11
  %13 = bitcast [4 x i8]* %12 to i8*
  %14 = bitcast [4 x i8]* %_16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 1 %14, i64 4, i1 false)
  ret void
}

; <() as std::process::Termination>::report
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17h2d838450e2c37799E"() unnamed_addr #0 {
start:
; call <std::process::ExitCode as std::process::Termination>::report
  %0 = call i32 @"_ZN68_$LT$std..process..ExitCode$u20$as$u20$std..process..Termination$GT$6report17ha67fbb373fb53fb2E"(i8 0)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: nonlazybind uwtable
define internal { %"std::ffi::OsStr"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h48e9281acdda823eE"({ [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_2.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !11
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_2.1 = load i64, i64* %1, align 8
; call std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
  %2 = call { %"std::ffi::OsStr"*, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h2e998311c0d316fbE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_2.0, i64 %_2.1)
  %3 = extractvalue { %"std::ffi::OsStr"*, i64 } %2, 0
  %4 = extractvalue { %"std::ffi::OsStr"*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { %"std::ffi::OsStr"*, i64 } undef, %"std::ffi::OsStr"* %3, 0
  %6 = insertvalue { %"std::ffi::OsStr"*, i64 } %5, i64 %4, 1
  ret { %"std::ffi::OsStr"*, i64 } %6
}

; <&str as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h6954df47436e1f35E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8, !MPK-Unsafe !4
  %1 = alloca { [0 x i8]*, i64 }, align 8, !MPK-Unsafe !4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %2, align 8, !noalias !81, !MPK-Unsafe !4
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %haystack.1, i64* %3, align 8, !noalias !81, !MPK-Unsafe !4
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !noalias !81, !nonnull !11, !MPK-Unsafe !4
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %7 = load i64, i64* %6, align 8, !noalias !81, !MPK-Unsafe !4
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %10, align 8, !noalias !84, !MPK-Unsafe !4
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %11, align 8, !noalias !84, !MPK-Unsafe !4
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %13 = load [0 x i8]*, [0 x i8]** %12, align 8, !noalias !84, !nonnull !11, !MPK-Unsafe !4
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !84, !MPK-Unsafe !4
  %16 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %17 = insertvalue { [0 x i8]*, i64 } %16, i64 %15, 1
  %_7.0 = extractvalue { [0 x i8]*, i64 } %17, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %17, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::slice::<impl [T]>::starts_with
  %18 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17h38c4165e632ae3b5E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_4.0, i64 %_4.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %_7.0, i64 %_7.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %18
}

; alloc::collections::btree::unwrap_unchecked::{{closure}}
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree16unwrap_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17h592f46d5c4a8014eE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0) unnamed_addr #1 {
start:
  unreachable
}

; alloc::collections::btree::unwrap_unchecked::{{closure}}
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree16unwrap_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17h8dd5e8a54dab3094E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0) unnamed_addr #1 {
start:
  unreachable
}

; alloc::collections::btree::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc11collections5btree3mem7replace17h908b5cdd8d389fdeE({ [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* noalias nocapture sret dereferenceable(48) %ret, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 dereferenceable(24) %v) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_17 = alloca i8, align 1
  %_16 = alloca i8, align 1
  %_13 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_10 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_9 = alloca { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }, align 8
  %_7 = alloca { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, [0 x i64] }, align 8
  %new_value = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %value = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %guard = alloca %"alloc::collections::btree::mem::replace::PanicGuard", align 1
  store i8 0, i8* %_18, align 1
  store i8 0, i8* %_16, align 1
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_18, align 1
  store i8 1, i8* %_17, align 1
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17h94959b8d03135954E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %value, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* mpk_immut mpk_unsafe %v)
          to label %bb1 unwind label %cleanup, !MPK-Unsafe !4

bb1:                                              ; preds = %start
  store i8 0, i8* %_18, align 1
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_10 to i8*
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }* %_9 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  %4 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %3 to i8*
  %5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  %6 = bitcast { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }* %_9 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
; invoke alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::next_unchecked::{{closure}}
  invoke void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$14next_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17hf1714f3470a92b41E"({ [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, [0 x i64] }* noalias nocapture sret dereferenceable(72) %_7, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_16, align 1
  %7 = bitcast { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, [0 x i64] }* %_7 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %new_value to i8*
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  %10 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, [0 x i64] }* %_7, i32 0, i32 3
  %11 = bitcast { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* %ret to i8*
  %12 = bitcast { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 48, i1 false)
  store i8 0, i8* %_16, align 1, !MPK-Unsafe !4
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_13 to i8*
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %new_value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !MPK-Unsafe !4
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hbbdd254f8f8e8747E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* mpk_unsafe %v, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_13)
          to label %bb3 unwind label %cleanup1, !MPK-Unsafe !4

bb3:                                              ; preds = %bb2
  store i8 0, i8* %_17, align 1
; invoke core::mem::forget
  invoke void @_ZN4core3mem6forget17h31500c94f1a86283E()
          to label %bb4 unwind label %cleanup1

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_16, align 1
  store i8 0, i8* %_17, align 1
  ret void

bb5:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h5431fb575a1b2b7eE({ [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* mpk_unsafe %ret) #14
  br label %bb9

bb6:                                              ; preds = %bb10, %bb11
  %15 = load i8, i8* %_18, align 1, !range !5
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb12, label %bb7

bb7:                                              ; preds = %bb12, %bb6
  %17 = bitcast { i8*, i32 }* %0 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22

bb8:                                              ; preds = %bb9
  br label %bb11

bb9:                                              ; preds = %bb5
  %23 = load i8, i8* %_16, align 1, !range !5
  %24 = trunc i8 %23 to i1
  br i1 %24, label %bb8, label %bb11

bb10:                                             ; preds = %bb11
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h69c80585bdf43786E(%"alloc::collections::btree::mem::replace::PanicGuard"* mpk_unsafe %guard) #14
  br label %bb6

bb11:                                             ; preds = %bb8, %bb9, %cleanup
  %25 = load i8, i8* %_17, align 1, !range !5
  %26 = trunc i8 %25 to i1
  br i1 %26, label %bb10, label %bb6

bb12:                                             ; preds = %bb6
  br label %bb7

cleanup:                                          ; preds = %bb1, %start
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb11

cleanup1:                                         ; preds = %bb3, %bb2
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  %34 = extractvalue { i8*, i32 } %32, 1
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %34, i32* %36, align 8
  br label %bb5
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,HandleType>::reborrow
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node104Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$HandleType$GT$8reborrow17hcccca558f4c26216E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(24) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* mpk_immut noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self to { i64, i64* }*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::reborrow
  %1 = call { i64, i64* } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$8reborrow17h9063f9f74dadd659E"({ i64, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %_3)
  %_2.0 = extractvalue { i64, i64* } %1, 0
  %_2.1 = extractvalue { i64, i64* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_4 = load i64, i64* %2, align 8
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %0 to { i64, i64* }*
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 0
  store i64 %_2.0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 1
  store i64* %_2.1, i64** %5, align 8
  %6 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %0, i32 0, i32 5
  store i64 %_4, i64* %6, align 8
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %0 to %"std::marker::PhantomData<alloc::collections::btree::node::marker::KV>"*
  ret void
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::deallocate_and_ascend
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node127NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$21deallocate_and_ascend17h4079bfe7baf266d6E"(%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(24) %ret, i64 %self.0, i64* mpk_immut mpk_unsafe nonnull %self.1) unnamed_addr #1 {
start:
  %_10 = alloca { i64, i64 }, align 8
  %_4 = alloca %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h2398d0a9e1047db6E"(%"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* noalias nocapture sret dereferenceable(32) %_4, i64 %self.0, i64* mpk_immut nonnull %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::ok
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h6d7ada569656293dE"(%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(24) %ret, %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* noalias nocapture dereferenceable(32) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::cast
  %_8 = call mpk_immut nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h2621d1fde24871a8E"(i64* mpk_immut nonnull %self.1), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  %_11 = icmp ugt i64 %self.0, 0
  br i1 %_11, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
; call core::alloc::layout::Layout::new
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h741bdbba5f2ed990E(), !MPK-Unsafe !4
  store { i64, i64 } %0, { i64, i64 }* %_10, align 8, !MPK-Unsafe !4
  br label %bb6

bb5:                                              ; preds = %bb3
; call core::alloc::layout::Layout::new
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h219f40e6c8eda679E(), !MPK-Unsafe !4
  store { i64, i64 } %1, { i64, i64 }* %_10, align 8, !MPK-Unsafe !4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0
  %3 = load i64, i64* %2, align 8, !MPK-Unsafe !4
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  %5 = load i64, i64* %4, align 8, !range !20, !MPK-Unsafe !4
; call <alloc::alloc::Global as core::alloc::AllocRef>::dealloc
  call void @"_ZN62_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..AllocRef$GT$7dealloc17h0460996a95da6fedE"(%"std::alloc::Global"* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [0 x i8] }>* @alloc91 to %"std::alloc::Global"*), i8* mpk_immut mpk_unsafe nonnull %_8, i64 %3, i64 %5), !MPK-Unsafe !4
  br label %bb7

bb7:                                              ; preds = %bb6
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17h9af976cd8fbf1898E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self to { i64, i64* }*
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0
  %_2.0 = load i64, i64* %2, align 8, !MPK-Unsafe !4
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1
  %_2.1 = load i64*, i64** %3, align 8, !nonnull !11, !MPK-Unsafe !4
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_4 = load i64, i64* %4, align 8, !MPK-Unsafe !4
  %_3 = add i64 %_4, 1
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17hc9f6839d8cec3330E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %_2.0, i64* mpk_immut mpk_unsafe nonnull %_2.1, i64 %_3), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17he48e519fa756c7edE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self to { i64, i64* }*
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0
  %_2.0 = load i64, i64* %2, align 8, !MPK-Unsafe !4
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1
  %_2.1 = load i64*, i64** %3, align 8, !nonnull !11, !MPK-Unsafe !4
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_4 = load i64, i64* %4, align 8, !MPK-Unsafe !4
  %_3 = add i64 %_4, 1
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h72e9a33c583d0124E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %_2.0, i64* mpk_immut mpk_unsafe nonnull %_2.1, i64 %_3), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17hb364f31b80b66218E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(24) %0, i64 %node.0, i64* mpk_immut mpk_unsafe nonnull %node.1, i64 %idx) unnamed_addr #1 {
start:
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %0 to { i64, i64* }*
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0
  store i64 %node.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1
  store i64* %node.1, i64** %3, align 8
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %0, i32 0, i32 5
  store i64 %idx, i64* %4, align 8
  %5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %0 to %"std::marker::PhantomData<alloc::collections::btree::node::marker::KV>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h72e9a33c583d0124E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %node.0, i64* mpk_immut mpk_unsafe nonnull %node.1, i64 %idx) unnamed_addr #1 {
start:
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0 to { i64, i64* }*
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0
  store i64 %node.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1
  store i64* %node.1, i64** %3, align 8
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 5
  store i64 %idx, i64* %4, align 8
  %5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0 to %"std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h7bc1fc27f1419fd7E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %node.0, i64* mpk_immut mpk_unsafe nonnull %node.1, i64 %idx) unnamed_addr #1 {
start:
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %0 to { i64, i64* }*
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0
  store i64 %node.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1
  store i64* %node.1, i64** %3, align 8
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 5
  store i64 %idx, i64* %4, align 8
  %5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %0 to %"std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17hc9f6839d8cec3330E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %node.0, i64* mpk_immut mpk_unsafe nonnull %node.1, i64 %idx) unnamed_addr #1 {
start:
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0 to { i64, i64* }*
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0
  store i64 %node.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1
  store i64* %node.1, i64** %3, align 8
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 5
  store i64 %idx, i64* %4, align 8
  %5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0 to %"std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::right_kv
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8right_kv17hb112b601ef85e7d5E"(%"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(32) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_9 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_6 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %1 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_3 = load i64, i64* %1, align 8
  %_5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %_4 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h93b4b0be721ec528E"({ i64, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = icmp ult i64 %_3, %_4
  br i1 %_2, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_9 to i8*
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = bitcast %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err"*
  %5 = getelementptr inbounds %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err", %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err"* %4, i32 0, i32 1
  %6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %5 to i8*
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  %8 = bitcast %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %0 to i64*
  store i64 1, i64* %8, align 8
  br label %bb5

bb3:                                              ; preds = %bb1
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*
  %10 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %9, i32 0, i32 0
  %_7.0 = load i64, i64* %10, align 8, !MPK-Unsafe !4
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %9, i32 0, i32 1
  %_7.1 = load i64*, i64** %11, align 8, !nonnull !11, !MPK-Unsafe !4
  %12 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_8 = load i64, i64* %12, align 8, !MPK-Unsafe !4
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
  call void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17hb364f31b80b66218E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(24) %_6, i64 %_7.0, i64* mpk_immut mpk_unsafe nonnull %_7.1, i64 %_8), !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
  %13 = bitcast %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok"*
  %14 = getelementptr inbounds %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok", %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok"* %13, i32 0, i32 1
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %14 to i8*
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  %17 = bitcast %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %0 to i64*
  store i64 0, i64* %17, align 8
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,HandleType>::force
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node151Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$HandleType$GT$5force17hbb85e80bc2e4ff85E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* noalias nocapture sret dereferenceable(32) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_10 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %_6 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %_2 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>", align 8
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self to { i64, i64* }*
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0
  %_3.0 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1
  %_3.1 = load i64*, i64** %3, align 8, !nonnull !11
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::force
  call void @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17h4827620ac60e2628E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture sret dereferenceable(24) %_2, i64 %_3.0, i64* mpk_immut nonnull %_3.1)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_2 to i64*
  %_4 = load i64, i64* %4, align 8, !range !22
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb2:                                              ; preds = %bb1
  %5 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"*
  %6 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"* %5, i32 0, i32 1
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %6, i32 0, i32 0
  %node.0 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %6, i32 0, i32 1
  %node.1 = load i64*, i64** %8, align 8, !nonnull !11
  %9 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_12 = load i64, i64* %9, align 8
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_10 to { i64, i64* }*
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %10, i32 0, i32 0
  store i64 %node.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %10, i32 0, i32 1
  store i64* %node.1, i64** %12, align 8
  %13 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_10, i32 0, i32 5
  store i64 %_12, i64* %13, align 8
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_10 to %"std::marker::PhantomData<alloc::collections::btree::node::marker::KV>"*
  %15 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal"*
  %16 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal"* %15, i32 0, i32 1
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %16 to i8*
  %18 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false)
  %19 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %0 to i64*
  store i64 1, i64* %19, align 8
  br label %bb5

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %20 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"*
  %21 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"* %20, i32 0, i32 1
  %22 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %21, i32 0, i32 0
  %node.01 = load i64, i64* %22, align 8
  %23 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %21, i32 0, i32 1
  %node.12 = load i64*, i64** %23, align 8, !nonnull !11
  %24 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_8 = load i64, i64* %24, align 8
  %25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6 to { i64, i64* }*
  %26 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %25, i32 0, i32 0
  store i64 %node.01, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %25, i32 0, i32 1
  store i64* %node.12, i64** %27, align 8
  %28 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6, i32 0, i32 5
  store i64 %_8, i64* %28, align 8
  %29 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6 to %"std::marker::PhantomData<alloc::collections::btree::node::marker::KV>"*
  %30 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf"*
  %31 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf"* %30, i32 0, i32 1
  %32 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %31 to i8*
  %33 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false)
  %34 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %0 to i64*
  store i64 0, i64* %34, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,HandleType>::force
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node151Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$HandleType$GT$5force17hbf80aeb002c5a1bfE"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(32) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_10 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_6 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_2 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>", align 8
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0
  %_3.0 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1
  %_3.1 = load i64*, i64** %3, align 8, !nonnull !11
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::force
  call void @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17h4827620ac60e2628E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture sret dereferenceable(24) %_2, i64 %_3.0, i64* mpk_immut nonnull %_3.1)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_2 to i64*
  %_4 = load i64, i64* %4, align 8, !range !22
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb2:                                              ; preds = %bb1
  %5 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"*
  %6 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"* %5, i32 0, i32 1
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %6, i32 0, i32 0
  %node.0 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %6, i32 0, i32 1
  %node.1 = load i64*, i64** %8, align 8, !nonnull !11
  %9 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_12 = load i64, i64* %9, align 8
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_10 to { i64, i64* }*
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %10, i32 0, i32 0
  store i64 %node.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %10, i32 0, i32 1
  store i64* %node.1, i64** %12, align 8
  %13 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_10, i32 0, i32 5
  store i64 %_12, i64* %13, align 8
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_10 to %"std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  %15 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal"*
  %16 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal"* %15, i32 0, i32 1
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %16 to i8*
  %18 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false)
  %19 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to i64*
  store i64 1, i64* %19, align 8
  br label %bb5

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %20 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"*
  %21 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"* %20, i32 0, i32 1
  %22 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %21, i32 0, i32 0
  %node.01 = load i64, i64* %22, align 8
  %23 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %21, i32 0, i32 1
  %node.12 = load i64*, i64** %23, align 8, !nonnull !11
  %24 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_8 = load i64, i64* %24, align 8
  %25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_6 to { i64, i64* }*
  %26 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %25, i32 0, i32 0
  store i64 %node.01, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %25, i32 0, i32 1
  store i64* %node.12, i64** %27, align 8
  %28 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_6, i32 0, i32 5
  store i64 %_8, i64* %28, align 8
  %29 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_6 to %"std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  %30 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf"*
  %31 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf"* %30, i32 0, i32 1
  %32 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %31 to i8*
  %33 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false)
  %34 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to i64*
  store i64 0, i64* %34, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::into_kv
; Function Attrs: nonlazybind uwtable
define internal { i64*, i64* } @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$7into_kv17h469a70f566ead440E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i64* }, align 8, !MPK-SmartPointer !3
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self to { i64, i64* }*
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0
  %_4.0 = load i64, i64* %2, align 8, !MPK-Unsafe !4
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1
  %_4.1 = load i64*, i64** %3, align 8, !nonnull !11, !MPK-Unsafe !4
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_5 = load i64, i64* %4, align 8, !MPK-Unsafe !4
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::key_at
  %_3 = call mpk_immut align 8 dereferenceable(24) %"std::ffi::OsString"* @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$6key_at17hdf1cfaa6e215c78fE"(i64 %_4.0, i64* mpk_immut mpk_unsafe nonnull %_4.1, i64 %_5), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self to { i64, i64* }*
  %6 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %5, i32 0, i32 0
  %_8.0 = load i64, i64* %6, align 8, !MPK-Unsafe !4
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %5, i32 0, i32 1
  %_8.1 = load i64*, i64** %7, align 8, !nonnull !11, !MPK-Unsafe !4
  %8 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_9 = load i64, i64* %8, align 8, !MPK-Unsafe !4
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::val_at
  %_7 = call mpk_immut align 8 dereferenceable(24) %"std::option::Option<std::ffi::OsString>"* @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$6val_at17h960995004ce2ad99E"(i64 %_8.0, i64* mpk_immut mpk_unsafe nonnull %_8.1, i64 %_9), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = bitcast { i64*, i64* }* %0 to %"std::ffi::OsString"**, !MPK-SmartPointer !3
  store %"std::ffi::OsString"* %_3, %"std::ffi::OsString"** %9, align 8
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1
  %11 = bitcast i64** %10 to %"std::option::Option<std::ffi::OsString>"**
  store %"std::option::Option<std::ffi::OsString>"* %_7, %"std::option::Option<std::ffi::OsString>"** %11, align 8
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !11
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8, !nonnull !11
  %16 = insertvalue { i64*, i64* } undef, i64* %13, 0
  %17 = insertvalue { i64*, i64* } %16, i64* %15, 1
  ret { i64*, i64* } %17
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::forget_node_type
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node176Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17h58440439de61cd41E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0
  %_3.0 = load i64, i64* %2, align 8, !MPK-Unsafe !4
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1
  %_3.1 = load i64*, i64** %3, align 8, !nonnull !11, !MPK-Unsafe !4
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>::forget_type
  %4 = call { i64, i64* } @"_ZN5alloc11collections5btree4node81NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$11forget_type17hfcc8340e47be90c1E"(i64 %_3.0, i64* mpk_immut nonnull %_3.1), !MPK-Unsafe !4
  %_2.0 = extractvalue { i64, i64* } %4, 0
  %_2.1 = extractvalue { i64, i64* } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_4 = load i64, i64* %5, align 8, !MPK-Unsafe !4
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h7bc1fc27f1419fd7E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %_2.0, i64* mpk_immut mpk_unsafe nonnull %_2.1, i64 %_4), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::collections::btree::node::Root<K,V>::into_ref
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$8into_ref17h6460d3310c92462bE"(i64* mpk_immut nonnull %0, i64 %1) unnamed_addr #1 {
start:
  %2 = alloca { i64, i64* }, align 8
  %self = alloca { i64*, i64 }, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 0
  store i64* %0, i64** %3, align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_2 = load i64, i64* %5, align 8
  %_4 = bitcast { i64*, i64 }* %self to i64**
; call alloc::collections::btree::node::BoxedNode<K,V>::as_ptr
  %_3 = call mpk_immut nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$6as_ptr17hd40f321a757d9bc6E"(i64** mpk_immut noalias readonly align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64* }* %2 to i64*
  store i64 %_2, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %2, i32 0, i32 1
  store i64* %_3, i64** %7, align 8
  %8 = bitcast { i64, i64* }* %2 to %"std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>"*
  %9 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %2, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8, !nonnull !11
  %13 = insertvalue { i64, i64* } undef, i64 %10, 0
  %14 = insertvalue { i64, i64* } %13, i64* %12, 1
  ret { i64, i64* } %14
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::forget_node_type
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17hf157539bcd32bb72E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0
  %_3.0 = load i64, i64* %2, align 8, !MPK-Unsafe !4
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1
  %_3.1 = load i64*, i64** %3, align 8, !nonnull !11, !MPK-Unsafe !4
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::forget_type
  %4 = call { i64, i64* } @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$11forget_type17h144b8b4505e325a2E"(i64 %_3.0, i64* mpk_immut nonnull %_3.1), !MPK-Unsafe !4
  %_2.0 = extractvalue { i64, i64* } %4, 0
  %_2.1 = extractvalue { i64, i64* } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_4 = load i64, i64* %5, align 8, !MPK-Unsafe !4
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h7bc1fc27f1419fd7E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %_2.0, i64* mpk_immut mpk_unsafe nonnull %_2.1, i64 %_4), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h15677c2d4669f4e8E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_4 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::as_internal_ptr
  %parent_ptr = call %"alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$15as_internal_ptr17hcdb244365190c126E"({ i64, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %_9 = getelementptr inbounds %"alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", %"alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %parent_ptr, i32 0, i32 3
  %_8.0 = bitcast [12 x i8*]* %_9 to [0 x i8*]*
  %0 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_10 = load i64, i64* %0, align 8, !MPK-Unsafe !4
; call core::slice::<impl [T]>::get_unchecked
  %_7 = call mpk_immut align 8 dereferenceable(8) i8** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h34fcfb30e086a94cE"([0 x i8*]* mpk_immut noalias nonnull readonly align 8 %_8.0, i64 12, i64 %_10), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast i8** %_7 to i64**
; call core::ptr::const_ptr::<impl *const T>::read
  %2 = call mpk_immut mpk_unsafe nonnull i64* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4read17h2cde6e710cd8683bE"(i64** mpk_immut mpk_unsafe %1), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*
  %4 = bitcast { i64, i64* }* %3 to i64*
  %_13 = load i64, i64* %4, align 8
  %_12 = sub i64 %_13, 1
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::from_boxed_node
  %5 = call { i64, i64* } @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$15from_boxed_node17hd6109c2ce64603b4E"(i64* mpk_immut nonnull %2, i64 %_12)
  %6 = extractvalue { i64, i64* } %5, 0
  %7 = extractvalue { i64, i64* } %5, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %8 = insertvalue { i64, i64* } undef, i64 %6, 0
  %9 = insertvalue { i64, i64* } %8, i64* %7, 1
  ret { i64, i64* } %9
}

; alloc::collections::btree::node::BoxedNode<K,V>::as_ptr
; Function Attrs: nonlazybind uwtable
define internal mpk_immut nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$6as_ptr17hd40f321a757d9bc6E"(i64** mpk_immut noalias readonly align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_2 = load i64*, i64** %self, align 8, !nonnull !11
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call mpk_immut nonnull i64* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17he6db5958d3c3a6c4E"(i64* mpk_immut nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; alloc::collections::btree::node::Handle<Node,Type>::into_node
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h2f076b47bed1596fE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0
  %2 = load i64, i64* %1, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  %4 = load i64*, i64** %3, align 8, !nonnull !11
  %5 = insertvalue { i64, i64* } undef, i64 %2, 0
  %6 = insertvalue { i64, i64* } %5, i64* %4, 1
  ret { i64, i64* } %6
}

; alloc::collections::btree::node::Handle<Node,Type>::into_node
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h945a2eb27528aa2fE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0
  %2 = load i64, i64* %1, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  %4 = load i64*, i64** %3, align 8, !nonnull !11
  %5 = insertvalue { i64, i64* } undef, i64 %2, 0
  %6 = insertvalue { i64, i64* } %5, i64* %4, 1
  ret { i64, i64* } %6
}

; alloc::collections::btree::node::Handle<Node,Type>::into_node
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17hbae0866c3ee7c49fE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0
  %2 = load i64, i64* %1, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  %4 = load i64*, i64** %3, align 8, !nonnull !11
  %5 = insertvalue { i64, i64* } undef, i64 %2, 0
  %6 = insertvalue { i64, i64* } %5, i64* %4, 1
  ret { i64, i64* } %6
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h001b7a349ad18351E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %self.0, i64* mpk_immut nonnull %self.1) unnamed_addr #1 {
start:
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17hc9f6839d8cec3330E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %self.0, i64* mpk_immut mpk_unsafe nonnull %self.1, i64 0), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h31243aac8201c1aeE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %self.0, i64* mpk_immut nonnull %self.1) unnamed_addr #1 {
start:
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h72e9a33c583d0124E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %self.0, i64* mpk_immut mpk_unsafe nonnull %self.1, i64 0), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17hb2de06cf0acf09abE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %self.0, i64* mpk_immut nonnull %self.1) unnamed_addr #1 {
start:
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h7bc1fc27f1419fd7E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %self.0, i64* mpk_immut mpk_unsafe nonnull %self.1, i64 0), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf_ptr
; Function Attrs: nonlazybind uwtable
define internal %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$11as_leaf_ptr17hc1e11a7a2b8694ffE"({ i64, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %this) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %this, i32 0, i32 1
  %_2 = load i64*, i64** %0, align 8, !nonnull !11
; call core::ptr::non_null::NonNull<T>::as_ptr
  %1 = call %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha59f1a05e137e441E"(i64* mpk_immut nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %1
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf_ptr
; Function Attrs: nonlazybind uwtable
define internal %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$11as_leaf_ptr17he34be2487a5f5addE"({ i64, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %this) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %this, i32 0, i32 1
  %_2 = load i64*, i64** %0, align 8, !nonnull !11
; call core::ptr::non_null::NonNull<T>::as_ptr
  %1 = call %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha59f1a05e137e441E"(i64* mpk_immut nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %1
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
; Function Attrs: nonlazybind uwtable
define internal i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h93b4b0be721ec528E"({ i64, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf_ptr
  %_3 = call %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$11as_leaf_ptr17he34be2487a5f5addE"({ i64, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %_3, i32 0, i32 9
  %_2 = load i16, i16* %0, align 2, !MPK-Unsafe !4
; call core::convert::num::<impl core::convert::From<u16> for usize>::from
  %1 = call i64 @"_ZN4core7convert3num66_$LT$impl$u20$core..convert..From$LT$u16$GT$$u20$for$u20$usize$GT$4from17h6f1e79bd0b9fc220E"(i16 %_2), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %1
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h2398d0a9e1047db6E"(%"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* noalias nocapture sret dereferenceable(32) %0, i64 %1, i64* mpk_immut nonnull %2) unnamed_addr #1 {
start:
  %_10 = alloca { i64*, i64* }, align 8
  %_9 = alloca i64*, align 8
  %_6 = alloca %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %leaf_ptr = alloca %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*, align 8
  %self = alloca { i64, i64* }, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1
  store i64* %2, i64** %4, align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf_ptr
  %_3 = call %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$11as_leaf_ptr17he34be2487a5f5addE"({ i64, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  store %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %_3, %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"** %leaf_ptr, align 8
  %5 = load %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*, %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"** %leaf_ptr, align 8, !MPK-Unsafe !4
  %6 = bitcast %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %5 to i64**
  %7 = load i64*, i64** %6, align 8, !MPK-Unsafe !4
  store i64* %7, i64** %_9, align 8, !MPK-Unsafe !4
; call core::option::Option<T>::as_ref
  %_7 = call mpk_immut align 8 dereferenceable_or_null(8) i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17hccb7912e49412336E"(i64** mpk_immut noalias readonly align 8 dereferenceable(8) %_9)
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast { i64*, i64* }* %_10 to { i64, i64* }**
  store { i64, i64* }* %self, { i64, i64* }** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_10, i32 0, i32 1
  %10 = bitcast i64** %9 to %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"***
  store %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"** %leaf_ptr, %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*** %10, align 8
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_10, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8, !nonnull !11
  %13 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_10, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8, !nonnull !11
; call core::option::Option<T>::map
  call void @"_ZN4core6option15Option$LT$T$GT$3map17hde4afe9441b73eddE"(%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(24) %_6, i64* mpk_immut noalias readonly align 8 dereferenceable_or_null(8) %_7, i64* mpk_immut noalias readonly align 8 dereferenceable(16) %12, i64* mpk_immut noalias readonly align 8 dereferenceable(8) %14)
  br label %bb3

bb3:                                              ; preds = %bb2
  %15 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0
  %_13.0 = load i64, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1
  %_13.1 = load i64*, i64** %16, align 8, !nonnull !11
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17he159fa1952a76502E"(%"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* noalias nocapture sret dereferenceable(32) %0, %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture dereferenceable(24) %_6, i64 %_13.0, i64* mpk_immut nonnull %_13.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend::{{closure}}
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend28_$u7b$$u7b$closure$u7d$$u7d$17hbbe8ab175a69f34aE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64* mpk_immut noalias readonly align 8 dereferenceable(16) %_1.0, i64* mpk_immut noalias readonly align 8 dereferenceable(8) %_1.1, i64** mpk_immut noalias readonly align 8 dereferenceable(8) %parent) unnamed_addr #1 {
start:
  %_4 = load i64*, i64** %parent, align 8, !nonnull !11
  %1 = bitcast i64* %_1.0 to { i64, i64* }*
  %2 = bitcast i64* %_1.0 to { i64, i64* }*
  %3 = bitcast { i64, i64* }* %2 to i64*
  %_6 = load i64, i64* %3, align 8
  %_5 = add i64 %_6, 1
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::from_internal
  %4 = call { i64, i64* } @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$13from_internal17h37a88fd917a3254bE"(i64* mpk_immut nonnull %_4, i64 %_5)
  %_3.0 = extractvalue { i64, i64* } %4, 0
  %_3.1 = extractvalue { i64, i64* } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast i64* %_1.1 to %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"**
  %6 = bitcast i64* %_1.1 to %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"**
  %7 = bitcast i64* %_1.1 to %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"**
  %8 = load %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*, %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"** %7, align 8, !MPK-Unsafe !4
  %9 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %8, i32 0, i32 7
  %_9 = load i16, i16* %9, align 8, !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::convert::num::<impl core::convert::From<u16> for usize>::from
  %_7 = call i64 @"_ZN4core7convert3num66_$LT$impl$u20$core..convert..From$LT$u16$GT$$u20$for$u20$usize$GT$4from17h6f1e79bd0b9fc220E"(i16 %_9), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0 to { i64, i64* }*
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %10, i32 0, i32 0
  store i64 %_3.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %10, i32 0, i32 1
  store i64* %_3.1, i64** %12, align 8
  %13 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 5
  store i64 %_7, i64* %13, align 8
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0 to %"std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::reborrow
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$8reborrow17h9063f9f74dadd659E"({ i64, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64* }, align 8
  %1 = bitcast { i64, i64* }* %self to i64*
  %_2 = load i64, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1
  %_3 = load i64*, i64** %2, align 8, !nonnull !11
  %3 = bitcast { i64, i64* }* %0 to i64*
  store i64 %_2, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  store i64* %_3, i64** %4, align 8
  %5 = bitcast { i64, i64* }* %0 to %"std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::LeafOrInternal)>"*
  %6 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8, !nonnull !11
  %10 = insertvalue { i64, i64* } undef, i64 %7, 0
  %11 = insertvalue { i64, i64* } %10, i64* %9, 1
  ret { i64, i64* } %11
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::last_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9last_edge17hc76a7331fa52f2c4E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %1, i64* mpk_immut nonnull %2) unnamed_addr #1 {
start:
  %self = alloca { i64, i64* }, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1
  store i64* %2, i64** %4, align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %len = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h93b4b0be721ec528E"({ i64, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0
  %_4.0 = load i64, i64* %5, align 8, !MPK-Unsafe !4
  %6 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1
  %_4.1 = load i64*, i64** %6, align 8, !nonnull !11, !MPK-Unsafe !4
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h7bc1fc27f1419fd7E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %_4.0, i64* mpk_immut mpk_unsafe nonnull %_4.1, i64 %len), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::key_at
; Function Attrs: nonlazybind uwtable
define internal mpk_immut align 8 dereferenceable(24) %"std::ffi::OsString"* @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$6key_at17hdf1cfaa6e215c78fE"(i64 %0, i64* mpk_immut mpk_unsafe nonnull %1, i64 %idx) unnamed_addr #1 {
start:
  %self = alloca { i64, i64* }, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1
  store i64* %1, i64** %3, align 8
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::as_leaf
  %_7 = call mpk_immut align 8 dereferenceable(544) %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$7as_leaf17h9e0e706c00c111a9E"({ i64, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %_6 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %_7, i32 0, i32 3
  %_5.0 = bitcast [11 x %"std::mem::MaybeUninit<std::ffi::OsString>"]* %_6 to [0 x %"std::mem::MaybeUninit<std::ffi::OsString>"]*
; call core::slice::<impl [T]>::get_unchecked
  %_4 = call mpk_immut align 8 dereferenceable(24) %"std::mem::MaybeUninit<std::ffi::OsString>"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfe52ecf757e3990bE"([0 x %"std::mem::MaybeUninit<std::ffi::OsString>"]* mpk_immut noalias nonnull readonly align 8 %_5.0, i64 11, i64 %idx), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4.i = bitcast %"std::mem::MaybeUninit<std::ffi::OsString>"* %_4 to %"std::mem::ManuallyDrop<std::ffi::OsString>"*, !MPK-SmartPointer !3
  %4 = bitcast %"std::mem::ManuallyDrop<std::ffi::OsString>"* %_4.i to %"std::ffi::OsString"*, !MPK-SmartPointer !3
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"std::ffi::OsString"* %4
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::val_at
; Function Attrs: nonlazybind uwtable
define internal mpk_immut align 8 dereferenceable(24) %"std::option::Option<std::ffi::OsString>"* @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$6val_at17h960995004ce2ad99E"(i64 %0, i64* mpk_immut mpk_unsafe nonnull %1, i64 %idx) unnamed_addr #1 {
start:
  %self = alloca { i64, i64* }, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1
  store i64* %1, i64** %3, align 8
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::as_leaf
  %_7 = call mpk_immut align 8 dereferenceable(544) %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$7as_leaf17h9e0e706c00c111a9E"({ i64, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %_6 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %_7, i32 0, i32 5
  %_5.0 = bitcast [11 x %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"]* %_6 to [0 x %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"]*
; call core::slice::<impl [T]>::get_unchecked
  %_4 = call mpk_immut align 8 dereferenceable(24) %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h2915c8f9118aed43E"([0 x %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"]* mpk_immut noalias nonnull readonly align 8 %_5.0, i64 11, i64 %idx), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4.i = bitcast %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* %_4 to %"std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>"*
  %4 = bitcast %"std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>"* %_4.i to %"std::option::Option<std::ffi::OsString>"*
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"std::option::Option<std::ffi::OsString>"* %4
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::as_leaf
; Function Attrs: nonlazybind uwtable
define internal mpk_immut align 8 dereferenceable(544) %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$7as_leaf17h9e0e706c00c111a9E"({ i64, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %this) unnamed_addr #1 {
start:
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf_ptr
  %ptr = call %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$11as_leaf_ptr17hc1e11a7a2b8694ffE"({ i64, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %this)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %ptr
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>::forget_type
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node81NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$11forget_type17hfcc8340e47be90c1E"(i64 %self.0, i64* mpk_immut nonnull %self.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64* }, align 8
  %1 = bitcast { i64, i64* }* %0 to i64*
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  %3 = bitcast { i64, i64* }* %0 to %"std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>"*
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !11
  %8 = insertvalue { i64, i64* } undef, i64 %5, 0
  %9 = insertvalue { i64, i64* } %8, i64* %7, 1
  ret { i64, i64* } %9
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::forget_type
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$11forget_type17h144b8b4505e325a2E"(i64 %self.0, i64* mpk_immut nonnull %self.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64* }, align 8
  %1 = bitcast { i64, i64* }* %0 to i64*
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  %3 = bitcast { i64, i64* }* %0 to %"std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>"*
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !11
  %8 = insertvalue { i64, i64* } undef, i64 %5, 0
  %9 = insertvalue { i64, i64* } %8, i64* %7, 1
  ret { i64, i64* } %9
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::from_internal
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$13from_internal17h37a88fd917a3254bE"(i64* mpk_immut nonnull %node, i64 %height) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64* }, align 8
; call core::ptr::non_null::NonNull<T>::cast
  %_4 = call mpk_immut nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hc36d3e4684c7506dE"(i64* mpk_immut nonnull %node)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64* }* %0 to i64*
  store i64 %height, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  store i64* %_4, i64** %2, align 8
  %3 = bitcast { i64, i64* }* %0 to %"std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>"*
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !11
  %8 = insertvalue { i64, i64* } undef, i64 %5, 0
  %9 = insertvalue { i64, i64* } %8, i64* %7, 1
  ret { i64, i64* } %9
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::as_internal_ptr
; Function Attrs: nonlazybind uwtable
define internal %"alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$15as_internal_ptr17hcdb244365190c126E"({ i64, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %this) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %this, i32 0, i32 1
  %_3 = load i64*, i64** %0, align 8, !nonnull !11
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha59f1a05e137e441E"(i64* mpk_immut nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %_2 to %"alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"*
  ret %"alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %1
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::from_boxed_node
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$15from_boxed_node17hd6109c2ce64603b4E"(i64* mpk_immut nonnull %0, i64 %height) unnamed_addr #1 {
start:
  %1 = alloca { i64, i64* }, align 8
  %boxed_node = alloca i64*, align 8
  store i64* %0, i64** %boxed_node, align 8
; call alloc::collections::btree::node::BoxedNode<K,V>::as_ptr
  %_4 = call mpk_immut nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$6as_ptr17hd40f321a757d9bc6E"(i64** mpk_immut noalias readonly align 8 dereferenceable(8) %boxed_node)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64* }* %1 to i64*
  store i64 %height, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1
  store i64* %_4, i64** %3, align 8
  %4 = bitcast { i64, i64* }* %1 to %"std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>"*
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1
  %8 = load i64*, i64** %7, align 8, !nonnull !11
  %9 = insertvalue { i64, i64* } undef, i64 %6, 0
  %10 = insertvalue { i64, i64* } %9, i64* %8, 1
  ret { i64, i64* } %10
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::force
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17h4827620ac60e2628E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture sret dereferenceable(24) %0, i64 %self.0, i64* mpk_immut nonnull %self.1) unnamed_addr #1 {
start:
  %_6 = alloca { i64, i64* }, align 8
  %_3 = alloca { i64, i64* }, align 8
  %1 = icmp eq i64 %self.0, 0
  br i1 %1, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64* }* %_6 to i64*
  store i64 %self.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_6, i32 0, i32 1
  store i64* %self.1, i64** %3, align 8
  %4 = bitcast { i64, i64* }* %_6 to %"std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>"*
  %5 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"*
  %6 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"* %5, i32 0, i32 1
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_6, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_6, i32 0, i32 1
  %10 = load i64*, i64** %9, align 8, !nonnull !11
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %6, i32 0, i32 0
  store i64 %8, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %6, i32 0, i32 1
  store i64* %10, i64** %12, align 8
  %13 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* %0 to i64*
  store i64 1, i64* %13, align 8
  br label %bb3

bb2:                                              ; preds = %start
  %14 = bitcast { i64, i64* }* %_3 to i64*
  store i64 %self.0, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_3, i32 0, i32 1
  store i64* %self.1, i64** %15, align 8
  %16 = bitcast { i64, i64* }* %_3 to %"std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Leaf)>"*
  %17 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"*
  %18 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_3, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_3, i32 0, i32 1
  %22 = load i64*, i64** %21, align 8, !nonnull !11
  %23 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %18, i32 0, i32 0
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %18, i32 0, i32 1
  store i64* %22, i64** %24, align 8
  %25 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* %0 to i64*
  store i64 0, i64* %25, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  ret void
}

; alloc::collections::btree::navigate::full_range
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5alloc11collections5btree8navigate10full_range17h00485992cc73b368E({ [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }* noalias nocapture sret dereferenceable(48) %0, i64 %root1.0, i64* mpk_immut nonnull %root1.1, i64 %root2.0, i64* mpk_immut nonnull %root2.1) unnamed_addr #1 {
start:
  %_35 = alloca i64*, align 8
  %_34 = alloca [1 x { i8*, i64* }], align 8
  %_27 = alloca %"std::fmt::Arguments", align 8
  %_26 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_24 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %max_int = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %min_int = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_20 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_19 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %b = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %f = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_13 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_12 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_11 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_10 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_9 = alloca { [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }, align 8
  %back = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %front = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %max_node = alloca { i64, i64* }, align 8
  %min_node = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %min_node, i32 0, i32 0
  store i64 %root1.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %min_node, i32 0, i32 1
  store i64* %root1.1, i64** %2, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %max_node, i32 0, i32 0
  store i64 %root2.0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %max_node, i32 0, i32 1
  store i64* %root2.1, i64** %4, align 8
  br label %bb1

bb1:                                              ; preds = %bb12, %start
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %min_node, i32 0, i32 0
  %_6.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %min_node, i32 0, i32 1
  %_6.1 = load i64*, i64** %6, align 8, !nonnull !11
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17hb2de06cf0acf09abE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %front, i64 %_6.0, i64* mpk_immut nonnull %_6.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %max_node, i32 0, i32 0
  %_8.0 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %max_node, i32 0, i32 1
  %_8.1 = load i64*, i64** %8, align 8, !nonnull !11
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::last_edge
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9last_edge17hc76a7331fa52f2c4E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %back, i64 %_8.0, i64* mpk_immut nonnull %_8.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_11 to i8*
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %front to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,HandleType>::force
  call void @"_ZN5alloc11collections5btree4node151Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$HandleType$GT$5force17hbf80aeb002c5a1bfE"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(32) %_10, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_11)
  br label %bb4

bb4:                                              ; preds = %bb3
  %11 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_13 to i8*
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %back to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,HandleType>::force
  call void @"_ZN5alloc11collections5btree4node151Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$HandleType$GT$5force17hbf80aeb002c5a1bfE"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(32) %_12, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_13)
  br label %bb5

bb5:                                              ; preds = %bb4
  %13 = bitcast { [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }* %_9 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"*
  %14 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %13 to i8*
  %15 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 32, i1 false)
  %16 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }* %_9, i32 0, i32 3
  %17 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %16 to i8*
  %18 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false)
  %19 = bitcast { [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }* %_9 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"*
  %20 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %19 to i64*
  %_16 = load i64, i64* %20, align 8, !range !22
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb6:                                              ; preds = %bb5
  %21 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }* %_9, i32 0, i32 3
  %22 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %21 to i64*
  %_14 = load i64, i64* %22, align 8, !range !22
  %23 = icmp eq i64 %_14, 0
  br i1 %23, label %bb9, label %bb7

bb7:                                              ; preds = %bb6, %bb8, %bb5
  %24 = bitcast i64** %_35 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @alloc116 to { [0 x i8]*, i64 }*), { [0 x i8]*, i64 }** %24, align 8
  %25 = bitcast i64** %_35 to { [0 x i8]*, i64 }**
  %arg0 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %25, align 8, !nonnull !11
; call core::fmt::ArgumentV1::new
  %26 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h95c2430e331161a0E({ [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %arg0, i1 ({ [0 x i8]*, i64 }*, %"std::fmt::Formatter"*)* mpk_immut nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h80e1dc8c3233516eE")
  %_38.0 = extractvalue { i8*, i64* } %26, 0
  %_38.1 = extractvalue { i8*, i64* } %26, 1
  br label %bb13

bb8:                                              ; preds = %bb5
  %27 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }* %_9, i32 0, i32 3
  %28 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %27 to i64*
  %_15 = load i64, i64* %28, align 8, !range !22
  %29 = icmp eq i64 %_15, 1
  br i1 %29, label %bb10, label %bb7

bb9:                                              ; preds = %bb6
  %30 = bitcast { [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }* %_9 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"*
  %31 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %30 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf"*
  %32 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf"* %31, i32 0, i32 1
  %33 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %f to i8*
  %34 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false)
  %35 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }* %_9, i32 0, i32 3
  %36 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %35 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf"*
  %37 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf"* %36, i32 0, i32 1
  %38 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %b to i8*
  %39 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false)
  %40 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_19 to i8*
  %41 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false)
  %42 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_20 to i8*
  %43 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %b to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false)
  %44 = bitcast { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }* %0 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  %45 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %44 to i8*
  %46 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false)
  %47 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }* %0, i32 0, i32 3
  %48 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %47 to i8*
  %49 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false)
  ret void

bb10:                                             ; preds = %bb8
  %50 = bitcast { [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }* %_9 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"*
  %51 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %50 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal"*
  %52 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal"* %51, i32 0, i32 1
  %53 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %min_int to i8*
  %54 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false)
  %55 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64], %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", [0 x i64] }* %_9, i32 0, i32 3
  %56 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %55 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal"*
  %57 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal"* %56, i32 0, i32 1
  %58 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %max_int to i8*
  %59 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false)
  %60 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_24 to i8*
  %61 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %min_int to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
  %62 = call { i64, i64* } @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h15677c2d4669f4e8E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_24)
  %_23.0 = extractvalue { i64, i64* } %62, 0
  %_23.1 = extractvalue { i64, i64* } %62, 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %63 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %min_node, i32 0, i32 0
  store i64 %_23.0, i64* %63, align 8
  %64 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %min_node, i32 0, i32 1
  store i64* %_23.1, i64** %64, align 8
  %65 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_26 to i8*
  %66 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %max_int to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
  %67 = call { i64, i64* } @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h15677c2d4669f4e8E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_26)
  %_25.0 = extractvalue { i64, i64* } %67, 0
  %_25.1 = extractvalue { i64, i64* } %67, 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %68 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %max_node, i32 0, i32 0
  store i64 %_25.0, i64* %68, align 8
  %69 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %max_node, i32 0, i32 1
  store i64* %_25.1, i64** %69, align 8
  br label %bb1

bb13:                                             ; preds = %bb7
  %70 = bitcast [1 x { i8*, i64* }]* %_34 to { i8*, i64* }*
  %71 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %70, i32 0, i32 0
  store i8* %_38.0, i8** %71, align 8
  %72 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %70, i32 0, i32 1
  store i64* %_38.1, i64** %72, align 8
  %_31.0 = bitcast [1 x { i8*, i64* }]* %_34 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_27, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc113 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 %_31.0, i64 1)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h08461824ca4df3e0E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_27, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc196 to %"std::panic::Location"*))
  unreachable
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::first_leaf_edge
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17hf16d32b62e5d6198E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %self.0, i64* mpk_immut nonnull %self.1) unnamed_addr #0 {
start:
  %_10 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_3 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>", align 8
  %node = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  br label %bb1

bb1:                                              ; preds = %bb8, %start
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 0
  %_4.0 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 1
  %_4.1 = load i64*, i64** %4, align 8, !nonnull !11
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::force
  call void @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17h4827620ac60e2628E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture sret dereferenceable(24) %_3, i64 %_4.0, i64* mpk_immut nonnull %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_3 to i64*
  %_5 = load i64, i64* %5, align 8, !range !22
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb3:                                              ; preds = %bb2
  %6 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_3 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"*
  %7 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %7, i32 0, i32 0
  %internal.0 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %7, i32 0, i32 1
  %internal.1 = load i64*, i64** %9, align 8, !nonnull !11
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h001b7a349ad18351E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %_10, i64 %internal.0, i64* mpk_immut nonnull %internal.1)
  br label %bb7

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %10 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_3 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"*
  %11 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %11, i32 0, i32 0
  %leaf.0 = load i64, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %11, i32 0, i32 1
  %leaf.1 = load i64*, i64** %13, align 8, !nonnull !11
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h31243aac8201c1aeE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %leaf.0, i64* mpk_immut nonnull %leaf.1)
  br label %bb6

bb6:                                              ; preds = %bb5
  ret void

bb7:                                              ; preds = %bb3
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
  %14 = call { i64, i64* } @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h15677c2d4669f4e8E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_10)
  %_9.0 = extractvalue { i64, i64* } %14, 0
  %_9.1 = extractvalue { i64, i64* } %14, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %15 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 0
  store i64 %_9.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 1
  store i64* %_9.1, i64** %16, align 8
  br label %bb1
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::full_range
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate178_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$10full_range17hc4c7989b8ff762a6E"({ [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }* noalias nocapture sret dereferenceable(48) %0, i64 %1, i64* mpk_immut nonnull %2) unnamed_addr #1 {
start:
  %self = alloca { i64, i64* }, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1
  store i64* %2, i64** %4, align 8
; call core::ptr::read
  %5 = call { i64, i64* } @_ZN4core3ptr4read17h4520971887a8dc9cE({ i64, i64* }* mpk_immut mpk_unsafe %self), !MPK-Unsafe !4
  %self2.0 = extractvalue { i64, i64* } %5, 0
  %self2.1 = extractvalue { i64, i64* } %5, 1
  br label %bb1

bb1:                                              ; preds = %start
  %6 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0
  %_5.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1
  %_5.1 = load i64*, i64** %7, align 8, !nonnull !11
; call alloc::collections::btree::navigate::full_range
  call void @_ZN5alloc11collections5btree8navigate10full_range17h00485992cc73b368E({ [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }* noalias nocapture sret dereferenceable(48) %0, i64 %_5.0, i64* mpk_immut nonnull %_5.1, i64 %self2.0, i64* mpk_immut nonnull %self2.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::next_leaf_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate235_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$alloc..collections..btree..node..marker..KV$GT$$GT$14next_leaf_edge17h1541763a901d39deE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_11 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_9 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %next_internal_edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %internal_kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %_6 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %leaf_kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %_3 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_2 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>", align 8
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_3 to i8*
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,HandleType>::force
  call void @"_ZN5alloc11collections5btree4node151Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$HandleType$GT$5force17hbb85e80bc2e4ff85E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* noalias nocapture sret dereferenceable(32) %_2, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %_2 to i64*
  %_4 = load i64, i64* %3, align 8, !range !22
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal"*
  %5 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal"* %4, i32 0, i32 1
  %6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %internal_kv to i8*
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_9 to i8*
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %internal_kv to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
  call void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17h9af976cd8fbf1898E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %next_internal_edge, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(24) %_9)
  br label %bb6

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %10 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf"*
  %11 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf"* %10, i32 0, i32 1
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %leaf_kv to i8*
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6 to i8*
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %leaf_kv to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
  call void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17he48e519fa756c7edE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb5

bb5:                                              ; preds = %bb4
  br label %bb9

bb6:                                              ; preds = %bb2
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_11 to i8*
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %next_internal_edge to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
  %18 = call { i64, i64* } @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h15677c2d4669f4e8E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_11)
  %_10.0 = extractvalue { i64, i64* } %18, 0
  %_10.1 = extractvalue { i64, i64* } %18, 1
  br label %bb7

bb7:                                              ; preds = %bb6
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::first_leaf_edge
  call void @"_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17hf16d32b62e5d6198E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %0, i64 %_10.0, i64* mpk_immut nonnull %_10.1)
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb5, %bb8
  ret void
}

; alloc::collections::btree::navigate::next_kv_unchecked_dealloc
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5alloc11collections5btree8navigate25next_kv_unchecked_dealloc17hc13603b7517b22c5E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(24) %internal_kv, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %leaf_edge) unnamed_addr #1 {
start:
  %_2.i = alloca %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_13 = alloca %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_12 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_11 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %parent_edge = alloca %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %last_edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_6 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_5 = alloca %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_4 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_3 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %0 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_3 to i8*
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %leaf_edge to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::forget_node_type
  call void @"_ZN5alloc11collections5btree4node176Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17h58440439de61cd41E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %edge, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb10, %bb1
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_6 to i8*
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %edge to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::right_kv
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8right_kv17hb112b601ef85e7d5E"(%"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(32) %_5, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = bitcast %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %_5 to i64*
  %_7 = load i64, i64* %4, align 8, !range !22
  switch i64 %_7, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ]

bb4:                                              ; preds = %bb3
  %5 = bitcast %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %_5 to %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err"*
  %6 = getelementptr inbounds %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err", %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err"* %5, i32 0, i32 1
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %last_edge to i8*
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_11 to i8*
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %last_edge to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !MPK-Unsafe !4
; call alloc::collections::btree::node::Handle<Node,Type>::into_node
  %11 = call { i64, i64* } @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h945a2eb27528aa2fE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_11), !MPK-Unsafe !4
  %_10.0 = extractvalue { i64, i64* } %11, 0
  %_10.1 = extractvalue { i64, i64* } %11, 1
  br label %bb7

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  %12 = bitcast %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %_5 to %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok"*
  %13 = getelementptr inbounds %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok", %"std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok"* %12, i32 0, i32 1
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %internal_kv to i8*
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
  ret void

bb7:                                              ; preds = %bb4
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::deallocate_and_ascend
  call void @"_ZN5alloc11collections5btree4node127NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$21deallocate_and_ascend17h4079bfe7baf266d6E"(%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(24) %parent_edge, i64 %_10.0, i64* mpk_immut mpk_unsafe nonnull %_10.1), !MPK-Unsafe !4
  br label %bb8

bb8:                                              ; preds = %bb7
  %16 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_13 to i8*
  %17 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %parent_edge to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false), !MPK-Unsafe !4
  %18 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_2.i to i8*
  %19 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false), !noalias !87
; call core::option::Option<T>::unwrap_or_else
  call void @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h3b03f60e5e2a06d1E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %_12, %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture dereferenceable(24) %_2.i), !noalias !90
  br label %bb9

bb9:                                              ; preds = %bb8
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::forget_node_type
  call void @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17hf157539bcd32bb72E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %_4, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_12), !MPK-Unsafe !4
  br label %bb10

bb10:                                             ; preds = %bb9
  %20 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %edge to i8*
  %21 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false)
  br label %bb2
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::next_unchecked
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$14next_unchecked17hcee31d4d9dacfe44E"({ [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* noalias nocapture sret dereferenceable(48) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::next_unchecked::{closure#0}]", align 1
; call alloc::collections::btree::mem::replace
  call void @_ZN5alloc11collections5btree3mem7replace17h908b5cdd8d389fdeE({ [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* noalias nocapture sret dereferenceable(48) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::next_unchecked::{{closure}}
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$14next_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17hf1714f3470a92b41E"({ [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, [0 x i64] }* noalias nocapture sret dereferenceable(72) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %leaf_edge) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_19 = alloca %"std::option::Option<std::ffi::OsString>", align 8
  %_18 = alloca %"std::ffi::OsString", align 8
  %_17 = alloca { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, align 8, !MPK-SmartPointer !3
  %_16 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_15 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_13 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %v = alloca %"std::option::Option<std::ffi::OsString>", align 8
  %_8 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %k = alloca %"std::ffi::OsString", align 8
  %_4 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_4 to i8*
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %leaf_edge to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !MPK-Unsafe !4
; call alloc::collections::btree::navigate::next_kv_unchecked_dealloc
  call void @_ZN5alloc11collections5btree8navigate25next_kv_unchecked_dealloc17hc13603b7517b22c5E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(24) %kv, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_4), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,HandleType>::reborrow
  call void @"_ZN5alloc11collections5btree4node104Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$HandleType$GT$8reborrow17hcccca558f4c26216E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(24) %_8, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* mpk_immut noalias readonly align 8 dereferenceable(24) %kv), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::into_kv
  %4 = call { i64*, i64* } @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$7into_kv17h469a70f566ead440E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(24) %_8), !MPK-Unsafe !4
  %_7.0 = extractvalue { i64*, i64* } %4, 0
  %_7.1 = extractvalue { i64*, i64* } %4, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %_6 = bitcast i64* %_7.0 to %"std::ffi::OsString"*
; call core::ptr::read
  call void @_ZN4core3ptr4read17hae5c8d34effb9c3eE(%"std::ffi::OsString"* noalias nocapture sret dereferenceable(24) %k, %"std::ffi::OsString"* mpk_immut mpk_unsafe %_6), !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,HandleType>::reborrow
  invoke void @"_ZN5alloc11collections5btree4node104Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$HandleType$GT$8reborrow17hcccca558f4c26216E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(24) %_13, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* mpk_immut noalias readonly align 8 dereferenceable(24) %kv)
          to label %bb5 unwind label %cleanup, !MPK-Unsafe !4

bb5:                                              ; preds = %bb4
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::into_kv
  %5 = invoke { i64*, i64* } @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$7into_kv17h469a70f566ead440E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(24) %_13)
          to label %bb6 unwind label %cleanup, !MPK-Unsafe !4

bb6:                                              ; preds = %bb5
  %_12.0 = extractvalue { i64*, i64* } %5, 0
  %_12.1 = extractvalue { i64*, i64* } %5, 1
  %_11 = bitcast i64* %_12.1 to %"std::option::Option<std::ffi::OsString>"*
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17hbaab8d5f554ed076E(%"std::option::Option<std::ffi::OsString>"* noalias nocapture sret dereferenceable(24) %v, %"std::option::Option<std::ffi::OsString>"* mpk_immut mpk_unsafe %_11)
          to label %bb7 unwind label %cleanup, !MPK-Unsafe !4

bb7:                                              ; preds = %bb6
  %6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_16 to i8*
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
; invoke alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::next_leaf_edge
  invoke void @"_ZN5alloc11collections5btree8navigate235_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$alloc..collections..btree..node..marker..KV$GT$$GT$14next_leaf_edge17h1541763a901d39deE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(24) %_15, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(24) %_16)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
  %8 = bitcast %"std::ffi::OsString"* %_18 to i8*
  %9 = bitcast %"std::ffi::OsString"* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  %10 = bitcast %"std::option::Option<std::ffi::OsString>"* %_19 to i8*
  %11 = bitcast %"std::option::Option<std::ffi::OsString>"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false)
  %12 = bitcast { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* %_17 to %"std::ffi::OsString"*, !MPK-SmartPointer !3
  %13 = bitcast %"std::ffi::OsString"* %12 to i8*
  %14 = bitcast %"std::ffi::OsString"* %_18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  %15 = getelementptr inbounds { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* %_17, i32 0, i32 3
  %16 = bitcast %"std::option::Option<std::ffi::OsString>"* %15 to i8*
  %17 = bitcast %"std::option::Option<std::ffi::OsString>"* %_19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  %18 = bitcast { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, [0 x i64] }* %0 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  %19 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %18 to i8*
  %20 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false)
  %21 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, [0 x i64] }* %0, i32 0, i32 3
  %22 = bitcast { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* %21 to i8*
  %23 = bitcast { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* %_17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 48, i1 false)
  ret void

bb9:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hb0f6c901d3550874E(%"std::option::Option<std::ffi::OsString>"* mpk_unsafe %v) #14
  br label %bb10

bb10:                                             ; preds = %bb9, %cleanup
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h49c15d43aee983b9E(%"std::ffi::OsString"* mpk_unsafe %k) #14
  br label %bb11

bb11:                                             ; preds = %bb10
  %24 = bitcast { i8*, i32 }* %1 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

cleanup:                                          ; preds = %bb6, %bb5, %bb4
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  %32 = extractvalue { i8*, i32 } %30, 1
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %32, i32* %34, align 8
  br label %bb10

cleanup1:                                         ; preds = %bb7
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  %37 = extractvalue { i8*, i32 } %35, 1
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %37, i32* %39, align 8
  br label %bb9
}

; alloc::vec::Vec<T>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN5alloc3vec12Vec$LT$T$GT$10as_mut_ptr17h3551f8975381e77dE"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"std::vec::Vec<u8>"* %self to { i8*, i64 }*, !MPK-SmartPointer !3
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h983af889806f4c80E"({ i8*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hc925ba59e5e66bb4E"(i8* %ptr), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %ptr
}

; alloc::vec::Vec<T>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* }* @"_ZN5alloc3vec12Vec$LT$T$GT$10as_mut_ptr17h6e41476939cfec7cE"(%"std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>"* %self to { i64*, i64 }*, !MPK-SmartPointer !3
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call { {}*, [3 x i64]* }* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h3c91d2bc548dafa0E"({ i64*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h5f72c14575dab494E"({ {}*, [3 x i64]* }* %ptr), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret { {}*, [3 x i64]* }* %ptr
}

; alloc::vec::Vec<T>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 }* @"_ZN5alloc3vec12Vec$LT$T$GT$10as_mut_ptr17ha29b35f18f0a92c4E"(%"std::vec::Vec<std::ffi::CString>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"std::vec::Vec<std::ffi::CString>"* %self to { i64*, i64 }*, !MPK-SmartPointer !3
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call { i8*, i64 }* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h2d202015a45698baE"({ i64*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h17ad968d563091a6E"({ i8*, i64 }* %ptr), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret { i8*, i64 }* %ptr
}

; alloc::vec::Vec<T>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8** @"_ZN5alloc3vec12Vec$LT$T$GT$10as_mut_ptr17hf9a015e1d4aedda4E"(%"std::vec::Vec<*const i8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"std::vec::Vec<*const i8>"* %self to { i64*, i64 }*, !MPK-SmartPointer !3
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8** @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h33c9cce7a9a47f2cE"({ i64*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17had8f8dae2dac8a71E"(i8** %ptr), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8** %ptr
}

; alloc::vec::Vec<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut i8* @"_ZN5alloc3vec12Vec$LT$T$GT$6as_ptr17h6c3f3cb08a8c6337E"(%"std::vec::Vec<u8>"* mpk_immut noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"std::vec::Vec<u8>"* %self to { i8*, i64 }*, !MPK-SmartPointer !3
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h983af889806f4c80E"({ i8*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hc925ba59e5e66bb4E"(i8* %ptr), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %ptr
}

; alloc::alloc::alloc_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_unsafe i8* @_ZN5alloc5alloc12alloc_zeroed17hc62e8bea4a9261baE(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h859723dee916f642E({ i64, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %layout), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h728db69c08e6e2b2E({ i64, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %layout), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call mpk_unsafe i8* @__rust_alloc_zeroed(i64 %_2, i64 %_4), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_unsafe i8* @_ZN5alloc5alloc15exchange_malloc17h1cc5817149deb76cE(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %_6 = alloca { i8*, i64 }, align 8, !MPK-SmartPointer !3
; call core::alloc::layout::Layout::from_size_align_unchecked
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha0958cf551fa9892E(i64 %size, i64 %align), !MPK-Unsafe !4
  %layout.0 = extractvalue { i64, i64 } %0, 0
  %layout.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::alloc::Global as core::alloc::AllocRef>::alloc
  %1 = call { i8*, i64 } @"_ZN62_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..AllocRef$GT$5alloc17hec7db13514cf6aa4E"(%"std::alloc::Global"* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [0 x i8] }>* @alloc91 to %"std::alloc::Global"*), i64 %layout.0, i64 %layout.1)
  store { i8*, i64 } %1, { i8*, i64 }* %_6, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast { i8*, i64 }* %_6 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_9 = select i1 %4, i64 1, i64 0
  switch i64 %_9, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb3:                                              ; preds = %bb2
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h988aff758f9fc198E(i64 %layout.0, i64 %layout.1)
  unreachable

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0
  %ptr.0 = load i8*, i8** %5, align 8, !nonnull !11
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1
  %ptr.1 = load i64, i64* %6, align 8
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %7 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h552e4fa7635a2cfbE"(i8* mpk_immut nonnull %ptr.0, i64 %ptr.1)
  br label %bb6

bb6:                                              ; preds = %bb5
  ret i8* %7
}

; alloc::alloc::alloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_unsafe i8* @_ZN5alloc5alloc5alloc17h215836df711750c0E(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h859723dee916f642E({ i64, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %layout), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h728db69c08e6e2b2E({ i64, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %layout), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call mpk_unsafe i8* @__rust_alloc(i64 %_2, i64 %_4), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hd180fa812d709342E(%"std::alloc::Global"* mpk_immut noalias nonnull readonly align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 {
start:
  %_19 = alloca %"std::alloc::AllocError", align 1
  %_15 = alloca i8*, align 8
  %raw_ptr = alloca i8*, align 8
  %2 = alloca { i8*, i64 }, align 8, !MPK-SmartPointer !3
  %layout = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h859723dee916f642E({ i64, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = icmp eq i64 %_4, 0
  br i1 %5, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  br i1 %zeroed, label %bb7, label %bb6

bb3:                                              ; preds = %bb1
; call core::alloc::layout::Layout::dangling
  %_7 = call mpk_immut nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17h3c4ab69173781954E({ i64, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %layout)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %6 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hf5b476faaa702565E"(i8* mpk_immut nonnull %_7, i64 0)
  %_6.0 = extractvalue { i8*, i64 } %6, 0
  %_6.1 = extractvalue { i8*, i64 } %6, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_6.0, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_6.1, i64* %8, align 8
  br label %bb20

bb6:                                              ; preds = %bb2
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_13.0 = load i64, i64* %9, align 8, !MPK-Unsafe !4
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_13.1 = load i64, i64* %10, align 8, !range !20, !MPK-Unsafe !4
; call alloc::alloc::alloc
  %11 = call mpk_unsafe i8* @_ZN5alloc5alloc5alloc17h215836df711750c0E(i64 %_13.0, i64 %_13.1), !MPK-Unsafe !4
  store i8* %11, i8** %raw_ptr, align 8, !MPK-Unsafe !4
  br label %bb9

bb7:                                              ; preds = %bb2
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_12.0 = load i64, i64* %12, align 8, !MPK-Unsafe !4
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_12.1 = load i64, i64* %13, align 8, !range !20, !MPK-Unsafe !4
; call alloc::alloc::alloc_zeroed
  %14 = call mpk_unsafe i8* @_ZN5alloc5alloc12alloc_zeroed17hc62e8bea4a9261baE(i64 %_12.0, i64 %_12.1), !MPK-Unsafe !4
  store i8* %14, i8** %raw_ptr, align 8, !MPK-Unsafe !4
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %_18 = load i8*, i8** %raw_ptr, align 8, !MPK-Unsafe !4
; call core::ptr::non_null::NonNull<T>::new
  %_17 = call mpk_immut i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hdf3ecc25d24a5e6dE"(i8* %_18), !MPK-Unsafe !4
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::option::Option<T>::ok_or
  %_16 = call mpk_immut i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17ha36801f04fd74d88E"(i8* mpk_immut %_17), !MPK-Unsafe !4
  br label %bb12

bb12:                                             ; preds = %bb11
; call <core::result::Result<T,E> as core::ops::try::Try>::into_result
  %15 = call mpk_immut i8* @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h727a15ca14c3cd01E"(i8* mpk_immut %_16), !MPK-Unsafe !4
  store i8* %15, i8** %_15, align 8, !MPK-Unsafe !4
  br label %bb13

bb13:                                             ; preds = %bb12
  %16 = bitcast i8** %_15 to {}**
  %17 = load {}*, {}** %16, align 8, !MPK-Unsafe !4
  %18 = icmp eq {}* %17, null
  %_20 = select i1 %18, i64 1, i64 0
  switch i64 %_20, label %bb15 [
    i64 0, label %bb14
    i64 1, label %bb16
  ]

bb14:                                             ; preds = %bb13
  %val = load i8*, i8** %_15, align 8, !nonnull !11, !MPK-Unsafe !4
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %19 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17hf5b476faaa702565E"(i8* mpk_immut nonnull %val, i64 %_4), !MPK-Unsafe !4
  %_25.0 = extractvalue { i8*, i64 } %19, 0
  %_25.1 = extractvalue { i8*, i64 } %19, 1
  br label %bb19

bb15:                                             ; preds = %bb13
  unreachable

bb16:                                             ; preds = %bb13
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb63f453704836e08E"(), !MPK-Unsafe !4
  br label %bb17

bb17:                                             ; preds = %bb16
; call <core::result::Result<T,E> as core::ops::try::Try>::from_error
  %20 = call { i8*, i64 } @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h677b38b7498c4466E"(), !MPK-Unsafe !4
  store { i8*, i64 } %20, { i8*, i64 }* %2, align 8, !MPK-Unsafe !4
  br label %bb18

bb18:                                             ; preds = %bb17
  br label %bb21

bb19:                                             ; preds = %bb14
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_25.0, i8** %21, align 8, !MPK-Unsafe !4
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_25.1, i64* %22, align 8, !MPK-Unsafe !4
  br label %bb20

bb20:                                             ; preds = %bb5, %bb19
  br label %bb21

bb21:                                             ; preds = %bb20, %bb18
  %23 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = insertvalue { i8*, i64 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i64 } %27, i64 %26, 1
  ret { i8*, i64 } %28
}

; alloc::alloc::dealloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc7dealloc17hf1c96cf0b9a219cbE(i8* mpk_unsafe %ptr, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h859723dee916f642E({ i64, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %layout), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_6 = call i64 @_ZN4core5alloc6layout6Layout5align17h728db69c08e6e2b2E({ i64, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %layout), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  call void @__rust_dealloc(i8* mpk_unsafe %ptr, i64 %_4, i64 %_6), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17h166ac6f6983836c2E(i8* mpk_immut mpk_unsafe nonnull %0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8, !MPK-Unsafe !4
  %3 = alloca i64, align 8, !MPK-Unsafe !4
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"std::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h87a270b6c7a9b3baE"({ i8*, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %ptr)
          to label %bb1 unwind label %cleanup, !MPK-Unsafe !4

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { {}*, [3 x i64]* } %7, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %7, 1
  %8 = bitcast [3 x i64]* %_5.1 to i64*
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = load i64, i64* %9, align 8, !invariant.load !11, !MPK-Unsafe !4
  %11 = bitcast [3 x i64]* %_5.1 to i64*
  %12 = getelementptr inbounds i64, i64* %11, i64 2
  %13 = load i64, i64* %12, align 8, !invariant.load !11, !MPK-Unsafe !4
  store i64 %10, i64* %3, align 8, !MPK-Unsafe !4
  %size = load i64, i64* %3, align 8, !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %14 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h87a270b6c7a9b3baE"({ i8*, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %ptr)
          to label %bb3 unwind label %cleanup, !MPK-Unsafe !4

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { {}*, [3 x i64]* } %14, 0
  %_9.1 = extractvalue { {}*, [3 x i64]* } %14, 1
  %15 = bitcast [3 x i64]* %_9.1 to i64*
  %16 = getelementptr inbounds i64, i64* %15, i64 1
  %17 = load i64, i64* %16, align 8, !invariant.load !11, !MPK-Unsafe !4
  %18 = bitcast [3 x i64]* %_9.1 to i64*
  %19 = getelementptr inbounds i64, i64* %18, i64 2
  %20 = load i64, i64* %19, align 8, !invariant.load !11, !MPK-Unsafe !4
  store i64 %20, i64* %2, align 8, !MPK-Unsafe !4
  %align = load i64, i64* %2, align 8, !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %21 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha0958cf551fa9892E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup, !MPK-Unsafe !4

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %21, 0
  %layout.1 = extractvalue { i64, i64 } %21, 1
  %22 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %22, align 8, !nonnull !11, !MPK-Unsafe !4
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  %_17.1 = load i64*, i64** %23, align 8, !nonnull !11, !MPK-Unsafe !4
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h68c779bb51c3a504E"(i8* mpk_immut nonnull %_17.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %_17.1)
          to label %bb6 unwind label %cleanup, !MPK-Unsafe !4

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke mpk_immut nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3bf0f375e1555b4fE"(i8* mpk_immut nonnull %_16)
          to label %bb7 unwind label %cleanup, !MPK-Unsafe !4

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::AllocRef>::dealloc
  invoke void @"_ZN62_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..AllocRef$GT$7dealloc17h0460996a95da6fedE"(%"std::alloc::Global"* mpk_immut noalias nonnull readonly align 1 %alloc, i8* mpk_immut mpk_unsafe nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup, !MPK-Unsafe !4

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb8
  ret void

bb10:                                             ; preds = %cleanup
  br label %bb11

bb11:                                             ; preds = %bb10
  %24 = bitcast { i8*, i32 }* %4 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  %32 = extractvalue { i8*, i32 } %30, 1
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %32, i32* %34, align 8
  br label %bb10
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17h4455a2f220e81425E(i64* mpk_immut mpk_unsafe nonnull %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8, !MPK-Unsafe !4
  %2 = alloca i64, align 8, !MPK-Unsafe !4
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"std::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke mpk_immut align 8 dereferenceable(24) %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h7efb4982570fec7fE"(i64** mpk_immut noalias readonly align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup, !MPK-Unsafe !4

bb1:                                              ; preds = %start
  store i64 24, i64* %2, align 8, !MPK-Unsafe !4
  %size = load i64, i64* %2, align 8, !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke mpk_immut align 8 dereferenceable(24) %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h7efb4982570fec7fE"(i64** mpk_immut noalias readonly align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup, !MPK-Unsafe !4

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8, !MPK-Unsafe !4
  %align = load i64, i64* %1, align 8, !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %4 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha0958cf551fa9892E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup, !MPK-Unsafe !4

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %4, 0
  %layout.1 = extractvalue { i64, i64 } %4, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !11, !MPK-Unsafe !4
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h29f12263614983baE"(i64* mpk_immut nonnull %_17)
          to label %bb6 unwind label %cleanup, !MPK-Unsafe !4

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke mpk_immut nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3bf0f375e1555b4fE"(i8* mpk_immut nonnull %_16)
          to label %bb7 unwind label %cleanup, !MPK-Unsafe !4

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::AllocRef>::dealloc
  invoke void @"_ZN62_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..AllocRef$GT$7dealloc17h0460996a95da6fedE"(%"std::alloc::Global"* mpk_immut noalias nonnull readonly align 1 %alloc, i8* mpk_immut mpk_unsafe nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup, !MPK-Unsafe !4

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb8
  ret void

bb10:                                             ; preds = %cleanup
  br label %bb11

bb11:                                             ; preds = %bb10
  %5 = bitcast { i8*, i32 }* %3 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb10
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17h9a908ac3ace5b65eE(i8* mpk_immut mpk_unsafe nonnull %0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8, !MPK-Unsafe !4
  %3 = alloca i64, align 8, !MPK-Unsafe !4
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"std::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h27547dfc66358f22E"({ i8*, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %ptr)
          to label %bb1 unwind label %cleanup, !MPK-Unsafe !4

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { {}*, [3 x i64]* } %7, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %7, 1
  %8 = bitcast [3 x i64]* %_5.1 to i64*
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = load i64, i64* %9, align 8, !invariant.load !11, !MPK-Unsafe !4
  %11 = bitcast [3 x i64]* %_5.1 to i64*
  %12 = getelementptr inbounds i64, i64* %11, i64 2
  %13 = load i64, i64* %12, align 8, !invariant.load !11, !MPK-Unsafe !4
  store i64 %10, i64* %3, align 8, !MPK-Unsafe !4
  %size = load i64, i64* %3, align 8, !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %14 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h27547dfc66358f22E"({ i8*, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %ptr)
          to label %bb3 unwind label %cleanup, !MPK-Unsafe !4

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { {}*, [3 x i64]* } %14, 0
  %_9.1 = extractvalue { {}*, [3 x i64]* } %14, 1
  %15 = bitcast [3 x i64]* %_9.1 to i64*
  %16 = getelementptr inbounds i64, i64* %15, i64 1
  %17 = load i64, i64* %16, align 8, !invariant.load !11, !MPK-Unsafe !4
  %18 = bitcast [3 x i64]* %_9.1 to i64*
  %19 = getelementptr inbounds i64, i64* %18, i64 2
  %20 = load i64, i64* %19, align 8, !invariant.load !11, !MPK-Unsafe !4
  store i64 %20, i64* %2, align 8, !MPK-Unsafe !4
  %align = load i64, i64* %2, align 8, !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %21 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha0958cf551fa9892E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup, !MPK-Unsafe !4

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %21, 0
  %layout.1 = extractvalue { i64, i64 } %21, 1
  %22 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %22, align 8, !nonnull !11, !MPK-Unsafe !4
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  %_17.1 = load i64*, i64** %23, align 8, !nonnull !11, !MPK-Unsafe !4
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h871211ec4404e7d6E"(i8* mpk_immut nonnull %_17.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %_17.1)
          to label %bb6 unwind label %cleanup, !MPK-Unsafe !4

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke mpk_immut nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3bf0f375e1555b4fE"(i8* mpk_immut nonnull %_16)
          to label %bb7 unwind label %cleanup, !MPK-Unsafe !4

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::AllocRef>::dealloc
  invoke void @"_ZN62_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..AllocRef$GT$7dealloc17h0460996a95da6fedE"(%"std::alloc::Global"* mpk_immut noalias nonnull readonly align 1 %alloc, i8* mpk_immut mpk_unsafe nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup, !MPK-Unsafe !4

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb8
  ret void

bb10:                                             ; preds = %cleanup
  br label %bb11

bb11:                                             ; preds = %bb10
  %24 = bitcast { i8*, i32 }* %4 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  %32 = extractvalue { i8*, i32 } %30, 1
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %32, i32* %34, align 8
  br label %bb10
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17he22ada79ae88b798E(i8* mpk_immut mpk_unsafe nonnull %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8, !MPK-Unsafe !4
  %3 = alloca i64, align 8, !MPK-Unsafe !4
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"std::alloc::Global", align 1
  %ptr = alloca { i8*, i64 }, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1
  store i64 %1, i64* %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { [0 x i8]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h589253e5cd9048c9E"({ i8*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %ptr)
          to label %bb1 unwind label %cleanup, !MPK-Unsafe !4

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { [0 x i8]*, i64 } %7, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %7, 1
  %8 = mul i64 %_5.1, 1
  store i64 %8, i64* %3, align 8, !MPK-Unsafe !4
  %size = load i64, i64* %3, align 8, !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %9 = invoke { [0 x i8]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h589253e5cd9048c9E"({ i8*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %ptr)
          to label %bb3 unwind label %cleanup, !MPK-Unsafe !4

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_9.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  %10 = mul i64 %_9.1, 1
  store i64 1, i64* %2, align 8, !MPK-Unsafe !4
  %align = load i64, i64* %2, align 8, !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %11 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha0958cf551fa9892E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup, !MPK-Unsafe !4

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %11, 0
  %layout.1 = extractvalue { i64, i64 } %11, 1
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %12, align 8, !nonnull !11, !MPK-Unsafe !4
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1
  %_17.1 = load i64, i64* %13, align 8, !MPK-Unsafe !4
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h1b57f5409d20bc7eE"(i8* mpk_immut nonnull %_17.0, i64 %_17.1)
          to label %bb6 unwind label %cleanup, !MPK-Unsafe !4

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke mpk_immut nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3bf0f375e1555b4fE"(i8* mpk_immut nonnull %_16)
          to label %bb7 unwind label %cleanup, !MPK-Unsafe !4

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::AllocRef>::dealloc
  invoke void @"_ZN62_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..AllocRef$GT$7dealloc17h0460996a95da6fedE"(%"std::alloc::Global"* mpk_immut noalias nonnull readonly align 1 %alloc, i8* mpk_immut mpk_unsafe nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup, !MPK-Unsafe !4

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb8
  ret void

bb10:                                             ; preds = %cleanup
  br label %bb11

bb11:                                             ; preds = %bb10
  %14 = bitcast { i8*, i32 }* %4 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  %22 = extractvalue { i8*, i32 } %20, 1
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  br label %bb10
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17hf917015f2501f83bE(i8* mpk_immut mpk_unsafe nonnull %0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8, !MPK-Unsafe !4
  %3 = alloca i64, align 8, !MPK-Unsafe !4
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"std::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17haffa848dff94fdffE"({ i8*, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %ptr)
          to label %bb1 unwind label %cleanup, !MPK-Unsafe !4

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { {}*, [3 x i64]* } %7, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %7, 1
  %8 = bitcast [3 x i64]* %_5.1 to i64*
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = load i64, i64* %9, align 8, !invariant.load !11, !MPK-Unsafe !4
  %11 = bitcast [3 x i64]* %_5.1 to i64*
  %12 = getelementptr inbounds i64, i64* %11, i64 2
  %13 = load i64, i64* %12, align 8, !invariant.load !11, !MPK-Unsafe !4
  store i64 %10, i64* %3, align 8, !MPK-Unsafe !4
  %size = load i64, i64* %3, align 8, !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %14 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17haffa848dff94fdffE"({ i8*, i64* }* mpk_immut noalias readonly align 8 dereferenceable(16) %ptr)
          to label %bb3 unwind label %cleanup, !MPK-Unsafe !4

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { {}*, [3 x i64]* } %14, 0
  %_9.1 = extractvalue { {}*, [3 x i64]* } %14, 1
  %15 = bitcast [3 x i64]* %_9.1 to i64*
  %16 = getelementptr inbounds i64, i64* %15, i64 1
  %17 = load i64, i64* %16, align 8, !invariant.load !11, !MPK-Unsafe !4
  %18 = bitcast [3 x i64]* %_9.1 to i64*
  %19 = getelementptr inbounds i64, i64* %18, i64 2
  %20 = load i64, i64* %19, align 8, !invariant.load !11, !MPK-Unsafe !4
  store i64 %20, i64* %2, align 8, !MPK-Unsafe !4
  %align = load i64, i64* %2, align 8, !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %21 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha0958cf551fa9892E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup, !MPK-Unsafe !4

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %21, 0
  %layout.1 = extractvalue { i64, i64 } %21, 1
  %22 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %22, align 8, !nonnull !11, !MPK-Unsafe !4
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  %_17.1 = load i64*, i64** %23, align 8, !nonnull !11, !MPK-Unsafe !4
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h336b38a98ea9a2eeE"(i8* mpk_immut nonnull %_17.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %_17.1)
          to label %bb6 unwind label %cleanup, !MPK-Unsafe !4

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke mpk_immut nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3bf0f375e1555b4fE"(i8* mpk_immut nonnull %_16)
          to label %bb7 unwind label %cleanup, !MPK-Unsafe !4

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::AllocRef>::dealloc
  invoke void @"_ZN62_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..AllocRef$GT$7dealloc17h0460996a95da6fedE"(%"std::alloc::Global"* mpk_immut noalias nonnull readonly align 1 %alloc, i8* mpk_immut mpk_unsafe nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup, !MPK-Unsafe !4

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb8
  ret void

bb10:                                             ; preds = %cleanup
  br label %bb11

bb11:                                             ; preds = %bb10
  %24 = bitcast { i8*, i32 }* %4 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  %32 = extractvalue { i8*, i32 } %30, 1
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %32, i32* %34, align 8
  br label %bb10
}

; alloc::boxed::Box<T,A>::into_unique
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h912b5ffac2c60e1bE"({}* mpk_immut noalias nonnull align 1 %0, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %3 = alloca { i8*, i64* }, align 8
  %b = alloca { {}*, [3 x i64]* }, align 8, !MPK-SmartPointer !3
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0
  store {}* %0, {}** %4, align 8
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1
  store [3 x i64]* %1, [3 x i64]** %5, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %_4 = bitcast { {}*, [3 x i64]* }* %b to %"std::alloc::Global"*
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17hb9aabf6c16efd5c3E(%"std::alloc::Global"* mpk_immut mpk_unsafe %_4)
          to label %bb1 unwind label %cleanup, !MPK-Unsafe !4

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0
  %_7.0 = load {}*, {}** %6, align 8, !nonnull !11
  %7 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1
  %_7.1 = load [3 x i64]*, [3 x i64]** %7, align 8, !nonnull !11
; invoke alloc::boxed::Box<T,A>::leak
  %8 = invoke { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h13789aaa25059fcaE"({}* mpk_immut noalias nonnull align 1 %_7.0, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24) %_7.1)
          to label %bb2 unwind label %cleanup1

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { {}*, [3 x i64]* } %8, 0
  %_6.1 = extractvalue { {}*, [3 x i64]* } %8, 1
; invoke <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
  %9 = invoke { i8*, i64* } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hb71da7d075c6527eE"({}* nonnull align 1 %_6.0, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24) %_6.1)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { i8*, i64* } %9, 0
  %_5.1 = extractvalue { i8*, i64* } %9, 1
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_5.0, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_5.1, i64** %11, align 8
  %12 = bitcast { i8*, i64* }* %3 to i8*
  %13 = getelementptr i8, i8* %12, i64 16
  %14 = bitcast i8* %13 to %"std::alloc::Global"*
  %15 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8, !nonnull !11
  %17 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  %18 = load i64*, i64** %17, align 8, !nonnull !11
  %19 = insertvalue { i8*, i64* } undef, i8* %16, 0
  %20 = insertvalue { i8*, i64* } %19, i64* %18, 1
  ret { i8*, i64* } %20

bb4:                                              ; preds = %cleanup1
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %21 = bitcast { i8*, i32 }* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17he94cfc3a4ca2a32bE({ {}*, [3 x i64]* }* mpk_unsafe %b) #14
  br label %bb5

bb7:                                              ; preds = %bb4, %cleanup
  %27 = load i8, i8* %_9, align 1, !range !5
  %28 = trunc i8 %27 to i1
  br i1 %28, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = extractvalue { i8*, i32 } %29, 1
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %31, i32* %33, align 8
  br label %bb7

cleanup1:                                         ; preds = %bb2, %bb1
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  %36 = extractvalue { i8*, i32 } %34, 1
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %36, i32* %38, align 8
  br label %bb4
}

; alloc::boxed::Box<T,A>::into_raw_with_alloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$19into_raw_with_alloc17h700ac8bb23ea817cE"({}* mpk_immut noalias nonnull align 1 %b.0, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24) %b.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i8*, i64* }, align 8
; call alloc::boxed::Box<T,A>::into_unique
  %2 = call { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h912b5ffac2c60e1bE"({}* mpk_immut noalias nonnull align 1 %b.0, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24) %b.1)
  %_4.0 = extractvalue { i8*, i64* } %2, 0
  %_4.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::ptr::unique::Unique<T>::as_ptr
  %3 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hfde47f42fa023f11E"(i8* mpk_immut nonnull %_4.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %_4.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { {}*, [3 x i64]* } %3, 0
  %_6.1 = extractvalue { {}*, [3 x i64]* } %3, 1
  %4 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 0
  store {}* %_6.0, {}** %5, align 8
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 1
  store [3 x i64]* %_6.1, [3 x i64]** %6, align 8
  %7 = bitcast { i8*, i64* }* %1 to i8*
  %8 = getelementptr i8, i8* %7, i64 16
  %9 = bitcast i8* %8 to %"std::alloc::Global"*
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %1, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %1, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8, !nonnull !11
  %14 = insertvalue { i8*, i64* } undef, i8* %11, 0
  %15 = insertvalue { i8*, i64* } %14, i64* %13, 1
  ret { i8*, i64* } %15

bb3:                                              ; preds = %cleanup
  br label %bb4

bb4:                                              ; preds = %bb3
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

cleanup:                                          ; preds = %bb1
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb3
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h13789aaa25059fcaE"({}* mpk_immut noalias nonnull align 1 %b.0, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24) %b.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64* }, align 8, !MPK-SmartPointer !3
  %_9 = alloca { i8*, i64* }, align 8
  %1 = bitcast { i8*, i64* }* %0 to { {}*, [3 x i64]* }*, !MPK-SmartPointer !3
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 0
  store {}* %b.0, {}** %2, align 8, !noalias !92
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 1
  store [3 x i64]* %b.1, [3 x i64]** %3, align 8, !noalias !92
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !noalias !92, !nonnull !11
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !noalias !92, !nonnull !11
  %8 = insertvalue { i8*, i64* } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64* } %8, i64* %7, 1
  store { i8*, i64* } %9, { i8*, i64* }* %_9, align 8, !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %10 = bitcast { i8*, i64* }* %_9 to { {}*, [3 x i64]* }*, !MPK-SmartPointer !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast { {}*, [3 x i64]* }* %10 to { i8*, i64* }*
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %11, i32 0, i32 0
  %_6.0 = load i8*, i8** %12, align 8, !nonnull !11, !MPK-Unsafe !4
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %11, i32 0, i32 1
  %_6.1 = load i64*, i64** %13, align 8, !nonnull !11, !MPK-Unsafe !4
; call core::ptr::unique::Unique<T>::as_ptr
  %14 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hfde47f42fa023f11E"(i8* mpk_immut nonnull %_6.0, i64* mpk_immut noalias readonly align 8 dereferenceable(24) %_6.1), !MPK-Unsafe !4
  %_5.0 = extractvalue { {}*, [3 x i64]* } %14, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %14, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %15 = insertvalue { {}*, [3 x i64]* } undef, {}* %_5.0, 0
  %16 = insertvalue { {}*, [3 x i64]* } %15, [3 x i64]* %_5.1, 1
  ret { {}*, [3 x i64]* } %16
}

; alloc::boxed::Box<T,A>::into_raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h8a2038277c98f060E"({}* mpk_immut noalias nonnull align 1 %b.0, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24) %b.1) unnamed_addr #0 {
start:
; call alloc::boxed::Box<T,A>::into_raw_with_alloc
  %0 = call { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$19into_raw_with_alloc17h700ac8bb23ea817cE"({}* mpk_immut noalias nonnull align 1 %b.0, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24) %b.1)
  %_2.0 = extractvalue { i8*, i64* } %0, 0
  %_2.1 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast i8* %_2.0 to {}*
  %2 = bitcast i64* %_2.1 to [3 x i64]*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %1, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %2, 1
  ret { {}*, [3 x i64]* } %4
}

; alloc::string::String::from_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String9from_utf817h89386385f0824e8bE(%"std::result::Result<std::string::String, std::string::FromUtf8Error>"* noalias nocapture sret dereferenceable(48) %0, %"std::vec::Vec<u8>"* noalias nocapture dereferenceable(24) %vec) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_13 = alloca %"std::str::Utf8Error", align 8
  %_12 = alloca %"std::vec::Vec<u8>", align 8, !MPK-SmartPointer !3
  %_11 = alloca %"std::string::FromUtf8Error", align 8, !MPK-SmartPointer !3
  %e = alloca %"std::str::Utf8Error", align 8
  %_9 = alloca %"std::vec::Vec<u8>", align 8, !MPK-SmartPointer !3
  %_8 = alloca %"std::string::String", align 8, !MPK-SmartPointer !3
  %_2 = alloca %"std::result::Result<&str, std::str::Utf8Error>", align 8
; invoke <alloc::vec::Vec<T> as core::ops::deref::Deref>::deref
  %2 = invoke { [0 x i8]*, i64 } @"_ZN68_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hfe00dc9b466b7d4dE"(%"std::vec::Vec<u8>"* mpk_immut noalias readonly align 8 dereferenceable(24) %vec)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_4.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %2, 1
; invoke core::str::converts::from_utf8
  invoke void @_ZN4core3str8converts9from_utf817h5fef343fb410e7cdE(%"std::result::Result<&str, std::str::Utf8Error>"* noalias nocapture sret dereferenceable(24) %_2, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %_4.0, i64 %_4.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %3 = bitcast %"std::result::Result<&str, std::str::Utf8Error>"* %_2 to i64*
  %_7 = load i64, i64* %3, align 8, !range !22
  switch i64 %_7, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb3:                                              ; preds = %bb2
  %4 = bitcast %"std::result::Result<&str, std::str::Utf8Error>"* %_2 to %"std::result::Result<&str, std::str::Utf8Error>::Err"*
  %5 = getelementptr inbounds %"std::result::Result<&str, std::str::Utf8Error>::Err", %"std::result::Result<&str, std::str::Utf8Error>::Err"* %4, i32 0, i32 1
  %6 = bitcast %"std::str::Utf8Error"* %e to i8*
  %7 = bitcast %"std::str::Utf8Error"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false)
  %8 = bitcast %"std::vec::Vec<u8>"* %_12 to i8*
  %9 = bitcast %"std::vec::Vec<u8>"* %vec to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  %10 = bitcast %"std::str::Utf8Error"* %_13 to i8*
  %11 = bitcast %"std::str::Utf8Error"* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 16, i1 false)
  %12 = bitcast %"std::string::FromUtf8Error"* %_11 to %"std::vec::Vec<u8>"*, !MPK-SmartPointer !3
  %13 = bitcast %"std::vec::Vec<u8>"* %12 to i8*
  %14 = bitcast %"std::vec::Vec<u8>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  %15 = getelementptr inbounds %"std::string::FromUtf8Error", %"std::string::FromUtf8Error"* %_11, i32 0, i32 3
  %16 = bitcast %"std::str::Utf8Error"* %15 to i8*
  %17 = bitcast %"std::str::Utf8Error"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false)
  %18 = bitcast %"std::result::Result<std::string::String, std::string::FromUtf8Error>"* %0 to %"std::result::Result<std::string::String, std::string::FromUtf8Error>::Err"*
  %19 = getelementptr inbounds %"std::result::Result<std::string::String, std::string::FromUtf8Error>::Err", %"std::result::Result<std::string::String, std::string::FromUtf8Error>::Err"* %18, i32 0, i32 1, !MPK-SmartPointer !3
  %20 = bitcast %"std::string::FromUtf8Error"* %19 to i8*
  %21 = bitcast %"std::string::FromUtf8Error"* %_11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 40, i1 false)
  %22 = bitcast %"std::result::Result<std::string::String, std::string::FromUtf8Error>"* %0 to i64*
  store i64 1, i64* %22, align 8
  br label %bb6

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %23 = bitcast %"std::vec::Vec<u8>"* %_9 to i8*
  %24 = bitcast %"std::vec::Vec<u8>"* %vec to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false)
  %25 = bitcast %"std::string::String"* %_8 to %"std::vec::Vec<u8>"*, !MPK-SmartPointer !3
  %26 = bitcast %"std::vec::Vec<u8>"* %25 to i8*
  %27 = bitcast %"std::vec::Vec<u8>"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false)
  %28 = bitcast %"std::result::Result<std::string::String, std::string::FromUtf8Error>"* %0 to %"std::result::Result<std::string::String, std::string::FromUtf8Error>::Ok"*
  %29 = getelementptr inbounds %"std::result::Result<std::string::String, std::string::FromUtf8Error>::Ok", %"std::result::Result<std::string::String, std::string::FromUtf8Error>::Ok"* %28, i32 0, i32 1, !MPK-SmartPointer !3
  %30 = bitcast %"std::string::String"* %29 to i8*
  %31 = bitcast %"std::string::String"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false)
  %32 = bitcast %"std::result::Result<std::string::String, std::string::FromUtf8Error>"* %0 to i64*
  store i64 0, i64* %32, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void

bb7:                                              ; preds = %cleanup
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h0592225f2e5a8517E(%"std::vec::Vec<u8>"* mpk_unsafe %vec) #14
  br label %bb8

bb8:                                              ; preds = %bb7
  %33 = bitcast { i8*, i32 }* %1 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

cleanup:                                          ; preds = %bb1, %start
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  %41 = extractvalue { i8*, i32 } %39, 1
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %41, i32* %43, align 8
  br label %bb7
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h42f9f38803ada395E"(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture sret dereferenceable(24) %0, { i64*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %_12 = alloca { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }, align 8
  %_2 = alloca i8, align 1
  store i64 16, i64* %3, align 8
  %4 = load i64, i64* %3, align 8
  br label %bb5

bb1:                                              ; preds = %bb3, %bb5
  store i8 1, i8* %_2, align 1
  br label %bb4

bb2:                                              ; preds = %bb3
  store i8 0, i8* %_2, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_4 = load i64, i64* %5, align 8
  %6 = icmp eq i64 %_4, 0
  br i1 %6, label %bb1, label %bb2

bb4:                                              ; preds = %bb1, %bb2
  %7 = load i8, i8* %_2, align 1, !range !5
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb7, label %bb6

bb5:                                              ; preds = %start
  %9 = icmp eq i64 %4, 0
  br i1 %9, label %bb1, label %bb3

bb6:                                              ; preds = %bb4
  store i64 8, i64* %2, align 8
  %10 = load i64, i64* %2, align 8
  br label %bb8

bb7:                                              ; preds = %bb4
  %11 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %0 to {}**
  store {}* null, {}** %11, align 8
  br label %bb13

bb8:                                              ; preds = %bb6
  store i64 16, i64* %1, align 8
  %12 = load i64, i64* %1, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_8 = load i64, i64* %13, align 8, !MPK-Unsafe !4
  %size = mul i64 %12, %_8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %14 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha0958cf551fa9892E(i64 %size, i64 %10), !MPK-Unsafe !4
  %layout.0 = extractvalue { i64, i64 } %14, 0
  %layout.1 = extractvalue { i64, i64 } %14, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %15 = bitcast { i64*, i64 }* %self to i64**
  %_15 = load i64*, i64** %15, align 8, !nonnull !11, !MPK-Unsafe !4
; call core::ptr::unique::Unique<T>::cast
  %_14 = call mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h268b36091a494cf6E"(i64* mpk_immut nonnull %_15), !MPK-Unsafe !4
  br label %bb11

bb11:                                             ; preds = %bb10
; call <T as core::convert::Into<U>>::into
  %_13 = call mpk_immut nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3bf0f375e1555b4fE"(i8* mpk_immut nonnull %_14), !MPK-Unsafe !4
  br label %bb12

bb12:                                             ; preds = %bb11
  %16 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %_12 to i8**
  store i8* %_13, i8** %16, align 8, !MPK-Unsafe !4
  %17 = getelementptr inbounds { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }, { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %_12, i32 0, i32 3
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  store i64 %layout.0, i64* %18, align 8, !MPK-Unsafe !4
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  store i64 %layout.1, i64* %19, align 8, !MPK-Unsafe !4
  %20 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %0 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*
  %21 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %20 to { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }*
  %22 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %21 to i8*
  %23 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false), !MPK-Unsafe !4
  br label %bb13

bb13:                                             ; preds = %bb12, %bb7
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h50d84e9777d80114E"(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture sret dereferenceable(24) %0, { i64*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %_12 = alloca { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }, align 8
  %_2 = alloca i8, align 1
  store i64 16, i64* %3, align 8
  %4 = load i64, i64* %3, align 8
  br label %bb5

bb1:                                              ; preds = %bb3, %bb5
  store i8 1, i8* %_2, align 1
  br label %bb4

bb2:                                              ; preds = %bb3
  store i8 0, i8* %_2, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_4 = load i64, i64* %5, align 8
  %6 = icmp eq i64 %_4, 0
  br i1 %6, label %bb1, label %bb2

bb4:                                              ; preds = %bb1, %bb2
  %7 = load i8, i8* %_2, align 1, !range !5
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb7, label %bb6

bb5:                                              ; preds = %start
  %9 = icmp eq i64 %4, 0
  br i1 %9, label %bb1, label %bb3

bb6:                                              ; preds = %bb4
  store i64 8, i64* %2, align 8
  %10 = load i64, i64* %2, align 8
  br label %bb8

bb7:                                              ; preds = %bb4
  %11 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %0 to {}**
  store {}* null, {}** %11, align 8
  br label %bb13

bb8:                                              ; preds = %bb6
  store i64 16, i64* %1, align 8
  %12 = load i64, i64* %1, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_8 = load i64, i64* %13, align 8, !MPK-Unsafe !4
  %size = mul i64 %12, %_8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %14 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha0958cf551fa9892E(i64 %size, i64 %10), !MPK-Unsafe !4
  %layout.0 = extractvalue { i64, i64 } %14, 0
  %layout.1 = extractvalue { i64, i64 } %14, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %15 = bitcast { i64*, i64 }* %self to i64**
  %_15 = load i64*, i64** %15, align 8, !nonnull !11, !MPK-Unsafe !4
; call core::ptr::unique::Unique<T>::cast
  %_14 = call mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h14b17b4339c5ec4dE"(i64* mpk_immut nonnull %_15), !MPK-Unsafe !4
  br label %bb11

bb11:                                             ; preds = %bb10
; call <T as core::convert::Into<U>>::into
  %_13 = call mpk_immut nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3bf0f375e1555b4fE"(i8* mpk_immut nonnull %_14), !MPK-Unsafe !4
  br label %bb12

bb12:                                             ; preds = %bb11
  %16 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %_12 to i8**
  store i8* %_13, i8** %16, align 8, !MPK-Unsafe !4
  %17 = getelementptr inbounds { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }, { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %_12, i32 0, i32 3
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  store i64 %layout.0, i64* %18, align 8, !MPK-Unsafe !4
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  store i64 %layout.1, i64* %19, align 8, !MPK-Unsafe !4
  %20 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %0 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*
  %21 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %20 to { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }*
  %22 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %21 to i8*
  %23 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false), !MPK-Unsafe !4
  br label %bb13

bb13:                                             ; preds = %bb12, %bb7
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h5c54985ab2f8b0d3E"(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture sret dereferenceable(24) %0, { i64*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %_12 = alloca { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }, align 8
  %_2 = alloca i8, align 1
  store i64 8, i64* %3, align 8
  %4 = load i64, i64* %3, align 8
  br label %bb5

bb1:                                              ; preds = %bb3, %bb5
  store i8 1, i8* %_2, align 1
  br label %bb4

bb2:                                              ; preds = %bb3
  store i8 0, i8* %_2, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_4 = load i64, i64* %5, align 8
  %6 = icmp eq i64 %_4, 0
  br i1 %6, label %bb1, label %bb2

bb4:                                              ; preds = %bb1, %bb2
  %7 = load i8, i8* %_2, align 1, !range !5
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb7, label %bb6

bb5:                                              ; preds = %start
  %9 = icmp eq i64 %4, 0
  br i1 %9, label %bb1, label %bb3

bb6:                                              ; preds = %bb4
  store i64 8, i64* %2, align 8
  %10 = load i64, i64* %2, align 8
  br label %bb8

bb7:                                              ; preds = %bb4
  %11 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %0 to {}**
  store {}* null, {}** %11, align 8
  br label %bb13

bb8:                                              ; preds = %bb6
  store i64 8, i64* %1, align 8
  %12 = load i64, i64* %1, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_8 = load i64, i64* %13, align 8, !MPK-Unsafe !4
  %size = mul i64 %12, %_8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %14 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha0958cf551fa9892E(i64 %size, i64 %10), !MPK-Unsafe !4
  %layout.0 = extractvalue { i64, i64 } %14, 0
  %layout.1 = extractvalue { i64, i64 } %14, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %15 = bitcast { i64*, i64 }* %self to i64**
  %_15 = load i64*, i64** %15, align 8, !nonnull !11, !MPK-Unsafe !4
; call core::ptr::unique::Unique<T>::cast
  %_14 = call mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h65687c35f31535a8E"(i64* mpk_immut nonnull %_15), !MPK-Unsafe !4
  br label %bb11

bb11:                                             ; preds = %bb10
; call <T as core::convert::Into<U>>::into
  %_13 = call mpk_immut nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3bf0f375e1555b4fE"(i8* mpk_immut nonnull %_14), !MPK-Unsafe !4
  br label %bb12

bb12:                                             ; preds = %bb11
  %16 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %_12 to i8**
  store i8* %_13, i8** %16, align 8, !MPK-Unsafe !4
  %17 = getelementptr inbounds { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }, { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %_12, i32 0, i32 3
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  store i64 %layout.0, i64* %18, align 8, !MPK-Unsafe !4
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  store i64 %layout.1, i64* %19, align 8, !MPK-Unsafe !4
  %20 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %0 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*
  %21 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %20 to { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }*
  %22 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %21 to i8*
  %23 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false), !MPK-Unsafe !4
  br label %bb13

bb13:                                             ; preds = %bb12, %bb7
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hfa79b2207542a81aE"(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture sret dereferenceable(24) %0, { i8*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %_12 = alloca { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }, align 8
  %_2 = alloca i8, align 1
  store i64 1, i64* %3, align 8
  %4 = load i64, i64* %3, align 8
  br label %bb5

bb1:                                              ; preds = %bb3, %bb5
  store i8 1, i8* %_2, align 1
  br label %bb4

bb2:                                              ; preds = %bb3
  store i8 0, i8* %_2, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_4 = load i64, i64* %5, align 8
  %6 = icmp eq i64 %_4, 0
  br i1 %6, label %bb1, label %bb2

bb4:                                              ; preds = %bb1, %bb2
  %7 = load i8, i8* %_2, align 1, !range !5
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb7, label %bb6

bb5:                                              ; preds = %start
  %9 = icmp eq i64 %4, 0
  br i1 %9, label %bb1, label %bb3

bb6:                                              ; preds = %bb4
  store i64 1, i64* %2, align 8
  %10 = load i64, i64* %2, align 8
  br label %bb8

bb7:                                              ; preds = %bb4
  %11 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %0 to {}**
  store {}* null, {}** %11, align 8
  br label %bb13

bb8:                                              ; preds = %bb6
  store i64 1, i64* %1, align 8
  %12 = load i64, i64* %1, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_8 = load i64, i64* %13, align 8, !MPK-Unsafe !4
  %size = mul i64 %12, %_8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %14 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha0958cf551fa9892E(i64 %size, i64 %10), !MPK-Unsafe !4
  %layout.0 = extractvalue { i64, i64 } %14, 0
  %layout.1 = extractvalue { i64, i64 } %14, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %15 = bitcast { i8*, i64 }* %self to i8**
  %_15 = load i8*, i8** %15, align 8, !nonnull !11, !MPK-Unsafe !4
; call core::ptr::unique::Unique<T>::cast
  %_14 = call mpk_immut nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h4fb85a49341272baE"(i8* mpk_immut nonnull %_15), !MPK-Unsafe !4
  br label %bb11

bb11:                                             ; preds = %bb10
; call <T as core::convert::Into<U>>::into
  %_13 = call mpk_immut nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3bf0f375e1555b4fE"(i8* mpk_immut nonnull %_14), !MPK-Unsafe !4
  br label %bb12

bb12:                                             ; preds = %bb11
  %16 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %_12 to i8**
  store i8* %_13, i8** %16, align 8, !MPK-Unsafe !4
  %17 = getelementptr inbounds { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }, { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %_12, i32 0, i32 3
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  store i64 %layout.0, i64* %18, align 8, !MPK-Unsafe !4
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  store i64 %layout.1, i64* %19, align 8, !MPK-Unsafe !4
  %20 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %0 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*
  %21 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %20 to { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }*
  %22 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %21 to i8*
  %23 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false), !MPK-Unsafe !4
  br label %bb13

bb13:                                             ; preds = %bb12, %bb7
  ret void
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 }* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h2d202015a45698baE"({ i64*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i64 }* %self to i64**
  %_2 = load i64*, i64** %0, align 8, !nonnull !11
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call { i8*, i64 }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h50170df2837cad77E"(i64* mpk_immut nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret { i8*, i64 }* %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: nonlazybind uwtable
define internal i8** @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h33c9cce7a9a47f2cE"({ i64*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i64 }* %self to i64**
  %_2 = load i64*, i64** %0, align 8, !nonnull !11
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call i8** @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h46ffe94b6217a66cE"(i64* mpk_immut nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8** %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: nonlazybind uwtable
define internal { {}*, [3 x i64]* }* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h3c91d2bc548dafa0E"({ i64*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i64 }* %self to i64**
  %_2 = load i64*, i64** %0, align 8, !nonnull !11
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call { {}*, [3 x i64]* }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8ff7ae4b7243ea53E"(i64* mpk_immut nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret { {}*, [3 x i64]* }* %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: nonlazybind uwtable
define internal i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h983af889806f4c80E"({ i8*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64 }* %self to i8**
  %_2 = load i8*, i8** %0, align 8, !nonnull !11
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h055a443b2e13d456E"(i8* mpk_immut nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %1
}

; <alloc::alloc::Global as core::alloc::AllocRef>::alloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN62_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..AllocRef$GT$5alloc17hec7db13514cf6aa4E"(%"std::alloc::Global"* mpk_immut noalias nonnull readonly align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hd180fa812d709342E(%"std::alloc::Global"* mpk_immut noalias nonnull readonly align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <alloc::alloc::Global as core::alloc::AllocRef>::dealloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN62_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..AllocRef$GT$7dealloc17h0460996a95da6fedE"(%"std::alloc::Global"* mpk_immut noalias nonnull readonly align 1 %self, i8* mpk_immut mpk_unsafe nonnull %ptr, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %2 = alloca {}, align 1
  %layout = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h859723dee916f642E({ i64, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = icmp eq i64 %_4, 0
  br i1 %5, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  br label %bb6

bb3:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h663abac54ec687f4E"(i8* mpk_immut nonnull %ptr), !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_8.0 = load i64, i64* %6, align 8, !MPK-Unsafe !4
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_8.1 = load i64, i64* %7, align 8, !range !20, !MPK-Unsafe !4
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17hf1c96cf0b9a219cbE(i8* mpk_unsafe %_6, i64 %_8.0, i64 %_8.1), !MPK-Unsafe !4
  br label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb2, %bb5
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h01c571666e8849f0E"(i64 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <alloc::string::String as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h1eb7858590664d38E"(%"std::string::String"* mpk_immut noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_5 = bitcast %"std::string::String"* %self to %"std::vec::Vec<u8>"*, !MPK-SmartPointer !3
; call <alloc::vec::Vec<T> as core::ops::deref::Deref>::deref
  %0 = call { [0 x i8]*, i64 } @"_ZN68_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hfe00dc9b466b7d4dE"(%"std::vec::Vec<u8>"* mpk_immut noalias readonly align 8 dereferenceable(24) %_5), !MPK-Unsafe !4
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked
  %1 = call { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h15739ddae93ad68aE([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_3.0, i64 %_3.1), !MPK-Unsafe !4
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; <alloc::vec::Vec<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN66_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h19d27d587856f3c7E"(%"std::vec::Vec<*const i8>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T>::as_mut_ptr
  %_3 = call i8** @"_ZN5alloc3vec12Vec$LT$T$GT$10as_mut_ptr17hf9a015e1d4aedda4E"(%"std::vec::Vec<*const i8>"* align 8 dereferenceable(24) %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"std::vec::Vec<*const i8>", %"std::vec::Vec<*const i8>"* %self, i32 0, i32 3
  %_5 = load i64, i64* %0, align 8, !MPK-Unsafe !4
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x i8*]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hd5179d101a001edbE(i8** %_3, i64 %_5), !MPK-Unsafe !4
  %_2.0 = extractvalue { [0 x i8*]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x i8*]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::vec::Vec<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN66_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1eb2760529614e81E"(%"std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T>::as_mut_ptr
  %_3 = call { {}*, [3 x i64]* }* @"_ZN5alloc3vec12Vec$LT$T$GT$10as_mut_ptr17h6e41476939cfec7cE"(%"std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>"* align 8 dereferenceable(24) %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>", %"std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>"* %self, i32 0, i32 3
  %_5 = load i64, i64* %0, align 8, !MPK-Unsafe !4
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x { {}*, [3 x i64]* }]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h892d0ec043a231d6E({ {}*, [3 x i64]* }* %_3, i64 %_5), !MPK-Unsafe !4
  %_2.0 = extractvalue { [0 x { {}*, [3 x i64]* }]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x { {}*, [3 x i64]* }]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h2e2f2b92ae86869fE([0 x { {}*, [3 x i64]* }]* mpk_unsafe %_2.0, i64 %_2.1), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::vec::Vec<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN66_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6866992f80b914bfE"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T>::as_mut_ptr
  %_3 = call i8* @"_ZN5alloc3vec12Vec$LT$T$GT$10as_mut_ptr17h3551f8975381e77dE"(%"std::vec::Vec<u8>"* align 8 dereferenceable(24) %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"std::vec::Vec<u8>", %"std::vec::Vec<u8>"* %self, i32 0, i32 3
  %_5 = load i64, i64* %0, align 8, !MPK-Unsafe !4
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h33e258338f177735E(i8* %_3, i64 %_5), !MPK-Unsafe !4
  %_2.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::vec::Vec<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN66_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hff8afa11dd02e002E"(%"std::vec::Vec<std::ffi::CString>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T>::as_mut_ptr
  %_3 = call { i8*, i64 }* @"_ZN5alloc3vec12Vec$LT$T$GT$10as_mut_ptr17ha29b35f18f0a92c4E"(%"std::vec::Vec<std::ffi::CString>"* align 8 dereferenceable(24) %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"std::vec::Vec<std::ffi::CString>", %"std::vec::Vec<std::ffi::CString>"* %self, i32 0, i32 3
  %_5 = load i64, i64* %0, align 8, !MPK-Unsafe !4
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x { i8*, i64 }]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h1071b83cf5b203d9E({ i8*, i64 }* %_3, i64 %_5), !MPK-Unsafe !4
  %_2.0 = extractvalue { [0 x { i8*, i64 }]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x { i8*, i64 }]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h3fa3e3c7da331285E([0 x { i8*, i64 }]* mpk_unsafe %_2.0, i64 %_2.1), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <std::ffi::c_str::CString as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN66_$LT$std..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbf8f81e536a9d1cbE"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !MPK-SmartPointer !3
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %_3.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !11, !MPK-Unsafe !4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %_3.1 = load i64, i64* %2, align 8, !MPK-Unsafe !4
; call core::slice::<impl [T]>::get_unchecked_mut
  %_2 = call align 1 dereferenceable(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h645317967e23b4edE"([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1, i64 0), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_2, align 1, !MPK-Unsafe !4
  ret void
}

; <alloc::vec::Vec<T> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN68_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hfe00dc9b466b7d4dE"(%"std::vec::Vec<u8>"* mpk_immut noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T>::as_ptr
  %_2 = call mpk_immut i8* @"_ZN5alloc3vec12Vec$LT$T$GT$6as_ptr17h6c3f3cb08a8c6337E"(%"std::vec::Vec<u8>"* mpk_immut noalias readonly align 8 dereferenceable(24) %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"std::vec::Vec<u8>", %"std::vec::Vec<u8>"* %self, i32 0, i32 3
  %_4 = load i64, i64* %0, align 8, !MPK-Unsafe !4
; call core::slice::raw::from_raw_parts
  %1 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17h5c8eec25162ec69aE(i8* mpk_immut mpk_unsafe %_2, i64 %_4), !MPK-Unsafe !4
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; <std::process::ExitCode as std::process::Termination>::report
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN68_$LT$std..process..ExitCode$u20$as$u20$std..process..Termination$GT$6report17ha67fbb373fb53fb2E"(i8 %0) unnamed_addr #0 {
start:
  %self = alloca i8, align 1
  store i8 %0, i8* %self, align 1
; call std::sys::unix::process::process_common::ExitCode::as_i32
  %1 = call i32 @_ZN3std3sys4unix7process14process_common8ExitCode6as_i3217h2aacd81451ee587bE(i8* mpk_immut noalias readonly align 1 dereferenceable(1) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %1
}

; <core::option::Option<T> as core::ops::try::Try>::from_error
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hacc57c94fec72598E"() unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %1, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  ret { i8*, i64 } %7
}

; <core::option::Option<T> as core::ops::try::Try>::from_error
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hdcbff50c86b2ef9dE"(%"std::option::Option<(usize, usize)>"* noalias nocapture sret dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = bitcast %"std::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %1, align 8
  ret void
}

; <core::option::Option<T> as core::ops::try::Try>::into_result
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h3b4307948a7547e3E"(i1 zeroext %self) unnamed_addr #0 {
start:
  %_3 = alloca %"std::option::NoneError", align 1
; call core::option::Option<T>::ok_or
  %0 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$5ok_or17hfac169cdd5ee0582E"(i1 zeroext %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <core::option::Option<T> as core::ops::try::Try>::into_result
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h598f55cdea61626eE"(i8* mpk_immut noalias readonly align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_3 = alloca %"std::option::NoneError", align 1
; call core::option::Option<T>::ok_or
  %0 = call { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hce733a44781c2e51E"(i8* mpk_immut noalias readonly align 1 %self.0, i64 %self.1)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <core::option::Option<T> as core::cmp::PartialEq>::ne
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17h3cd389c9ff1a55feE"({ i8*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self, { i8*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %other) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %_13 = alloca { i64*, i64* }, align 8
  %_9 = alloca i8, align 1
  %2 = alloca i8, align 1
  %3 = bitcast { i8*, i64 }* %self to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %6 = select i1 %5, i64 0, i64 1
  store i64 %6, i64* %1, align 8
  %__self_vi = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %7 = bitcast { i8*, i64 }* %other to {}**
  %8 = load {}*, {}** %7, align 8
  %9 = icmp eq {}* %8, null
  %10 = select i1 %9, i64 0, i64 1
  store i64 %10, i64* %0, align 8
  %__arg_1_vi = load i64, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i8 1, i8* %_9, align 1
  br label %bb5

bb4:                                              ; preds = %bb2
  store i8 0, i8* %_9, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %11 = load i8, i8* %_9, align 1, !range !5
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb7, label %bb6

bb6:                                              ; preds = %bb5
  store i8 1, i8* %2, align 1
  br label %bb13

bb7:                                              ; preds = %bb5
  %13 = bitcast { i64*, i64* }* %_13 to { i8*, i64 }**
  store { i8*, i64 }* %self, { i8*, i64 }** %13, align 8
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %15 = bitcast i64** %14 to { i8*, i64 }**
  store { i8*, i64 }* %other, { i8*, i64 }** %15, align 8
  %16 = bitcast { i64*, i64* }* %_13 to { i8*, i64 }**
  %17 = load { i8*, i64 }*, { i8*, i64 }** %16, align 8, !nonnull !11
  %18 = bitcast { i8*, i64 }* %17 to {}**
  %19 = load {}*, {}** %18, align 8
  %20 = icmp eq {}* %19, null
  %_17 = select i1 %20, i64 0, i64 1
  %21 = icmp eq i64 %_17, 1
  br i1 %21, label %bb9, label %bb8

bb8:                                              ; preds = %bb9, %bb7
  store i8 0, i8* %2, align 1
  br label %bb12

bb9:                                              ; preds = %bb7
  %22 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %23 = bitcast i64** %22 to { i8*, i64 }**
  %24 = load { i8*, i64 }*, { i8*, i64 }** %23, align 8, !nonnull !11
  %25 = bitcast { i8*, i64 }* %24 to {}**
  %26 = load {}*, {}** %25, align 8
  %27 = icmp eq {}* %26, null
  %_16 = select i1 %27, i64 0, i64 1
  %28 = icmp eq i64 %_16, 1
  br i1 %28, label %bb10, label %bb8

bb10:                                             ; preds = %bb9
  %29 = bitcast { i64*, i64* }* %_13 to { i8*, i64 }**
  %30 = load { i8*, i64 }*, { i8*, i64 }** %29, align 8, !nonnull !11
  %__self_0 = bitcast { i8*, i64 }* %30 to { [0 x i8]*, i64 }*
  %31 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %32 = bitcast i64** %31 to { i8*, i64 }**
  %33 = load { i8*, i64 }*, { i8*, i64 }** %32, align 8, !nonnull !11
  %__arg_1_0 = bitcast { i8*, i64 }* %33 to { [0 x i8]*, i64 }*
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::ne
  %34 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2ne17h44f36eb1e402783eE"({ [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %__self_0, { [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %__arg_1_0)
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %2, align 1
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb12

bb12:                                             ; preds = %bb11, %bb8
  br label %bb13

bb13:                                             ; preds = %bb6, %bb12
  %36 = load i8, i8* %2, align 1, !range !5
  %37 = trunc i8 %36 to i1
  ret i1 %37
}

; <std::ffi::os_str::OsString as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::OsStr"*, i64 } @"_ZN70_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0da697d6c230784fE"(%"std::ffi::OsString"* mpk_immut noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_4 = alloca %"std::ops::RangeFull", align 1
; call <std::ffi::os_str::OsString as core::ops::index::Index<core::ops::range::RangeFull>>::index
  %0 = call { %"std::ffi::OsStr"*, i64 } @"_ZN105_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h45db50d3e74d251aE"(%"std::ffi::OsString"* mpk_immut noalias readonly align 8 dereferenceable(24) %self, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc198 to %"std::panic::Location"*))
  %_2.0 = extractvalue { %"std::ffi::OsStr"*, i64 } %0, 0
  %_2.1 = extractvalue { %"std::ffi::OsStr"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { %"std::ffi::OsStr"*, i64 } undef, %"std::ffi::OsStr"* %_2.0, 0
  %2 = insertvalue { %"std::ffi::OsStr"*, i64 } %1, i64 %_2.1, 1
  ret { %"std::ffi::OsStr"*, i64 } %2
}

; <core::option::Option<T> as core::default::Default>::default
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h8c9221f3229e5336E"() unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %1, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  ret { i8*, i64 } %7
}

; <core::option::Option<T> as core::default::Default>::default
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64*, i64 } @"_ZN72_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h94811efe173bb29dE"() unnamed_addr #0 {
start:
  %0 = alloca { i64*, i64 }, align 8
  %1 = bitcast { i64*, i64 }* %0 to {}**
  store {}* null, {}** %1, align 8
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i64*, i64 } undef, i64* %3, 0
  %7 = insertvalue { i64*, i64 } %6, i64 %5, 1
  ret { i64*, i64 } %7
}

; <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h7b168c05cab7092cE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
; call core::slice::<impl [T]>::len
  %_4 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h0631a2df7f60cba4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::len
  %_6 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h0631a2df7f60cba4E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %other.0, i64 %other.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = icmp ne i64 %_4, %_6
  br i1 %_3, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::as_ptr
  %_9 = call mpk_immut i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h8a1f3be8d1c09769E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1)
  br label %bb5

bb4:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1
  br label %bb14

bb5:                                              ; preds = %bb3
; call core::slice::<impl [T]>::as_ptr
  %_12 = call mpk_immut i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h8a1f3be8d1c09769E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %other.0, i64 %other.1)
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %_8 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h2214cd8937c16009E"(i8* mpk_immut %_9, i8* mpk_immut %_12)
  br label %bb7

bb7:                                              ; preds = %bb6
  br i1 %_8, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
; call core::mem::size_of_val
  %size = call i64 @_ZN4core3mem11size_of_val17hb797e2a3a2f8bfc4E([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1), !MPK-Unsafe !4
  br label %bb10

bb9:                                              ; preds = %bb7
  store i8 1, i8* %0, align 1
  br label %bb14

bb10:                                             ; preds = %bb8
; call core::slice::<impl [T]>::as_ptr
  %_18 = call mpk_immut i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h8a1f3be8d1c09769E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %self.0, i64 %self.1), !MPK-Unsafe !4
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::slice::<impl [T]>::as_ptr
  %_21 = call mpk_immut i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h8a1f3be8d1c09769E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %other.0, i64 %other.1), !MPK-Unsafe !4
  br label %bb12

bb12:                                             ; preds = %bb11
  %_16 = call i32 @memcmp(i8* mpk_immut mpk_unsafe %_18, i8* mpk_immut mpk_unsafe %_21, i64 %size), !MPK-Unsafe !4
  br label %bb13

bb13:                                             ; preds = %bb12
  %1 = icmp eq i32 %_16, 0
  %2 = zext i1 %1 to i8, !MPK-Unsafe !4
  store i8 %2, i8* %0, align 1, !MPK-Unsafe !4
  br label %bb14

bb14:                                             ; preds = %bb13, %bb9, %bb4
  %3 = load i8, i8* %0, align 1, !range !5
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; <core::result::Result<T,E> as core::ops::try::Try>::from_error
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h677b38b7498c4466E"() unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>::Err"*
  %2 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>::Err"* %1 to %"std::alloc::AllocError"*
  %3 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; <core::result::Result<T,E> as core::ops::try::Try>::from_error
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h7744c582a962a258E"(i64 %v) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %0 to %"std::result::Result<(), usize>::Err"*
  %2 = getelementptr inbounds %"std::result::Result<(), usize>::Err", %"std::result::Result<(), usize>::Err"* %1, i32 0, i32 1
  store i64 %v, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !range !22
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; <core::result::Result<T,E> as core::ops::try::Try>::into_result
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h067ad97db228bbd6E"(%"std::result::Result<&str, usize>"* noalias nocapture sret dereferenceable(24) %0, %"std::result::Result<&str, usize>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"std::result::Result<&str, usize>"* %0 to i8*
  %2 = bitcast %"std::result::Result<&str, usize>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; <core::result::Result<T,E> as core::ops::try::Try>::into_result
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut i8* @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h727a15ca14c3cd01E"(i8* mpk_immut %self) unnamed_addr #0 {
start:
  ret i8* %self
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe %"std::mem::MaybeUninit<std::ffi::OsString>"* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h2d36023f35dd7735E"(i64 %self, [0 x %"std::mem::MaybeUninit<std::ffi::OsString>"]* mpk_immut mpk_unsafe %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  store i64 1, i64* @METASAFE_TYPE_ID, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call mpk_immut %"std::mem::MaybeUninit<std::ffi::OsString>"* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h1952cfc07ef3a18eE"([0 x %"std::mem::MaybeUninit<std::ffi::OsString>"]* mpk_immut %slice.0, i64 %slice.1), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::add
  %0 = call mpk_immut mpk_unsafe %"std::mem::MaybeUninit<std::ffi::OsString>"* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h89e9d04ced1ae095E"(%"std::mem::MaybeUninit<std::ffi::OsString>"* mpk_immut mpk_unsafe %_3, i64 %self), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret %"std::mem::MaybeUninit<std::ffi::OsString>"* %0
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h72ac8fd9dffa5a11E"(i64 %self, [0 x %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"]* mpk_immut mpk_unsafe %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  store i64 1, i64* @METASAFE_TYPE_ID, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call mpk_immut %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h8230072669f6ed79E"([0 x %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"]* mpk_immut %slice.0, i64 %slice.1), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::add
  %0 = call mpk_immut mpk_unsafe %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hedf00ee91ea70bddE"(%"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* mpk_immut mpk_unsafe %_3, i64 %self), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret %"std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>"* %0
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h741ed440632cc139E"(i64 %self, [0 x i8]* mpk_immut mpk_unsafe %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  store i64 1, i64* @METASAFE_TYPE_ID, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call mpk_immut i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h95f9230e8ed649a2E"([0 x i8]* mpk_immut %slice.0, i64 %slice.1), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::add
  %0 = call mpk_immut mpk_unsafe i8* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h99c8c1bbc0117f6dE"(i8* mpk_immut mpk_unsafe %_3, i64 %self), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut mpk_unsafe i8** @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h8cccf82f85dfe6c6E"(i64 %self, [0 x i8*]* mpk_immut mpk_unsafe %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  store i64 1, i64* @METASAFE_TYPE_ID, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call mpk_immut i8** @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17he9b404f708bef45cE"([0 x i8*]* mpk_immut %slice.0, i64 %slice.1), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::add
  %0 = call mpk_immut mpk_unsafe i8** @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hdc023ec9b8d32a17E"(i8** mpk_immut mpk_unsafe %_3, i64 %self), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8** %0
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_unsafe i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h7c9dd602ee682fb2E"(i64 %self, [0 x i8]* mpk_unsafe %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  store i64 1, i64* @METASAFE_TYPE_ID, align 8
; call core::ptr::mut_ptr::<impl *mut [T]>::as_mut_ptr
  %_3 = call i8* @"_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7923774adaf05c21E"([0 x i8]* %slice.0, i64 %slice.1), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::add
  %0 = call mpk_unsafe i8* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17heaf3a9c41fdb296cE"(i8* mpk_unsafe %_3, i64 %self), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h26318d665f610598E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>", align 8
  %0 = alloca {}, align 1
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h50d84e9777d80114E"(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture sret dereferenceable(24) %_2, { i64*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %_2 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_4 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_4, 1
  br i1 %4, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  br label %bb5

bb3:                                              ; preds = %bb1
  %5 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %_2 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*
  %6 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %5 to { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }*
  %7 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %6 to i8**
  %ptr = load i8*, i8** %7, align 8, !nonnull !11
  %8 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %_2 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*
  %9 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %8 to { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }*
  %10 = getelementptr inbounds { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }, { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %9, i32 0, i32 3
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  %layout.0 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  %layout.1 = load i64, i64* %12, align 8, !range !20
  %_7 = bitcast { i64*, i64 }* %self to %"std::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::AllocRef>::dealloc
  call void @"_ZN62_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..AllocRef$GT$7dealloc17h0460996a95da6fedE"(%"std::alloc::Global"* mpk_immut noalias nonnull readonly align 1 %_7, i8* mpk_immut mpk_unsafe nonnull %ptr, i64 %layout.0, i64 %layout.1), !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9318fa4bea3d6f12E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>", align 8
  %0 = alloca {}, align 1
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h5c54985ab2f8b0d3E"(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture sret dereferenceable(24) %_2, { i64*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %_2 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_4 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_4, 1
  br i1 %4, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  br label %bb5

bb3:                                              ; preds = %bb1
  %5 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %_2 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*
  %6 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %5 to { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }*
  %7 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %6 to i8**
  %ptr = load i8*, i8** %7, align 8, !nonnull !11
  %8 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %_2 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*
  %9 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %8 to { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }*
  %10 = getelementptr inbounds { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }, { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %9, i32 0, i32 3
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  %layout.0 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  %layout.1 = load i64, i64* %12, align 8, !range !20
  %_7 = bitcast { i64*, i64 }* %self to %"std::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::AllocRef>::dealloc
  call void @"_ZN62_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..AllocRef$GT$7dealloc17h0460996a95da6fedE"(%"std::alloc::Global"* mpk_immut noalias nonnull readonly align 1 %_7, i8* mpk_immut mpk_unsafe nonnull %ptr, i64 %layout.0, i64 %layout.1), !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha6e53f2a326b4a25E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>", align 8
  %0 = alloca {}, align 1
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h42f9f38803ada395E"(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture sret dereferenceable(24) %_2, { i64*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %_2 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_4 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_4, 1
  br i1 %4, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  br label %bb5

bb3:                                              ; preds = %bb1
  %5 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %_2 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*
  %6 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %5 to { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }*
  %7 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %6 to i8**
  %ptr = load i8*, i8** %7, align 8, !nonnull !11
  %8 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %_2 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*
  %9 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %8 to { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }*
  %10 = getelementptr inbounds { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }, { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %9, i32 0, i32 3
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  %layout.0 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  %layout.1 = load i64, i64* %12, align 8, !range !20
  %_7 = bitcast { i64*, i64 }* %self to %"std::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::AllocRef>::dealloc
  call void @"_ZN62_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..AllocRef$GT$7dealloc17h0460996a95da6fedE"(%"std::alloc::Global"* mpk_immut noalias nonnull readonly align 1 %_7, i8* mpk_immut mpk_unsafe nonnull %ptr, i64 %layout.0, i64 %layout.1), !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hce5a047a21cd9753E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>", align 8
  %0 = alloca {}, align 1
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hfa79b2207542a81aE"(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture sret dereferenceable(24) %_2, { i8*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %_2 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_4 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_4, 1
  br i1 %4, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  br label %bb5

bb3:                                              ; preds = %bb1
  %5 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %_2 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*
  %6 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %5 to { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }*
  %7 = bitcast { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %6 to i8**
  %ptr = load i8*, i8** %7, align 8, !nonnull !11
  %8 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %_2 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*
  %9 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %8 to { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }*
  %10 = getelementptr inbounds { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }, { [0 x i64], i8*, [0 x i64], { i64, i64 }, [0 x i64] }* %9, i32 0, i32 3
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  %layout.0 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  %layout.1 = load i64, i64* %12, align 8, !range !20
  %_7 = bitcast { i8*, i64 }* %self to %"std::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::AllocRef>::dealloc
  call void @"_ZN62_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..AllocRef$GT$7dealloc17h0460996a95da6fedE"(%"std::alloc::Global"* mpk_immut noalias nonnull readonly align 1 %_7, i8* mpk_immut mpk_unsafe nonnull %ptr, i64 %layout.0, i64 %layout.1), !MPK-Unsafe !4
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  ret void
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h2c4e4a7535cc95d1E"(%"std::option::Option<(usize, usize)>"* noalias nocapture sret dereferenceable(24) %0, %"std::str::pattern::CharSearcher"* align 8 dereferenceable(48) %self) unnamed_addr #0 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8, !MPK-Unsafe !4
  %2 = alloca { [0 x i8]*, i64 }, align 8, !MPK-Unsafe !4
  %_53 = alloca { i64, i64 }, align 8
  %_51 = alloca { i64, i64 }, align 8
  %_47 = alloca { [0 x i8]*, i64 }, align 8
  %slice = alloca { [0 x i8]*, i64 }, align 8
  %_39 = alloca { i64, i64 }, align 8
  %_35 = alloca { i8*, i64 }, align 8
  %_22 = alloca { i64, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_3 = alloca { i8*, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %bb25, %start
  %3 = bitcast %"std::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  %_7.0 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !11
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  %_7.1 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %_7.0, [0 x i8]** %6, align 8, !noalias !96, !MPK-Unsafe !4
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %_7.1, i64* %7, align 8, !noalias !96, !MPK-Unsafe !4
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  %9 = load [0 x i8]*, [0 x i8]** %8, align 8, !noalias !96, !nonnull !11, !MPK-Unsafe !4
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  %11 = load i64, i64* %10, align 8, !noalias !96, !MPK-Unsafe !4
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %11, 1
  %_6.0 = extractvalue { [0 x i8]*, i64 } %13, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %13, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %14 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 3
  %_9 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 5
  %_10 = load i64, i64* %15, align 8
  %16 = bitcast { i64, i64 }* %_8 to i64*
  store i64 %_9, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  store i64 %_10, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
; call core::slice::<impl [T]>::get
  %22 = call { i8*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hee00a66c2aa86079E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_6.0, i64 %_6.1, i64 %19, i64 %21)
  %_4.0 = extractvalue { i8*, i64 } %22, 0
  %_4.1 = extractvalue { i8*, i64 } %22, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try::Try>::into_result
  %23 = call { i8*, i64 } @"_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h598f55cdea61626eE"(i8* mpk_immut noalias readonly align 1 %_4.0, i64 %_4.1)
  store { i8*, i64 } %23, { i8*, i64 }* %_3, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %24 = bitcast { i8*, i64 }* %_3 to {}**
  %25 = load {}*, {}** %24, align 8
  %26 = icmp eq {}* %25, null
  %_11 = select i1 %26, i64 1, i64 0
  switch i64 %_11, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb5:                                              ; preds = %bb4
  %27 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 0
  %val.0 = load [0 x i8]*, [0 x i8]** %28, align 8, !nonnull !11
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 1
  %val.1 = load i64, i64* %29, align 8
  %_19 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 11
  %_18.0 = bitcast [4 x i8]* %_19 to [0 x i8]*
  %30 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 7
  %_21 = load i64, i64* %30, align 8, !MPK-Unsafe !4
  %_20 = sub i64 %_21, 1
; call core::slice::<impl [T]>::get_unchecked
  %_17 = call mpk_immut align 1 dereferenceable(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h748ca44f234e7964E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_18.0, i64 4, i64 %_20), !MPK-Unsafe !4
  br label %bb10

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h0ac440e7d91996d3E"()
  br label %bb8

bb8:                                              ; preds = %bb7
; call <core::option::Option<T> as core::ops::try::Try>::from_error
  call void @"_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hdcbff50c86b2ef9dE"(%"std::option::Option<(usize, usize)>"* noalias nocapture sret dereferenceable(24) %0)
  br label %bb9

bb9:                                              ; preds = %bb8
  br label %bb27

bb10:                                             ; preds = %bb5
  %last_byte = load i8, i8* %_17, align 1, !MPK-Unsafe !4
; call core::slice::memchr::memchr
  %31 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17hb4c29610b6f49504E(i8 %last_byte, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %val.0, i64 %val.1)
  store { i64, i64 } %31, { i64, i64 }* %_22, align 8
  br label %bb11

bb11:                                             ; preds = %bb10
  %32 = bitcast { i64, i64 }* %_22 to i64*
  %_25 = load i64, i64* %32, align 8, !range !22
  %33 = icmp eq i64 %_25, 1
  br i1 %33, label %bb13, label %bb12

bb12:                                             ; preds = %bb11
  %34 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 5
  %_56 = load i64, i64* %34, align 8
  %35 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 3
  store i64 %_56, i64* %35, align 8
  %36 = bitcast %"std::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %36, align 8
  br label %bb26

bb13:                                             ; preds = %bb11
  %37 = bitcast { i64, i64 }* %_22 to %"std::option::Option<usize>::Some"*
  %38 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %37, i32 0, i32 1
  %index = load i64, i64* %38, align 8
  %_27 = add i64 %index, 1
  %39 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 3
  %40 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, %_27
  store i64 %42, i64* %39, align 8
  %43 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 3
  %_30 = load i64, i64* %43, align 8
  %44 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 7
  %_31 = load i64, i64* %44, align 8
  %_29 = icmp uge i64 %_30, %_31
  br i1 %_29, label %bb15, label %bb14

bb14:                                             ; preds = %bb13
  br label %bb25

bb15:                                             ; preds = %bb13
  %45 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 3
  %_33 = load i64, i64* %45, align 8
  %46 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 7
  %_34 = load i64, i64* %46, align 8
  %found_char = sub i64 %_33, %_34
  %47 = bitcast %"std::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 0
  %_38.0 = load [0 x i8]*, [0 x i8]** %48, align 8, !nonnull !11
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 1
  %_38.1 = load i64, i64* %49, align 8
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %_38.0, [0 x i8]** %50, align 8, !noalias !99, !MPK-Unsafe !4
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %_38.1, i64* %51, align 8, !noalias !99, !MPK-Unsafe !4
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %53 = load [0 x i8]*, [0 x i8]** %52, align 8, !noalias !99, !nonnull !11, !MPK-Unsafe !4
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %55 = load i64, i64* %54, align 8, !noalias !99, !MPK-Unsafe !4
  %56 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %53, 0
  %57 = insertvalue { [0 x i8]*, i64 } %56, i64 %55, 1
  %_37.0 = extractvalue { [0 x i8]*, i64 } %57, 0
  %_37.1 = extractvalue { [0 x i8]*, i64 } %57, 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %58 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 3
  %_41 = load i64, i64* %58, align 8
  %59 = bitcast { i64, i64 }* %_39 to i64*
  store i64 %found_char, i64* %59, align 8
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_39, i32 0, i32 1
  store i64 %_41, i64* %60, align 8
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_39, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_39, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
; call core::slice::<impl [T]>::get
  %65 = call { i8*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hee00a66c2aa86079E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_37.0, i64 %_37.1, i64 %62, i64 %64)
  store { i8*, i64 } %65, { i8*, i64 }* %_35, align 8
  br label %bb17

bb17:                                             ; preds = %bb16
  %66 = bitcast { i8*, i64 }* %_35 to {}**
  %67 = load {}*, {}** %66, align 8
  %68 = icmp eq {}* %67, null
  %_42 = select i1 %68, i64 0, i64 1
  %69 = icmp eq i64 %_42, 1
  br i1 %69, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb24

bb19:                                             ; preds = %bb17
  %70 = bitcast { i8*, i64 }* %_35 to { [0 x i8]*, i64 }*
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %70, i32 0, i32 0
  %72 = load [0 x i8]*, [0 x i8]** %71, align 8, !nonnull !11
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %70, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 0
  store [0 x i8]* %72, [0 x i8]** %75, align 8
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 1
  store i64 %74, i64* %76, align 8
  %_50 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 11
  %_49.0 = bitcast [4 x i8]* %_50 to [0 x i8]*
  %77 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 7
  %_52 = load i64, i64* %77, align 8
  %78 = bitcast { i64, i64 }* %_51 to i64*
  store i64 0, i64* %78, align 8
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 1
  store i64 %_52, i64* %79, align 8
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %84 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h0fc72280721bc76dE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_49.0, i64 4, i64 %81, i64 %83, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc200 to %"std::panic::Location"*))
  %_48.0 = extractvalue { [0 x i8]*, i64 } %84, 0
  %_48.1 = extractvalue { [0 x i8]*, i64 } %84, 1
  br label %bb20

bb20:                                             ; preds = %bb19
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_47, i32 0, i32 0
  store [0 x i8]* %_48.0, [0 x i8]** %85, align 8
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_47, i32 0, i32 1
  store i64 %_48.1, i64* %86, align 8
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_44 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h5a0874503325093dE"({ [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %slice, { [0 x i8]*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %_47)
  br label %bb21

bb21:                                             ; preds = %bb20
  br i1 %_44, label %bb23, label %bb22

bb22:                                             ; preds = %bb21
  br label %bb24

bb23:                                             ; preds = %bb21
  %87 = getelementptr inbounds %"std::str::pattern::CharSearcher", %"std::str::pattern::CharSearcher"* %self, i32 0, i32 3
  %_55 = load i64, i64* %87, align 8
  %88 = bitcast { i64, i64 }* %_53 to i64*
  store i64 %found_char, i64* %88, align 8
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_53, i32 0, i32 1
  store i64 %_55, i64* %89, align 8
  %90 = bitcast %"std::option::Option<(usize, usize)>"* %0 to %"std::option::Option<(usize, usize)>::Some"*
  %91 = getelementptr inbounds %"std::option::Option<(usize, usize)>::Some", %"std::option::Option<(usize, usize)>::Some"* %90, i32 0, i32 1
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_53, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_53, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %91, i32 0, i32 0
  store i64 %93, i64* %96, align 8
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %91, i32 0, i32 1
  store i64 %95, i64* %97, align 8
  %98 = bitcast %"std::option::Option<(usize, usize)>"* %0 to i64*
  store i64 1, i64* %98, align 8
  br label %bb26

bb24:                                             ; preds = %bb22, %bb18
  br label %bb25

bb25:                                             ; preds = %bb14, %bb24
  br label %bb1

bb26:                                             ; preds = %bb23, %bb12
  br label %bb27

bb27:                                             ; preds = %bb26, %bb9
  ret void
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hca190abbc3d630cdE"(%"std::str::pattern::CharSearcher"* mpk_immut noalias readonly align 8 dereferenceable(48) %self) unnamed_addr #0 {
start:
  %0 = bitcast %"std::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %2 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !11
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1
  ret { [0 x i8]*, i64 } %6
}

; <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hafb586f3e80f4c52E"(%"std::str::Split<char>"* align 8 dereferenceable(72) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"std::str::Split<char>"* %self to %"core::str::iter::SplitInternal<char>"*
; call core::str::iter::SplitInternal<P>::next
  %0 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17hd2eb95b05998ccbaE"(%"core::str::iter::SplitInternal<char>"* align 8 dereferenceable(72) %_2)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal mpk_immut align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hbbc0166c40828820E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  %4 = bitcast { i8*, i8* }* %self to i8**
  %_6 = load i8*, i8** %4, align 8, !nonnull !11, !MPK-Unsafe !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h663abac54ec687f4E"(i8* mpk_immut nonnull %_6), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hc925ba59e5e66bb4E"(i8* %_5), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  store i64 1, i64* %2, align 8
  %5 = load i64, i64* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  br label %bb9

bb6:                                              ; preds = %bb4
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_11 = load i8*, i8** %7, align 8, !MPK-Unsafe !4
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h5131a45c264af9bdE"(i8* mpk_immut %_11), !MPK-Unsafe !4
  br label %bb7

bb7:                                              ; preds = %bb6
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9), !MPK-Unsafe !4
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb5, %bb8
  %8 = bitcast { i8*, i8* }* %self to i8**
  %_15 = load i8*, i8** %8, align 8, !nonnull !11, !MPK-Unsafe !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h663abac54ec687f4E"(i8* mpk_immut nonnull %_15), !MPK-Unsafe !4
  br label %bb10

bb10:                                             ; preds = %bb9
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_16 = load i8*, i8** %9, align 8, !MPK-Unsafe !4
  %_12 = icmp eq i8* %_14, %_16
  br i1 %_12, label %bb12, label %bb11

bb11:                                             ; preds = %bb10
  store i64 1, i64* %0, align 8
  %10 = load i64, i64* %0, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %bb3.i, label %bb2.i

bb2.i:                                            ; preds = %bb11
  %12 = bitcast { i8*, i8* }* %self to i8**
  %_12.i = load i8*, i8** %12, align 8, !nonnull !11
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h663abac54ec687f4E"(i8* mpk_immut nonnull %_12.i)
  %13 = bitcast { i8*, i8* }* %self to i8**
  %_16.i = load i8*, i8** %13, align 8, !nonnull !11, !MPK-Unsafe !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h663abac54ec687f4E"(i8* mpk_immut nonnull %_16.i), !MPK-Unsafe !4
; call core::ptr::mut_ptr::<impl *mut T>::offset
  %_14.i = call mpk_unsafe i8* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hb2019f51100aa509E"(i8* mpk_unsafe %_15.i, i64 1), !MPK-Unsafe !4
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call mpk_immut mpk_unsafe nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5c5c968be544278cE"(i8* mpk_unsafe %_14.i), !MPK-Unsafe !4
  %14 = bitcast { i8*, i8* }* %self to i8**
  store i8* %_13.i, i8** %14, align 8
  store i8* %old.i, i8** %1, align 8
  br label %"_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h1f79f17fe63dca92E.exit"

bb3.i:                                            ; preds = %bb11
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_6.i = load i8*, i8** %15, align 8
; call core::ptr::const_ptr::<impl *const T>::wrapping_offset
  %_4.i = call mpk_immut i8* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h44e0719983d1defcE"(i8* mpk_immut %_6.i, i64 -1)
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  store i8* %_4.i, i8** %16, align 8
  %17 = bitcast { i8*, i8* }* %self to i8**
  %_10.i = load i8*, i8** %17, align 8, !nonnull !11
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_9.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h663abac54ec687f4E"(i8* mpk_immut nonnull %_10.i)
  store i8* %_9.i, i8** %1, align 8
  br label %"_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h1f79f17fe63dca92E.exit"

"_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h1f79f17fe63dca92E.exit": ; preds = %bb3.i, %bb2.i
  %18 = load i8*, i8** %1, align 8
  br label %bb13

bb12:                                             ; preds = %bb10
  %19 = bitcast i8** %3 to {}**
  store {}* null, {}** %19, align 8, !MPK-Unsafe !4
  br label %bb14

bb13:                                             ; preds = %"_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h1f79f17fe63dca92E.exit"
  store i8* %18, i8** %3, align 8, !MPK-Unsafe !4
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  %20 = load i8*, i8** %3, align 8
  ret i8* %20
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h079dc7fbf7059b12E"({ i8*, i8* }* align 8 dereferenceable(16) %self, i8* mpk_immut noalias readonly align 1 dereferenceable(1) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8, !MPK-Unsafe !4
  %3 = alloca { i8*, i32 }, align 8
  %_30 = alloca i8*, align 8
  %_24 = alloca i8*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %4 = alloca { i64, i64 }, align 8
  %predicate = alloca i8*, align 8
  store i8* %0, i8** %predicate, align 8
  %5 = bitcast { i8*, i8* }* %self to i8**
  %start1 = load i8*, i8** %5, align 8, !nonnull !11
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_7 = invoke i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h663abac54ec687f4E"(i8* mpk_immut nonnull %start1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 1, i64* %1, align 8
  %6 = load i64, i64* %1, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %8 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_17 = load i8*, i8** %8, align 8, !MPK-Unsafe !4
  %_16 = ptrtoint i8* %_17 to i64
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_19 = invoke i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h663abac54ec687f4E"(i8* mpk_immut nonnull %start1)
          to label %bb7 unwind label %cleanup, !MPK-Unsafe !4

bb4:                                              ; preds = %bb2
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_11 = load i8*, i8** %9, align 8
  %_10 = ptrtoint i8* %_11 to i64
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_13 = invoke i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h663abac54ec687f4E"(i8* mpk_immut nonnull %start1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %_12 = ptrtoint i8* %_13 to i64
; invoke core::num::<impl usize>::wrapping_sub
  %10 = invoke i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h999568d552da1079E"(i64 %_10, i64 %_12)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store i64 %10, i64* %n, align 8
  br label %bb10

bb7:                                              ; preds = %bb3
  %_18 = ptrtoint i8* %_19 to i64
  %11 = sub nuw i64 %_16, %_18
  store i64 %11, i64* %2, align 8, !MPK-Unsafe !4
  %diff = load i64, i64* %2, align 8, !MPK-Unsafe !4
  br label %bb8

bb8:                                              ; preds = %bb7
  %12 = udiv exact i64 %diff, %6
  store i64 %12, i64* %n, align 8, !MPK-Unsafe !4
  br label %bb9

bb9:                                              ; preds = %bb8
  br label %bb10

bb10:                                             ; preds = %bb6, %bb9
  store i64 0, i64* %i, align 8
  br label %bb11

bb11:                                             ; preds = %bb19, %bb10
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %13 = invoke mpk_immut align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hbbc0166c40828820E"({ i8*, i8* }* align 8 dereferenceable(16) %self)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  store i8* %13, i8** %_24, align 8
  %14 = bitcast i8** %_24 to {}**
  %15 = load {}*, {}** %14, align 8
  %16 = icmp eq {}* %15, null
  %_26 = select i1 %16, i64 0, i64 1
  %17 = icmp eq i64 %_26, 1
  br i1 %17, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  %18 = bitcast { i64, i64 }* %4 to i64*
  store i64 0, i64* %18, align 8
  br label %bb20

bb14:                                             ; preds = %bb12
  %x = load i8*, i8** %_24, align 8, !nonnull !11
  store i8* %x, i8** %_30, align 8
  %19 = load i8*, i8** %_30, align 8, !nonnull !11
; invoke core::slice::memchr::memchr::{{closure}}
  %_28 = invoke zeroext i1 @"_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17hebd2cd7f45115ae2E"(i8** align 8 dereferenceable(8) %predicate, i8* mpk_immut noalias readonly align 1 dereferenceable(1) %19)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  br i1 %_28, label %bb17, label %bb16

bb16:                                             ; preds = %bb15
  %20 = load i64, i64* %i, align 8
  %_37.0 = add i64 %20, 1
  br label %bb19

bb17:                                             ; preds = %bb15
  %_34 = load i64, i64* %i, align 8, !MPK-Unsafe !4
  %_35 = load i64, i64* %n, align 8, !MPK-Unsafe !4
  %_33 = icmp ult i64 %_34, %_35
  call void @llvm.assume(i1 %_33), !MPK-Unsafe !4
  br label %bb18

bb18:                                             ; preds = %bb17
  %_36 = load i64, i64* %i, align 8
  %21 = bitcast { i64, i64 }* %4 to %"std::option::Option<usize>::Some"*
  %22 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %21, i32 0, i32 1
  store i64 %_36, i64* %22, align 8
  %23 = bitcast { i64, i64 }* %4 to i64*
  store i64 1, i64* %23, align 8
  br label %bb20

bb19:                                             ; preds = %bb16
  store i64 %_37.0, i64* %i, align 8
  br label %bb11

bb20:                                             ; preds = %bb18, %bb13
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0
  %25 = load i64, i64* %24, align 8, !range !22
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = insertvalue { i64, i64 } undef, i64 %25, 0
  %29 = insertvalue { i64, i64 } %28, i64 %27, 1
  ret { i64, i64 } %29

bb21:                                             ; preds = %cleanup
  br label %bb22

bb22:                                             ; preds = %bb21
  %30 = bitcast { i8*, i32 }* %3 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = insertvalue { i8*, i32 } undef, i8* %31, 0
  %35 = insertvalue { i8*, i32 } %34, i32 %33, 1
  resume { i8*, i32 } %35

cleanup:                                          ; preds = %bb14, %bb11, %bb5, %bb4, %bb3, %start
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  %38 = extractvalue { i8*, i32 } %36, 1
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %38, i32* %40, align 8
  br label %bb21
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::get
; Function Attrs: nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17hac03ddf3b553bbf4E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64 }* %self to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_6 = select i1 %2, i64 0, i64 1
  switch i64 %_6, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %start
; call std::process::abort
  call void @_ZN3std7process5abort17hf5ea6d4bc4cedb4fE()
  unreachable

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %a = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %_5.0 = bitcast { [0 x i8]*, i64 }* %a to {}*
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_5.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* bitcast ({ void ({ [0 x i8]*, i64 }*)*, i64, i64, i64 ({ [0 x i8]*, i64 }*)* }* @vtable.2 to [3 x i64]*), 1
  ret { {}*, [3 x i64]* } %4
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::take_box
; Function Attrs: nonlazybind uwtable
define internal { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17h88b845e064888980E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_4 = alloca { i8*, i64 }, align 8
  %data = alloca { {}*, [3 x i64]* }, align 8, !MPK-SmartPointer !3
  store i8 0, i8* %_14, align 1
; call core::option::Option<T>::take
  %1 = call { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$4take17h8a330ea2087114e9E"({ i8*, i64 }* align 8 dereferenceable(16) %self)
  store { i8*, i64 } %1, { i8*, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i8*, i64 }* %_4 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_6 = select i1 %4, i64 0, i64 1
  switch i64 %_6, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb2:                                              ; preds = %bb1
; call std::process::abort
  call void @_ZN3std7process5abort17hf5ea6d4bc4cedb4fE()
  unreachable

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64 }* %_4 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  %a.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !11
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  %a.1 = load i64, i64* %7, align 8
  store i64 4387985865706188285, i64* @METASAFE_TYPE_ID, align 8
  store i64 9147559743429524724, i64* @METASAFE_TYPE_ID, align 8, !noalias !102
; call alloc::alloc::exchange_malloc
  %8 = call i8* @_ZN5alloc5alloc15exchange_malloc17h1cc5817149deb76cE(i64 16, i64 8), !noalias !102
  %9 = bitcast i8* %8 to { [0 x i8]*, i64 }*
  store i64 0, i64* @METASAFE_TYPE_ID, align 8, !noalias !102
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  store [0 x i8]* %a.0, [0 x i8]** %10, align 8, !noalias !102
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  store i64 %a.1, i64* %11, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
  %12 = bitcast { [0 x i8]*, i64 }* %9 to {}*
  %13 = bitcast {}* %12 to i8*
  %_8.0 = bitcast i8* %13 to {}*, !MPK-SmartPointer !3
  store i8 1, i8* %_14, align 1
  %14 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0
  store {}* %_8.0, {}** %14, align 8
  %15 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1
  store [3 x i64]* bitcast ({ void ({ [0 x i8]*, i64 }*)*, i64, i64, i64 ({ [0 x i8]*, i64 }*)* }* @vtable.2 to [3 x i64]*), [3 x i64]** %15, align 8
  store i8 0, i8* %_14, align 1
  %16 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0
  %_13.0 = load {}*, {}** %16, align 8, !nonnull !11, !MPK-SmartPointer !3
  %17 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1
  %_13.1 = load [3 x i64]*, [3 x i64]** %17, align 8, !nonnull !11
  store i64 4387985865706188285, i64* @METASAFE_TYPE_ID, align 8
; invoke alloc::boxed::Box<T,A>::into_raw
  %18 = invoke { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h8a2038277c98f060E"({}* mpk_immut noalias nonnull align 1 %_13.0, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24) %_13.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_11.0 = extractvalue { {}*, [3 x i64]* } %18, 0
  %_11.1 = extractvalue { {}*, [3 x i64]* } %18, 1
  store i8 0, i8* %_14, align 1
  %19 = insertvalue { {}*, [3 x i64]* } undef, {}* %_11.0, 0
  %20 = insertvalue { {}*, [3 x i64]* } %19, [3 x i64]* %_11.1, 1
  ret { {}*, [3 x i64]* } %20

bb7:                                              ; preds = %cleanup
  %21 = load i8, i8* %_14, align 1, !range !5
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb9, label %bb8

bb8:                                              ; preds = %bb9, %bb7
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb9:                                              ; preds = %bb7
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17he94cfc3a4ca2a32bE({ {}*, [3 x i64]* }* mpk_unsafe %data) #14
  br label %bb8

cleanup:                                          ; preds = %bb5
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = extractvalue { i8*, i32 } %29, 1
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %31, i32* %33, align 8
  br label %bb7
}

; <alloc::collections::btree::map::BTreeMap<K,V> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN95_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6f7c269257b901b2E"(%"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_4 = alloca %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", align 8
  %_3 = alloca %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>", align 8
; call core::ptr::read
  call void @_ZN4core3ptr4read17hb27876c496405365E(%"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* noalias nocapture sret dereferenceable(24) %_4, %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* mpk_immut mpk_unsafe %self), !MPK-Unsafe !4
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::collections::btree::map::BTreeMap<K,V> as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN115_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h6283f53be42bc0bcE"(%"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* noalias nocapture sret dereferenceable(56) %_3, %"std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* noalias nocapture dereferenceable(24) %_4), !MPK-Unsafe !4
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::mem::drop
  call void @_ZN4core3mem4drop17h0bf1687fe04c972cE(%"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* noalias nocapture dereferenceable(56) %_3), !MPK-Unsafe !4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::collections::btree::map::IntoIter<K,V> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN95_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h92b4c7d6b1a5c70cE"(%"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* align 8 dereferenceable(56) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_27 = alloca i8, align 1
  %_26 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %parent = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_20 = alloca %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_19 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %node = alloca { i64, i64* }, align 8
  %front = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_12 = alloca %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_9 = alloca { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, align 8
  %guard = alloca i64*, align 8
  %pair = alloca { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }, align 8
  %_2 = alloca %"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>", align 8
  %1 = alloca {}, align 1
  store i8 0, i8* %_27, align 1
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; call <alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN112_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha327ca422ada72c2E"(%"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>"* noalias nocapture sret dereferenceable(48) %_2, %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* align 8 dereferenceable(56) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast %"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>"* %_2 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_4 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_4, 1
  br i1 %5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hdfc8b089247fb3e6E(%"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>"* mpk_unsafe %_2)
  br label %bb7

bb4:                                              ; preds = %bb2
  %6 = bitcast %"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>"* %_2 to %"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>::Some"*
  %7 = bitcast %"std::option::Option<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>::Some"* %6 to { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }*
  %8 = bitcast { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* %pair to i8*
  %9 = bitcast { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 48, i1 false)
  store i8 1, i8* %_27, align 1
  %10 = bitcast i64** %guard to %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"**
  store %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %self, %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"** %10, align 8
  %11 = bitcast { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* %_9 to i8*
  %12 = bitcast { [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* %pair to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 48, i1 false)
; invoke core::mem::drop
  invoke void @_ZN4core3mem4drop17h6ed8125703b788a3E({ [0 x i64], %"std::ffi::OsString", [0 x i64], %"std::option::Option<std::ffi::OsString>", [0 x i64] }* noalias nocapture dereferenceable(48) %_9)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_27, align 1
  %_11 = load i64*, i64** %guard, align 8, !nonnull !11
; invoke core::mem::forget
  invoke void @_ZN4core3mem6forget17h2ee503e9785972d4E(i64* align 8 dereferenceable(56) %_11)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_27, align 1
  br label %bb1

bb7:                                              ; preds = %bb3
  %_14 = bitcast %"std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>"* %self to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*
; call core::ptr::read
  call void @_ZN4core3ptr4read17hc31b192d5fea81d6E(%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(24) %_12, %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* mpk_immut mpk_unsafe %_14), !MPK-Unsafe !4
  br label %bb8

bb8:                                              ; preds = %bb7
  %13 = getelementptr inbounds %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_12, i32 0, i32 1
  %14 = load {}*, {}** %13, align 8, !MPK-Unsafe !4
  %15 = icmp eq {}* %14, null
  %_15 = select i1 %15, i64 0, i64 1
  %16 = icmp eq i64 %_15, 1
  br i1 %16, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  br label %bb19

bb10:                                             ; preds = %bb8
  %17 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_12 to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %18 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"* %17 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  %19 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %front to i8*
  %20 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false), !MPK-Unsafe !4
  %21 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_19 to i8*
  %22 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %front to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false), !MPK-Unsafe !4
; call alloc::collections::btree::node::Handle<Node,Type>::into_node
  %23 = call { i64, i64* } @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h2f076b47bed1596fE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_19), !MPK-Unsafe !4
  %_18.0 = extractvalue { i64, i64* } %23, 0
  %_18.1 = extractvalue { i64, i64* } %23, 1
  br label %bb11

bb11:                                             ; preds = %bb10
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>::forget_type
  %24 = call { i64, i64* } @"_ZN5alloc11collections5btree4node81NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$11forget_type17hfcc8340e47be90c1E"(i64 %_18.0, i64* mpk_immut nonnull %_18.1), !MPK-Unsafe !4
  store { i64, i64* } %24, { i64, i64* }* %node, align 8, !MPK-Unsafe !4
  br label %bb12

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb18, %bb12
  %25 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 0
  %_21.0 = load i64, i64* %25, align 8, !MPK-Unsafe !4
  %26 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 1
  %_21.1 = load i64*, i64** %26, align 8, !nonnull !11, !MPK-Unsafe !4
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::deallocate_and_ascend
  call void @"_ZN5alloc11collections5btree4node127NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$21deallocate_and_ascend17h4079bfe7baf266d6E"(%"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(24) %_20, i64 %_21.0, i64* mpk_immut mpk_unsafe nonnull %_21.1), !MPK-Unsafe !4
  br label %bb14

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_20, i32 0, i32 1
  %28 = load {}*, {}** %27, align 8, !MPK-Unsafe !4
  %29 = icmp eq {}* %28, null
  %_22 = select i1 %29, i64 0, i64 1
  %30 = icmp eq i64 %_22, 1
  br i1 %30, label %bb16, label %bb15

bb15:                                             ; preds = %bb14
  br label %bb19

bb16:                                             ; preds = %bb14
  %31 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_20 to %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %32 = bitcast %"std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %31 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*
  %33 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent to i8*
  %34 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false), !MPK-Unsafe !4
  %35 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_26 to i8*
  %36 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false), !MPK-Unsafe !4
; call alloc::collections::btree::node::Handle<Node,Type>::into_node
  %37 = call { i64, i64* } @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17hbae0866c3ee7c49fE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(24) %_26), !MPK-Unsafe !4
  %_25.0 = extractvalue { i64, i64* } %37, 0
  %_25.1 = extractvalue { i64, i64* } %37, 1
  br label %bb17

bb17:                                             ; preds = %bb16
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::forget_type
  %38 = call { i64, i64* } @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$11forget_type17h144b8b4505e325a2E"(i64 %_25.0, i64* mpk_immut nonnull %_25.1), !MPK-Unsafe !4
  %_24.0 = extractvalue { i64, i64* } %38, 0
  %_24.1 = extractvalue { i64, i64* } %38, 1
  br label %bb18

bb18:                                             ; preds = %bb17
  %39 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 0
  store i64 %_24.0, i64* %39, align 8, !MPK-Unsafe !4
  %40 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 1
  store i64* %_24.1, i64** %40, align 8, !MPK-Unsafe !4
  br label %bb13

bb19:                                             ; preds = %bb15, %bb9
  ret void

bb20:                                             ; preds = %bb21, %bb22
  %41 = bitcast { i8*, i32 }* %0 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = insertvalue { i8*, i32 } undef, i8* %42, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  resume { i8*, i32 } %46

bb21:                                             ; preds = %bb22
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h5212006b1c28ee73E(i64** mpk_unsafe %guard) #14
  br label %bb20

bb22:                                             ; preds = %cleanup
  %47 = load i8, i8* %_27, align 1, !range !5
  %48 = trunc i8 %47 to i1
  br i1 %48, label %bb21, label %bb20

cleanup:                                          ; preds = %bb5, %bb4
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  %51 = extractvalue { i8*, i32 } %49, 1
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %50, i8** %52, align 8
  %53 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %51, i32* %53, align 8
  br label %bb22
}

; <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hb71da7d075c6527eE"({}* nonnull align 1 %reference.0, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24) %reference.1) unnamed_addr #0 {
start:
  %_4 = alloca %"std::marker::PhantomData<dyn std::any::Any + std::marker::Send>", align 1
  %0 = alloca { i8*, i64* }, align 8
  %1 = bitcast { i8*, i64* }* %0 to { {}*, [3 x i64]* }*
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 0
  store {}* %reference.0, {}** %2, align 8, !MPK-Unsafe !4
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 1
  store [3 x i64]* %reference.1, [3 x i64]** %3, align 8, !MPK-Unsafe !4
  %4 = bitcast { i8*, i64* }* %0 to %"std::marker::PhantomData<dyn std::any::Any + std::marker::Send>"*
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8, !nonnull !11, !MPK-Unsafe !4
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 1
  %8 = load i64*, i64** %7, align 8, !nonnull !11, !MPK-Unsafe !4
  %9 = insertvalue { i8*, i64* } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64* } %9, i64* %8, 1
  ret { i8*, i64* } %10
}

; <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h154d1ffed99fc432E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %slice.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %slice.1, 1
  ret { [0 x i8]*, i64 } %2
}

; <std::ffi::os_str::OsString as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::OsStr"*, i64 } @"_ZN98_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17h5699c6f683bdeff1E"(%"std::ffi::OsString"* mpk_immut noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
; call <std::ffi::os_str::OsString as core::ops::deref::Deref>::deref
  %0 = call { %"std::ffi::OsStr"*, i64 } @"_ZN70_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0da697d6c230784fE"(%"std::ffi::OsString"* mpk_immut noalias readonly align 8 dereferenceable(24) %self)
  %1 = extractvalue { %"std::ffi::OsStr"*, i64 } %0, 0
  %2 = extractvalue { %"std::ffi::OsStr"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { %"std::ffi::OsStr"*, i64 } undef, %"std::ffi::OsStr"* %1, 0
  %4 = insertvalue { %"std::ffi::OsStr"*, i64 } %3, i64 %2, 1
  ret { %"std::ffi::OsStr"*, i64 } %4
}

; build_script_build::main
; Function Attrs: nonlazybind uwtable
define internal void @_ZN18build_script_build4main17h70667a4c4c7ec06fE() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_193 = alloca %"std::fmt::Arguments", align 8
  %_187 = alloca i8, align 1
  %_179 = alloca %"std::fmt::Arguments", align 8
  %_170 = alloca %"std::fmt::Arguments", align 8
  %_162 = alloca %"std::fmt::Arguments", align 8
  %_157 = alloca i8, align 1
  %_150 = alloca %"std::fmt::Arguments", align 8
  %_145 = alloca i8, align 1
  %_138 = alloca %"std::fmt::Arguments", align 8
  %_132 = alloca i8, align 1
  %_131 = alloca i8, align 1
  %_124 = alloca %"std::fmt::Arguments", align 8
  %_119 = alloca i8, align 1
  %_112 = alloca %"std::fmt::Arguments", align 8
  %_107 = alloca i8, align 1
  %_100 = alloca %"std::fmt::Arguments", align 8
  %_95 = alloca i8, align 1
  %_88 = alloca %"std::fmt::Arguments", align 8
  %_79 = alloca %"std::fmt::Arguments", align 8
  %_71 = alloca %"std::fmt::Arguments", align 8
  %_62 = alloca %"std::fmt::Arguments", align 8
  %_53 = alloca %"std::fmt::Arguments", align 8
  %_44 = alloca %"std::fmt::Arguments", align 8
  %_40 = alloca i8, align 1
  %_38 = alloca { i32, i32 }, align 4
  %_31 = alloca %"std::fmt::Arguments", align 8
  %_29 = alloca %"std::result::Result<std::string::String, std::env::VarError>", align 8
  %_26 = alloca %"std::result::Result<std::string::String, std::env::VarError>", align 8
  %_23 = alloca %"std::result::Result<std::string::String, std::env::VarError>", align 8
  %_20 = alloca %"std::result::Result<std::string::String, std::env::VarError>", align 8
  %_17 = alloca %"std::result::Result<std::string::String, std::env::VarError>", align 8
  %_2 = alloca %"std::fmt::Arguments", align 8
  %1 = alloca {}, align 1
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_2, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc2 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb1

bb1:                                              ; preds = %start
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
; call build_script_build::rustc_minor_nightly
  %2 = call { i32, i8 } @_ZN18build_script_build19rustc_minor_nightly17ha172efffcdf6644fE()
  %_12.0 = extractvalue { i32, i8 } %2, 0
  %_12.1 = extractvalue { i32, i8 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::option::Option<T>::expect
  %3 = call { i32, i8 } @"_ZN4core6option15Option$LT$T$GT$6expect17h3c6b290800111044E"(i32 %_12.0, i8 %_12.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [27 x i8] }>* @alloc201 to [0 x i8]*), i64 27, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc203 to %"std::panic::Location"*))
  %_11.0 = extractvalue { i32, i8 } %3, 0
  %4 = extractvalue { i32, i8 } %3, 1
  %_11.1 = trunc i8 %4 to i1
  br label %bb4

bb4:                                              ; preds = %bb3
; call std::env::var
  call void @_ZN3std3env3var17h2642a6f9a8f4a38fE(%"std::result::Result<std::string::String, std::env::VarError>"* noalias nocapture sret dereferenceable(32) %_17, [0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [30 x i8] }>* @alloc204 to [0 x i8]*), i64 30)
  br label %bb5

bb5:                                              ; preds = %bb4
; invoke core::result::Result<T,E>::is_ok
  %rustc_dep_of_std = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hc28740ea5cb02f24E"(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_immut noalias readonly align 8 dereferenceable(32) %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h5ab18b5d7132d8deE(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_unsafe %_17)
  br label %bb7

bb7:                                              ; preds = %bb6
; call std::env::var
  call void @_ZN3std3env3var17h2642a6f9a8f4a38fE(%"std::result::Result<std::string::String, std::env::VarError>"* noalias nocapture sret dereferenceable(32) %_20, [0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [19 x i8] }>* @alloc205 to [0 x i8]*), i64 19)
  br label %bb8

bb8:                                              ; preds = %bb7
; invoke core::result::Result<T,E>::is_ok
  %align_cargo_feature = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hc28740ea5cb02f24E"(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_immut noalias readonly align 8 dereferenceable(32) %_20)
          to label %bb9 unwind label %cleanup1

bb9:                                              ; preds = %bb8
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h5ab18b5d7132d8deE(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_unsafe %_20)
  br label %bb10

bb10:                                             ; preds = %bb9
; call std::env::var
  call void @_ZN3std3env3var17h2642a6f9a8f4a38fE(%"std::result::Result<std::string::String, std::env::VarError>"* noalias nocapture sret dereferenceable(32) %_23, [0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [29 x i8] }>* @alloc206 to [0 x i8]*), i64 29)
  br label %bb11

bb11:                                             ; preds = %bb10
; invoke core::result::Result<T,E>::is_ok
  %const_extern_fn_cargo_feature = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hc28740ea5cb02f24E"(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_immut noalias readonly align 8 dereferenceable(32) %_23)
          to label %bb12 unwind label %cleanup2

bb12:                                             ; preds = %bb11
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h5ab18b5d7132d8deE(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_unsafe %_23)
  br label %bb13

bb13:                                             ; preds = %bb12
; call std::env::var
  call void @_ZN3std3env3var17h2642a6f9a8f4a38fE(%"std::result::Result<std::string::String, std::env::VarError>"* noalias nocapture sret dereferenceable(32) %_26, [0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [7 x i8] }>* @alloc207 to [0 x i8]*), i64 7)
  br label %bb14

bb14:                                             ; preds = %bb13
; invoke core::result::Result<T,E>::is_ok
  %libc_ci = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hc28740ea5cb02f24E"(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_immut noalias readonly align 8 dereferenceable(32) %_26)
          to label %bb15 unwind label %cleanup3

bb15:                                             ; preds = %bb14
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h5ab18b5d7132d8deE(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_unsafe %_26)
  br label %bb16

bb16:                                             ; preds = %bb15
; call std::env::var
  call void @_ZN3std3env3var17h2642a6f9a8f4a38fE(%"std::result::Result<std::string::String, std::env::VarError>"* noalias nocapture sret dereferenceable(32) %_29, [0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [21 x i8] }>* @alloc208 to [0 x i8]*), i64 21)
  br label %bb17

bb17:                                             ; preds = %bb16
; invoke core::result::Result<T,E>::is_ok
  %_27 = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hc28740ea5cb02f24E"(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_immut noalias readonly align 8 dereferenceable(32) %_29)
          to label %bb18 unwind label %cleanup4

bb18:                                             ; preds = %bb17
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h5ab18b5d7132d8deE(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_unsafe %_29)
  br label %bb19

bb19:                                             ; preds = %bb18
  br i1 %_27, label %bb21, label %bb20

bb20:                                             ; preds = %bb19
  br label %bb24

bb21:                                             ; preds = %bb19
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_31, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc14 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb22

bb22:                                             ; preds = %bb21
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_31)
  br label %bb23

bb23:                                             ; preds = %bb22
  br label %bb24

bb24:                                             ; preds = %bb20, %bb23
; call build_script_build::which_freebsd
  %5 = call { i32, i32 } @_ZN18build_script_build13which_freebsd17h4ad10e5dd6a79709E()
  store { i32, i32 } %5, { i32, i32 }* %_38, align 4
  br label %bb25

bb25:                                             ; preds = %bb24
  %6 = bitcast { i32, i32 }* %_38 to i32*
  %7 = load i32, i32* %6, align 4, !range !80
  %_39 = zext i32 %7 to i64
  switch i64 %_39, label %bb27 [
    i64 0, label %bb52
    i64 1, label %bb26
  ]

bb26:                                             ; preds = %bb25
  %8 = bitcast { i32, i32 }* %_38 to %"std::option::Option<i32>::Some"*
  %9 = getelementptr inbounds %"std::option::Option<i32>::Some", %"std::option::Option<i32>::Some"* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %bb52 [
    i32 10, label %bb28
    i32 11, label %bb37
    i32 12, label %bb42
    i32 13, label %bb47
  ]

bb27:                                             ; preds = %bb25
  unreachable

bb28:                                             ; preds = %bb26
  br i1 %libc_ci, label %bb29, label %bb31

bb29:                                             ; preds = %bb31, %bb28
  store i8 1, i8* %_40, align 1
  br label %bb32

bb30:                                             ; preds = %bb31
  store i8 0, i8* %_40, align 1
  br label %bb32

bb31:                                             ; preds = %bb28
  br i1 %rustc_dep_of_std, label %bb29, label %bb30

bb32:                                             ; preds = %bb30, %bb29
  %11 = load i8, i8* %_40, align 1, !range !5
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb33, label %bb34

bb33:                                             ; preds = %bb32
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_44, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc19 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb35

bb34:                                             ; preds = %bb32
  br label %bb52

bb35:                                             ; preds = %bb33
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_44)
  br label %bb36

bb36:                                             ; preds = %bb35
  br label %bb55

bb37:                                             ; preds = %bb26
  br i1 %libc_ci, label %bb38, label %bb39

bb38:                                             ; preds = %bb37
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_53, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc39 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb40

bb39:                                             ; preds = %bb37
  br label %bb52

bb40:                                             ; preds = %bb38
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_53)
  br label %bb41

bb41:                                             ; preds = %bb40
  br label %bb55

bb42:                                             ; preds = %bb26
  br i1 %libc_ci, label %bb43, label %bb44

bb43:                                             ; preds = %bb42
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_62, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc29 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb45

bb44:                                             ; preds = %bb42
  br label %bb52

bb45:                                             ; preds = %bb43
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_62)
  br label %bb46

bb46:                                             ; preds = %bb45
  br label %bb55

bb47:                                             ; preds = %bb26
  br i1 %libc_ci, label %bb48, label %bb49

bb48:                                             ; preds = %bb47
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_71, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc34 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb50

bb49:                                             ; preds = %bb47
  br label %bb52

bb50:                                             ; preds = %bb48
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_71)
  br label %bb51

bb51:                                             ; preds = %bb50
  br label %bb55

bb52:                                             ; preds = %bb34, %bb39, %bb44, %bb49, %bb26, %bb25
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_79, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc39 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb53

bb53:                                             ; preds = %bb52
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_79)
  br label %bb54

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %bb54, %bb36, %bb41, %bb46, %bb51
  br i1 %libc_ci, label %bb57, label %bb56

bb56:                                             ; preds = %bb55
  br label %bb60

bb57:                                             ; preds = %bb55
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_88, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc44 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb58

bb58:                                             ; preds = %bb57
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_88)
  br label %bb59

bb59:                                             ; preds = %bb58
  br label %bb60

bb60:                                             ; preds = %bb56, %bb59
  %_96 = icmp uge i32 %_11.0, 15
  br i1 %_96, label %bb61, label %bb63

bb61:                                             ; preds = %bb63, %bb60
  store i8 1, i8* %_95, align 1
  br label %bb64

bb62:                                             ; preds = %bb63
  store i8 0, i8* %_95, align 1
  br label %bb64

bb63:                                             ; preds = %bb60
  br i1 %rustc_dep_of_std, label %bb61, label %bb62

bb64:                                             ; preds = %bb62, %bb61
  %13 = load i8, i8* %_95, align 1, !range !5
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb66, label %bb65

bb65:                                             ; preds = %bb64
  br label %bb69

bb66:                                             ; preds = %bb64
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_100, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc49 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb67

bb67:                                             ; preds = %bb66
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_100)
  br label %bb68

bb68:                                             ; preds = %bb67
  br label %bb69

bb69:                                             ; preds = %bb65, %bb68
  %_108 = icmp uge i32 %_11.0, 19
  br i1 %_108, label %bb70, label %bb72

bb70:                                             ; preds = %bb72, %bb69
  store i8 1, i8* %_107, align 1
  br label %bb73

bb71:                                             ; preds = %bb72
  store i8 0, i8* %_107, align 1
  br label %bb73

bb72:                                             ; preds = %bb69
  br i1 %rustc_dep_of_std, label %bb70, label %bb71

bb73:                                             ; preds = %bb71, %bb70
  %15 = load i8, i8* %_107, align 1, !range !5
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb75, label %bb74

bb74:                                             ; preds = %bb73
  br label %bb78

bb75:                                             ; preds = %bb73
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_112, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc54 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb76

bb76:                                             ; preds = %bb75
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_112)
  br label %bb77

bb77:                                             ; preds = %bb76
  br label %bb78

bb78:                                             ; preds = %bb74, %bb77
  %_120 = icmp uge i32 %_11.0, 24
  br i1 %_120, label %bb79, label %bb81

bb79:                                             ; preds = %bb81, %bb78
  store i8 1, i8* %_119, align 1
  br label %bb82

bb80:                                             ; preds = %bb81
  store i8 0, i8* %_119, align 1
  br label %bb82

bb81:                                             ; preds = %bb78
  br i1 %rustc_dep_of_std, label %bb79, label %bb80

bb82:                                             ; preds = %bb80, %bb79
  %17 = load i8, i8* %_119, align 1, !range !5
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb84, label %bb83

bb83:                                             ; preds = %bb82
  br label %bb87

bb84:                                             ; preds = %bb82
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_124, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc59 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb85

bb85:                                             ; preds = %bb84
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_124)
  br label %bb86

bb86:                                             ; preds = %bb85
  br label %bb87

bb87:                                             ; preds = %bb83, %bb86
  %_133 = icmp uge i32 %_11.0, 25
  br i1 %_133, label %bb92, label %bb94

bb88:                                             ; preds = %bb90, %bb95
  store i8 1, i8* %_131, align 1
  br label %bb91

bb89:                                             ; preds = %bb90
  store i8 0, i8* %_131, align 1
  br label %bb91

bb90:                                             ; preds = %bb95
  br i1 %align_cargo_feature, label %bb88, label %bb89

bb91:                                             ; preds = %bb89, %bb88
  %19 = load i8, i8* %_131, align 1, !range !5
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb97, label %bb96

bb92:                                             ; preds = %bb94, %bb87
  store i8 1, i8* %_132, align 1
  br label %bb95

bb93:                                             ; preds = %bb94
  store i8 0, i8* %_132, align 1
  br label %bb95

bb94:                                             ; preds = %bb87
  br i1 %rustc_dep_of_std, label %bb92, label %bb93

bb95:                                             ; preds = %bb93, %bb92
  %21 = load i8, i8* %_132, align 1, !range !5
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb88, label %bb90

bb96:                                             ; preds = %bb91
  br label %bb100

bb97:                                             ; preds = %bb91
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_138, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc64 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb98

bb98:                                             ; preds = %bb97
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_138)
  br label %bb99

bb99:                                             ; preds = %bb98
  br label %bb100

bb100:                                            ; preds = %bb96, %bb99
  %_146 = icmp uge i32 %_11.0, 30
  br i1 %_146, label %bb101, label %bb103

bb101:                                            ; preds = %bb103, %bb100
  store i8 1, i8* %_145, align 1
  br label %bb104

bb102:                                            ; preds = %bb103
  store i8 0, i8* %_145, align 1
  br label %bb104

bb103:                                            ; preds = %bb100
  br i1 %rustc_dep_of_std, label %bb101, label %bb102

bb104:                                            ; preds = %bb102, %bb101
  %23 = load i8, i8* %_145, align 1, !range !5
  %24 = trunc i8 %23 to i1
  br i1 %24, label %bb106, label %bb105

bb105:                                            ; preds = %bb104
  br label %bb109

bb106:                                            ; preds = %bb104
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_150, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc69 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb107

bb107:                                            ; preds = %bb106
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_150)
  br label %bb108

bb108:                                            ; preds = %bb107
  br label %bb109

bb109:                                            ; preds = %bb105, %bb108
  %_158 = icmp uge i32 %_11.0, 33
  br i1 %_158, label %bb110, label %bb112

bb110:                                            ; preds = %bb112, %bb109
  store i8 1, i8* %_157, align 1
  br label %bb113

bb111:                                            ; preds = %bb112
  store i8 0, i8* %_157, align 1
  br label %bb113

bb112:                                            ; preds = %bb109
  br i1 %rustc_dep_of_std, label %bb110, label %bb111

bb113:                                            ; preds = %bb111, %bb110
  %25 = load i8, i8* %_157, align 1, !range !5
  %26 = trunc i8 %25 to i1
  br i1 %26, label %bb115, label %bb114

bb114:                                            ; preds = %bb113
  br label %bb120

bb115:                                            ; preds = %bb113
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_162, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc74 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb116

bb116:                                            ; preds = %bb115
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_162)
  br label %bb117

bb117:                                            ; preds = %bb116
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_170, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc79 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb118

bb118:                                            ; preds = %bb117
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_170)
  br label %bb119

bb119:                                            ; preds = %bb118
  br label %bb120

bb120:                                            ; preds = %bb114, %bb119
  br i1 %rustc_dep_of_std, label %bb122, label %bb121

bb121:                                            ; preds = %bb120
  br label %bb125

bb122:                                            ; preds = %bb120
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_179, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc84 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb123

bb123:                                            ; preds = %bb122
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_179)
  br label %bb124

bb124:                                            ; preds = %bb123
  br label %bb125

bb125:                                            ; preds = %bb121, %bb124
  br i1 %const_extern_fn_cargo_feature, label %bb127, label %bb126

bb126:                                            ; preds = %bb125
  br label %bb136

bb127:                                            ; preds = %bb125
  %_188 = xor i1 %_11.1, true
  br i1 %_188, label %bb128, label %bb130

bb128:                                            ; preds = %bb130, %bb127
  store i8 1, i8* %_187, align 1
  br label %bb131

bb129:                                            ; preds = %bb130
  store i8 0, i8* %_187, align 1
  br label %bb131

bb130:                                            ; preds = %bb127
  %_190 = icmp ult i32 %_11.0, 40
  br i1 %_190, label %bb128, label %bb129

bb131:                                            ; preds = %bb129, %bb128
  %27 = load i8, i8* %_187, align 1, !range !5
  %28 = trunc i8 %27 to i1
  br i1 %28, label %bb133, label %bb132

bb132:                                            ; preds = %bb131
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha97d3258f80eed53E(%"std::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_193, [0 x { [0 x i8]*, i64 }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc89 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* mpk_immut noalias nonnull readonly align 8 bitcast (<{ [0 x i8] }>* @alloc91 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb134

bb133:                                            ; preds = %bb131
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17h2c2e27bf65c0b307E([0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [51 x i8] }>* @alloc209 to [0 x i8]*), i64 51, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc211 to %"std::panic::Location"*))
  unreachable

bb134:                                            ; preds = %bb132
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48) %_193)
  br label %bb135

bb135:                                            ; preds = %bb134
  br label %bb136

bb136:                                            ; preds = %bb126, %bb135
  ret void

bb137:                                            ; preds = %cleanup4
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h5ab18b5d7132d8deE(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_unsafe %_29) #14
  br label %bb142

bb138:                                            ; preds = %cleanup3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h5ab18b5d7132d8deE(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_unsafe %_26) #14
  br label %bb142

bb139:                                            ; preds = %cleanup2
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h5ab18b5d7132d8deE(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_unsafe %_23) #14
  br label %bb142

bb140:                                            ; preds = %cleanup1
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h5ab18b5d7132d8deE(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_unsafe %_20) #14
  br label %bb142

bb141:                                            ; preds = %cleanup
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h5ab18b5d7132d8deE(%"std::result::Result<std::string::String, std::env::VarError>"* mpk_unsafe %_17) #14
  br label %bb142

bb142:                                            ; preds = %bb137, %bb138, %bb139, %bb140, %bb141
  %29 = bitcast { i8*, i32 }* %0 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

cleanup:                                          ; preds = %bb5
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  %37 = extractvalue { i8*, i32 } %35, 1
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %37, i32* %39, align 8
  br label %bb141

cleanup1:                                         ; preds = %bb8
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  %42 = extractvalue { i8*, i32 } %40, 1
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %42, i32* %44, align 8
  br label %bb140

cleanup2:                                         ; preds = %bb11
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  %47 = extractvalue { i8*, i32 } %45, 1
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %46, i8** %48, align 8
  %49 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %47, i32* %49, align 8
  br label %bb139

cleanup3:                                         ; preds = %bb14
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  %52 = extractvalue { i8*, i32 } %50, 1
  %53 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %51, i8** %53, align 8
  %54 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %52, i32* %54, align 8
  br label %bb138

cleanup4:                                         ; preds = %bb17
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  %57 = extractvalue { i8*, i32 } %55, 1
  %58 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %56, i8** %58, align 8
  %59 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %57, i32* %59, align 8
  br label %bb137
}

; build_script_build::rustc_minor_nightly
; Function Attrs: nonlazybind uwtable
define internal { i32, i8 } @_ZN18build_script_build19rustc_minor_nightly17ha172efffcdf6644fE() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_59 = alloca i8, align 1
  %_55 = alloca { i32, i8 }, align 4
  %_48 = alloca %"std::result::Result<u32, std::num::ParseIntError>", align 4
  %_47 = alloca { i32, i32 }, align 4
  %_45 = alloca %"[closure@/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.106/build.rs:116:14: 116:72]", align 1
  %_38 = alloca { i8*, i64 }, align 8
  %_35 = alloca %"std::str::Split<char>", align 8
  %minor = alloca { i8*, i64 }, align 8
  %_28 = alloca { i8*, i64 }, align 8
  %pieces = alloca %"std::str::Split<char>", align 8
  %_17 = alloca %"std::result::Result<&str, std::str::Utf8Error>", align 8
  %_16 = alloca { i8*, i64 }, align 8
  %e1 = alloca %"std::process::Output", align 8
  %_12 = alloca %"std::ffi::OsString", align 8
  %_11 = alloca %"std::process::Command", align 8
  %_7 = alloca %"std::result::Result<std::process::Output, std::io::Error>", align 8
  %_6 = alloca %"std::option::Option<std::process::Output>", align 8
  %output = alloca %"std::process::Output", align 8, !MPK-SmartPointer !3
  %e = alloca %"std::ffi::OsString", align 8
  %_2 = alloca %"std::option::Option<std::ffi::OsString>", align 8
  %rustc = alloca %"std::ffi::OsString", align 8
  %2 = alloca { i32, i8 }, align 4
  store i8 0, i8* %_59, align 1
; call std::env::var_os
  call void @_ZN3std3env6var_os17h113e58876ab98543E(%"std::option::Option<std::ffi::OsString>"* noalias nocapture sret dereferenceable(24) %_2, [0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [5 x i8] }>* @alloc212 to [0 x i8]*), i64 5)
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast %"std::option::Option<std::ffi::OsString>"* %_2 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_3 = select i1 %5, i64 0, i64 1
  switch i64 %_3, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb2:                                              ; preds = %bb1
  %6 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 1
  store i8 2, i8* %6, align 4
  br label %bb48

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %7 = bitcast %"std::option::Option<std::ffi::OsString>"* %_2 to %"std::option::Option<std::ffi::OsString>::Some"*, !MPK-SmartPointer !3
  %8 = bitcast %"std::option::Option<std::ffi::OsString>::Some"* %7 to %"std::ffi::OsString"*, !MPK-SmartPointer !3
  %9 = bitcast %"std::ffi::OsString"* %e to i8*
  %10 = bitcast %"std::ffi::OsString"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  store i8 1, i8* %_59, align 1
  %11 = bitcast %"std::ffi::OsString"* %rustc to i8*
  %12 = bitcast %"std::ffi::OsString"* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  store i8 0, i8* %_59, align 1
  %13 = bitcast %"std::ffi::OsString"* %_12 to i8*
  %14 = bitcast %"std::ffi::OsString"* %rustc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
; invoke std::process::Command::new
  invoke void @_ZN3std7process7Command3new17h54d8e050dff9d886E(%"std::process::Command"* noalias nocapture sret dereferenceable(184) %_11, %"std::ffi::OsString"* noalias nocapture dereferenceable(24) %_12)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke std::process::Command::arg
  %_9 = invoke align 8 dereferenceable(184) %"std::process::Command"* @_ZN3std7process7Command3arg17hc34f3aafdf5e38bfE(%"std::process::Command"* align 8 dereferenceable(184) %_11, [0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [9 x i8] }>* @alloc213 to [0 x i8]*), i64 9)
          to label %bb6 unwind label %cleanup2

bb6:                                              ; preds = %bb5
; invoke std::process::Command::output
  invoke void @_ZN3std7process7Command6output17h69ff4fec85082880E(%"std::result::Result<std::process::Output, std::io::Error>"* noalias nocapture sret dereferenceable(64) %_7, %"std::process::Command"* align 8 dereferenceable(184) %_9)
          to label %bb7 unwind label %cleanup2

bb7:                                              ; preds = %bb6
; invoke core::result::Result<T,E>::ok
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h7e8f17daf18c0399E"(%"std::option::Option<std::process::Output>"* noalias nocapture sret dereferenceable(56) %_6, %"std::result::Result<std::process::Output, std::io::Error>"* noalias nocapture dereferenceable(64) %_7)
          to label %bb8 unwind label %cleanup2

bb8:                                              ; preds = %bb7
  %15 = bitcast %"std::option::Option<std::process::Output>"* %_6 to {}**
  %16 = load {}*, {}** %15, align 8
  %17 = icmp eq {}* %16, null
  %_13 = select i1 %17, i64 0, i64 1
  switch i64 %_13, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ]

bb9:                                              ; preds = %bb8
  %18 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 1
  store i8 2, i8* %18, align 4
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17h36ecb83222f60ff1E(%"std::process::Command"* mpk_unsafe %_11)
          to label %bb46 unwind label %cleanup

bb10:                                             ; preds = %bb8
  unreachable

bb11:                                             ; preds = %bb8
  %19 = bitcast %"std::option::Option<std::process::Output>"* %_6 to %"std::option::Option<std::process::Output>::Some"*, !MPK-SmartPointer !3
  %20 = bitcast %"std::option::Option<std::process::Output>::Some"* %19 to %"std::process::Output"*, !MPK-SmartPointer !3
  %21 = bitcast %"std::process::Output"* %e1 to i8*
  %22 = bitcast %"std::process::Output"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 56, i1 false)
  %23 = bitcast %"std::process::Output"* %output to i8*
  %24 = bitcast %"std::process::Output"* %e1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 56, i1 false)
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17h36ecb83222f60ff1E(%"std::process::Command"* mpk_unsafe %_11)
          to label %bb12 unwind label %cleanup3

bb12:                                             ; preds = %bb11
  %_21 = bitcast %"std::process::Output"* %output to %"std::vec::Vec<u8>"*, !MPK-SmartPointer !3
; invoke <alloc::vec::Vec<T> as core::ops::deref::Deref>::deref
  %25 = invoke { [0 x i8]*, i64 } @"_ZN68_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hfe00dc9b466b7d4dE"(%"std::vec::Vec<u8>"* mpk_immut noalias readonly align 8 dereferenceable(24) %_21)
          to label %bb13 unwind label %cleanup3

bb13:                                             ; preds = %bb12
  %_19.0 = extractvalue { [0 x i8]*, i64 } %25, 0
  %_19.1 = extractvalue { [0 x i8]*, i64 } %25, 1
; invoke core::str::converts::from_utf8
  invoke void @_ZN4core3str8converts9from_utf817h5fef343fb410e7cdE(%"std::result::Result<&str, std::str::Utf8Error>"* noalias nocapture sret dereferenceable(24) %_17, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %_19.0, i64 %_19.1)
          to label %bb14 unwind label %cleanup3

bb14:                                             ; preds = %bb13
; invoke core::result::Result<T,E>::ok
  %26 = invoke { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h570874008eb5a21bE"(%"std::result::Result<&str, std::str::Utf8Error>"* noalias nocapture dereferenceable(24) %_17)
          to label %bb15 unwind label %cleanup3

bb15:                                             ; preds = %bb14
  store { i8*, i64 } %26, { i8*, i64 }* %_16, align 8
  %27 = bitcast { i8*, i64 }* %_16 to {}**
  %28 = load {}*, {}** %27, align 8
  %29 = icmp eq {}* %28, null
  %_22 = select i1 %29, i64 0, i64 1
  switch i64 %_22, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ]

bb16:                                             ; preds = %bb15
  %30 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 1
  store i8 2, i8* %30, align 4
  br label %bb45

bb17:                                             ; preds = %bb15
  unreachable

bb18:                                             ; preds = %bb15
  %31 = bitcast { i8*, i64 }* %_16 to { [0 x i8]*, i64 }*
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 0
  %e.0 = load [0 x i8]*, [0 x i8]** %32, align 8, !nonnull !11
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 1
  %e.1 = load i64, i64* %33, align 8
; invoke core::str::<impl str>::split
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h17c260f0a3fde4a5E"(%"std::str::Split<char>"* noalias nocapture sret dereferenceable(72) %pieces, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %e.0, i64 %e.1, i32 46)
          to label %bb19 unwind label %cleanup3

bb19:                                             ; preds = %bb18
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %34 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hafb586f3e80f4c52E"(%"std::str::Split<char>"* align 8 dereferenceable(72) %pieces)
          to label %bb20 unwind label %cleanup3

bb20:                                             ; preds = %bb19
  store { i8*, i64 } %34, { i8*, i64 }* %_28, align 8
; invoke <core::option::Option<T> as core::cmp::PartialEq>::ne
  %_26 = invoke zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2ne17h3cd389c9ff1a55feE"({ i8*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) %_28, { i8*, i64 }* mpk_immut noalias readonly align 8 dereferenceable(16) bitcast (<{ i8*, [8 x i8] }>* @alloc101 to { i8*, i64 }*))
          to label %bb21 unwind label %cleanup3

bb21:                                             ; preds = %bb20
  br i1 %_26, label %bb23, label %bb22

bb22:                                             ; preds = %bb21
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %35 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hafb586f3e80f4c52E"(%"std::str::Split<char>"* align 8 dereferenceable(72) %pieces)
          to label %bb24 unwind label %cleanup3

bb23:                                             ; preds = %bb21
  %36 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 1
  store i8 2, i8* %36, align 4
  br label %bb44

bb24:                                             ; preds = %bb22
  store { i8*, i64 } %35, { i8*, i64 }* %minor, align 8
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %37 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hafb586f3e80f4c52E"(%"std::str::Split<char>"* align 8 dereferenceable(72) %pieces)
          to label %bb25 unwind label %cleanup3

bb25:                                             ; preds = %bb24
  store { i8*, i64 } %37, { i8*, i64 }* %_38, align 8
  %38 = bitcast { i8*, i64 }* %_38 to {}**
  %39 = load {}*, {}** %38, align 8
  %40 = icmp eq {}* %39, null
  %_40 = select i1 %40, i64 0, i64 1
  switch i64 %_40, label %bb27 [
    i64 0, label %bb26
    i64 1, label %bb28
  ]

bb26:                                             ; preds = %bb25
  %41 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 1
  store i8 2, i8* %41, align 4
  br label %bb43

bb27:                                             ; preds = %bb25
  unreachable

bb28:                                             ; preds = %bb25
  %42 = bitcast { i8*, i64 }* %_38 to { [0 x i8]*, i64 }*
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 0
  %e.04 = load [0 x i8]*, [0 x i8]** %43, align 8, !nonnull !11
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 1
  %e.15 = load i64, i64* %44, align 8
; invoke core::str::<impl str>::split
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h17c260f0a3fde4a5E"(%"std::str::Split<char>"* noalias nocapture sret dereferenceable(72) %_35, [0 x i8]* mpk_immut noalias nonnull readonly align 1 %e.04, i64 %e.15, i32 45)
          to label %bb29 unwind label %cleanup3

bb29:                                             ; preds = %bb28
; invoke core::iter::traits::iterator::Iterator::nth
  %45 = invoke { i8*, i64 } @_ZN4core4iter6traits8iterator8Iterator3nth17hb705b75ad30588e1E(%"std::str::Split<char>"* align 8 dereferenceable(72) %_35, i64 1)
          to label %bb30 unwind label %cleanup3

bb30:                                             ; preds = %bb29
  %nightly_raw.0 = extractvalue { i8*, i64 } %45, 0
  %nightly_raw.1 = extractvalue { i8*, i64 } %45, 1
; invoke core::option::Option<T>::map
  %_43 = invoke i8 @"_ZN4core6option15Option$LT$T$GT$3map17hd4790bd875aaa10dE"(i8* mpk_immut noalias readonly align 1 %nightly_raw.0, i64 %nightly_raw.1)
          to label %bb31 unwind label %cleanup3, !range !24

bb31:                                             ; preds = %bb30
; invoke core::option::Option<T>::unwrap_or
  %nightly = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17ha56d0d38303c320dE"(i8 %_43, i1 zeroext false)
          to label %bb32 unwind label %cleanup3

bb32:                                             ; preds = %bb31
  %46 = bitcast { i8*, i64 }* %minor to {}**
  %47 = load {}*, {}** %46, align 8
  %48 = icmp eq {}* %47, null
  %_51 = select i1 %48, i64 0, i64 1
  switch i64 %_51, label %bb34 [
    i64 0, label %bb33
    i64 1, label %bb35
  ]

bb33:                                             ; preds = %bb32
  %49 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 1
  store i8 2, i8* %49, align 4
  br label %bb42

bb34:                                             ; preds = %bb32
  unreachable

bb35:                                             ; preds = %bb32
  %50 = bitcast { i8*, i64 }* %minor to { [0 x i8]*, i64 }*
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %50, i32 0, i32 0
  %e.06 = load [0 x i8]*, [0 x i8]** %51, align 8, !nonnull !11
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %50, i32 0, i32 1
  %e.17 = load i64, i64* %52, align 8
; invoke core::str::<impl str>::parse
  %53 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h1b26b041629305f9E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %e.06, i64 %e.17)
          to label %bb36 unwind label %cleanup3

bb36:                                             ; preds = %bb35
  store i64 %53, i64* %0, align 8
  %54 = bitcast %"std::result::Result<u32, std::num::ParseIntError>"* %_48 to i8*
  %55 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 8 %55, i64 8, i1 false)
  %56 = bitcast %"std::result::Result<u32, std::num::ParseIntError>"* %_48 to i64*
  %57 = load i64, i64* %56, align 4
; invoke core::result::Result<T,E>::ok
  %58 = invoke { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h16fb6680afe4f8e1E"(i64 %57)
          to label %bb37 unwind label %cleanup3

bb37:                                             ; preds = %bb36
  store { i32, i32 } %58, { i32, i32 }* %_47, align 4
  %59 = bitcast { i32, i32 }* %_47 to i32*
  %60 = load i32, i32* %59, align 4, !range !80
  %_53 = zext i32 %60 to i64
  switch i64 %_53, label %bb39 [
    i64 0, label %bb38
    i64 1, label %bb40
  ]

bb38:                                             ; preds = %bb37
  %61 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 1
  store i8 2, i8* %61, align 4
  br label %bb42

bb39:                                             ; preds = %bb37
  unreachable

bb40:                                             ; preds = %bb37
  %62 = bitcast { i32, i32 }* %_47 to %"std::option::Option<u32>::Some"*
  %63 = getelementptr inbounds %"std::option::Option<u32>::Some", %"std::option::Option<u32>::Some"* %62, i32 0, i32 1
  %e8 = load i32, i32* %63, align 4
  %64 = bitcast { i32, i8 }* %_55 to i32*
  store i32 %e8, i32* %64, align 4
  %65 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %_55, i32 0, i32 1
  %66 = zext i1 %nightly to i8
  store i8 %66, i8* %65, align 4
  %67 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %_55, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %_55, i32 0, i32 1
  %70 = load i8, i8* %69, align 4, !range !5
  %71 = trunc i8 %70 to i1
  %72 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 0
  store i32 %68, i32* %72, align 4
  %73 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 1
  %74 = zext i1 %71 to i8
  store i8 %74, i8* %73, align 4
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17ha20829f1fc27472eE(%"std::process::Output"* mpk_unsafe %output)
          to label %bb41 unwind label %cleanup

bb41:                                             ; preds = %bb40
  store i8 0, i8* %_59, align 1
  br label %bb49

bb42:                                             ; preds = %bb33, %bb38
  br label %bb43

bb43:                                             ; preds = %bb26, %bb42
  br label %bb44

bb44:                                             ; preds = %bb43, %bb23
  br label %bb45

bb45:                                             ; preds = %bb16, %bb44
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17ha20829f1fc27472eE(%"std::process::Output"* mpk_unsafe %output)
          to label %bb47 unwind label %cleanup

bb46:                                             ; preds = %bb9
  br label %bb47

bb47:                                             ; preds = %bb46, %bb45
  br label %bb48

bb48:                                             ; preds = %bb2, %bb47
  store i8 0, i8* %_59, align 1
  br label %bb49

bb49:                                             ; preds = %bb48, %bb41
  %75 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 1
  %78 = load i8, i8* %77, align 4, !range !24
  %79 = insertvalue { i32, i8 } undef, i32 %76, 0
  %80 = insertvalue { i32, i8 } %79, i8 %78, 1
  ret { i32, i8 } %80

bb50:                                             ; preds = %cleanup3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17ha20829f1fc27472eE(%"std::process::Output"* mpk_unsafe %output) #14
  br label %bb54

bb51:                                             ; preds = %cleanup2
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h36ecb83222f60ff1E(%"std::process::Command"* mpk_unsafe %_11) #14
  br label %bb54

bb52:                                             ; preds = %bb53, %bb54
  %81 = bitcast { i8*, i32 }* %1 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = insertvalue { i8*, i32 } undef, i8* %82, 0
  %86 = insertvalue { i8*, i32 } %85, i32 %84, 1
  resume { i8*, i32 } %86

bb53:                                             ; preds = %bb54
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h49c15d43aee983b9E(%"std::ffi::OsString"* mpk_unsafe %rustc) #14
  br label %bb52

bb54:                                             ; preds = %bb50, %bb51, %cleanup
  %87 = load i8, i8* %_59, align 1, !range !5
  %88 = trunc i8 %87 to i1
  br i1 %88, label %bb53, label %bb52

cleanup:                                          ; preds = %bb9, %bb45, %bb40, %bb4
  %89 = landingpad { i8*, i32 }
          cleanup
  %90 = extractvalue { i8*, i32 } %89, 0
  %91 = extractvalue { i8*, i32 } %89, 1
  %92 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %90, i8** %92, align 8
  %93 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %91, i32* %93, align 8
  br label %bb54

cleanup2:                                         ; preds = %bb7, %bb6, %bb5
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  %96 = extractvalue { i8*, i32 } %94, 1
  %97 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %95, i8** %97, align 8
  %98 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %96, i32* %98, align 8
  br label %bb51

cleanup3:                                         ; preds = %bb36, %bb35, %bb31, %bb30, %bb29, %bb28, %bb24, %bb22, %bb20, %bb19, %bb18, %bb14, %bb13, %bb12, %bb11
  %99 = landingpad { i8*, i32 }
          cleanup
  %100 = extractvalue { i8*, i32 } %99, 0
  %101 = extractvalue { i8*, i32 } %99, 1
  %102 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %100, i8** %102, align 8
  %103 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %101, i32* %103, align 8
  br label %bb50
}

; build_script_build::rustc_minor_nightly::{{closure}}
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN18build_script_build19rustc_minor_nightly28_$u7b$$u7b$closure$u7d$$u7d$17hdf0a61d4a40b81ceE"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %raw.0, i64 %raw.1) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
; call core::str::<impl str>::starts_with
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h60627922999eaaf8E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %raw.0, i64 %raw.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [3 x i8] }>* @alloc214 to [0 x i8]*), i64 3)
  br label %bb5

bb1:                                              ; preds = %bb6, %bb5
  store i8 1, i8* %0, align 1
  br label %bb4

bb2:                                              ; preds = %bb6
  store i8 0, i8* %0, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
; call core::str::<impl str>::starts_with
  %_5 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h60627922999eaaf8E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %raw.0, i64 %raw.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [7 x i8] }>* @alloc215 to [0 x i8]*), i64 7)
  br label %bb6

bb4:                                              ; preds = %bb2, %bb1
  %1 = load i8, i8* %0, align 1, !range !5
  %2 = trunc i8 %1 to i1
  ret i1 %2

bb5:                                              ; preds = %start
  br i1 %_3, label %bb1, label %bb3

bb6:                                              ; preds = %bb3
  br i1 %_5, label %bb1, label %bb2
}

; build_script_build::which_freebsd
; Function Attrs: nonlazybind uwtable
define internal { i32, i32 } @_ZN18build_script_build13which_freebsd17h4ad10e5dd6a79709E() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_46 = alloca i8, align 1
  %_45 = alloca i8, align 1
  %_44 = alloca i8, align 1
  %_19 = alloca %"std::string::String"*, align 8, !MPK-SmartPointer !3
  %_18 = alloca %"std::option::Option<std::string::String>", align 8
  %stdout2 = alloca %"std::string::String", align 8, !MPK-SmartPointer !3
  %_14 = alloca %"std::vec::Vec<u8>", align 8, !MPK-SmartPointer !3
  %_13 = alloca %"std::result::Result<std::string::String, std::string::FromUtf8Error>", align 8
  %stdout = alloca %"std::option::Option<std::string::String>", align 8
  %_8 = alloca %"std::option::Option<std::process::Output>", align 8
  %output1 = alloca %"std::process::Output", align 8, !MPK-SmartPointer !3
  %_4 = alloca %"std::process::Command", align 8
  %_2 = alloca %"std::result::Result<std::process::Output, std::io::Error>", align 8
  %output = alloca %"std::option::Option<std::process::Output>", align 8
  %1 = alloca { i32, i32 }, align 4
  store i8 0, i8* %_46, align 1
  store i8 0, i8* %_45, align 1
  store i8 0, i8* %_44, align 1
; call std::process::Command::new
  call void @_ZN3std7process7Command3new17he848548e12c3b5c1E(%"std::process::Command"* noalias nocapture sret dereferenceable(184) %_4, [0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [15 x i8] }>* @alloc216 to [0 x i8]*), i64 15)
  br label %bb1

bb1:                                              ; preds = %start
; invoke std::process::Command::output
  invoke void @_ZN3std7process7Command6output17h69ff4fec85082880E(%"std::result::Result<std::process::Output, std::io::Error>"* noalias nocapture sret dereferenceable(64) %_2, %"std::process::Command"* align 8 dereferenceable(184) %_4)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::result::Result<T,E>::ok
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h7e8f17daf18c0399E"(%"std::option::Option<std::process::Output>"* noalias nocapture sret dereferenceable(56) %output, %"std::result::Result<std::process::Output, std::io::Error>"* noalias nocapture dereferenceable(64) %_2)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i8 1, i8* %_45, align 1
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17h36ecb83222f60ff1E(%"std::process::Command"* mpk_unsafe %_4)
          to label %bb4 unwind label %cleanup3

bb4:                                              ; preds = %bb3
; invoke core::option::Option<T>::is_none
  %_5 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h3c81b3c0a2a10991E"(%"std::option::Option<std::process::Output>"* mpk_immut noalias readonly align 8 dereferenceable(56) %output)
          to label %bb5 unwind label %cleanup3

bb5:                                              ; preds = %bb4
  br i1 %_5, label %bb7, label %bb6

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_45, align 1
  %2 = bitcast %"std::option::Option<std::process::Output>"* %_8 to i8*
  %3 = bitcast %"std::option::Option<std::process::Output>"* %output to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 56, i1 false)
; invoke core::option::Option<T>::unwrap
  invoke void @"_ZN4core6option15Option$LT$T$GT$6unwrap17he952d3f44938620aE"(%"std::process::Output"* noalias nocapture sret dereferenceable(56) %output1, %"std::option::Option<std::process::Output>"* noalias nocapture dereferenceable(56) %_8, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc218 to %"std::panic::Location"*))
          to label %bb8 unwind label %cleanup3

bb7:                                              ; preds = %bb5
  %4 = bitcast { i32, i32 }* %1 to i32*
  store i32 0, i32* %4, align 4
  br label %bb49

bb8:                                              ; preds = %bb6
  store i8 1, i8* %_44, align 1
  %_11 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output1, i32 0, i32 5
; invoke std::process::ExitStatus::success
  %_10 = invoke zeroext i1 @_ZN3std7process10ExitStatus7success17h457e4c3af526a617E(i32* mpk_immut noalias readonly align 4 dereferenceable(4) %_11)
          to label %bb9 unwind label %cleanup4

bb9:                                              ; preds = %bb8
  %_9 = xor i1 %_10, true
  br i1 %_9, label %bb11, label %bb10

bb10:                                             ; preds = %bb9
  store i8 0, i8* %_44, align 1
  %5 = bitcast %"std::process::Output"* %output1 to %"std::vec::Vec<u8>"*, !MPK-SmartPointer !3
  %6 = bitcast %"std::vec::Vec<u8>"* %_14 to i8*
  %7 = bitcast %"std::vec::Vec<u8>"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  store i64 3211581397446357852, i64* @METASAFE_TYPE_ID, align 8
; invoke alloc::string::String::from_utf8
  invoke void @_ZN5alloc6string6String9from_utf817h89386385f0824e8bE(%"std::result::Result<std::string::String, std::string::FromUtf8Error>"* noalias nocapture sret dereferenceable(48) %_13, %"std::vec::Vec<u8>"* noalias nocapture dereferenceable(24) %_14)
          to label %bb12 unwind label %cleanup4

bb11:                                             ; preds = %bb9
  %8 = bitcast { i32, i32 }* %1 to i32*
  store i32 0, i32* %8, align 4
  br label %bb47

bb12:                                             ; preds = %bb10
; invoke core::result::Result<T,E>::ok
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17he3f22ca44f0bf45fE"(%"std::option::Option<std::string::String>"* noalias nocapture sret dereferenceable(24) %stdout, %"std::result::Result<std::string::String, std::string::FromUtf8Error>"* noalias nocapture dereferenceable(48) %_13)
          to label %bb13 unwind label %cleanup4

bb13:                                             ; preds = %bb12
  store i8 1, i8* %_46, align 1
; invoke core::option::Option<T>::is_none
  %_15 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h56a3e545de2dc508E"(%"std::option::Option<std::string::String>"* mpk_immut noalias readonly align 8 dereferenceable(24) %stdout)
          to label %bb14 unwind label %cleanup5

bb14:                                             ; preds = %bb13
  br i1 %_15, label %bb16, label %bb15

bb15:                                             ; preds = %bb14
  store i8 0, i8* %_46, align 1
  %9 = bitcast %"std::option::Option<std::string::String>"* %_18 to i8*
  %10 = bitcast %"std::option::Option<std::string::String>"* %stdout to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
; invoke core::option::Option<T>::unwrap
  invoke void @"_ZN4core6option15Option$LT$T$GT$6unwrap17h9940e3212041b0a7E"(%"std::string::String"* noalias nocapture sret dereferenceable(24) %stdout2, %"std::option::Option<std::string::String>"* noalias nocapture dereferenceable(24) %_18, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc220 to %"std::panic::Location"*))
          to label %bb17 unwind label %cleanup5

bb16:                                             ; preds = %bb14
  %11 = bitcast { i32, i32 }* %1 to i32*
  store i32 0, i32* %11, align 4
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17h17f93f402ea08f25E(%"std::option::Option<std::string::String>"* mpk_unsafe %stdout)
          to label %bb36 unwind label %cleanup4

bb17:                                             ; preds = %bb15
  store %"std::string::String"* %stdout2, %"std::string::String"** %_19, align 8
  %_25 = load %"std::string::String"*, %"std::string::String"** %_19, align 8, !nonnull !11
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %12 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h1eb7858590664d38E"(%"std::string::String"* mpk_immut noalias readonly align 8 dereferenceable(24) %_25)
          to label %bb18 unwind label %cleanup7

bb18:                                             ; preds = %bb17
  %_24.0 = extractvalue { [0 x i8]*, i64 } %12, 0
  %_24.1 = extractvalue { [0 x i8]*, i64 } %12, 1
; invoke core::str::<impl str>::starts_with
  %_22 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h60627922999eaaf8E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_24.0, i64 %_24.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [2 x i8] }>* @alloc221 to [0 x i8]*), i64 2)
          to label %bb19 unwind label %cleanup7

bb19:                                             ; preds = %bb18
  br i1 %_22, label %bb20, label %bb21

bb20:                                             ; preds = %bb19
  %s = load %"std::string::String"*, %"std::string::String"** %_19, align 8, !nonnull !11
  %13 = bitcast { i32, i32 }* %1 to %"std::option::Option<i32>::Some"*
  %14 = getelementptr inbounds %"std::option::Option<i32>::Some", %"std::option::Option<i32>::Some"* %13, i32 0, i32 1
  store i32 10, i32* %14, align 4
  %15 = bitcast { i32, i32 }* %1 to i32*
  store i32 1, i32* %15, align 4
  br label %bb34

bb21:                                             ; preds = %bb19
  %_31 = load %"std::string::String"*, %"std::string::String"** %_19, align 8, !nonnull !11
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %16 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h1eb7858590664d38E"(%"std::string::String"* mpk_immut noalias readonly align 8 dereferenceable(24) %_31)
          to label %bb22 unwind label %cleanup7

bb22:                                             ; preds = %bb21
  %_30.0 = extractvalue { [0 x i8]*, i64 } %16, 0
  %_30.1 = extractvalue { [0 x i8]*, i64 } %16, 1
; invoke core::str::<impl str>::starts_with
  %_28 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h60627922999eaaf8E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_30.0, i64 %_30.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [2 x i8] }>* @alloc222 to [0 x i8]*), i64 2)
          to label %bb23 unwind label %cleanup7

bb23:                                             ; preds = %bb22
  br i1 %_28, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %s8 = load %"std::string::String"*, %"std::string::String"** %_19, align 8, !nonnull !11
  %17 = bitcast { i32, i32 }* %1 to %"std::option::Option<i32>::Some"*
  %18 = getelementptr inbounds %"std::option::Option<i32>::Some", %"std::option::Option<i32>::Some"* %17, i32 0, i32 1
  store i32 11, i32* %18, align 4
  %19 = bitcast { i32, i32 }* %1 to i32*
  store i32 1, i32* %19, align 4
  br label %bb34

bb25:                                             ; preds = %bb23
  %_37 = load %"std::string::String"*, %"std::string::String"** %_19, align 8, !nonnull !11
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %20 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h1eb7858590664d38E"(%"std::string::String"* mpk_immut noalias readonly align 8 dereferenceable(24) %_37)
          to label %bb26 unwind label %cleanup7

bb26:                                             ; preds = %bb25
  %_36.0 = extractvalue { [0 x i8]*, i64 } %20, 0
  %_36.1 = extractvalue { [0 x i8]*, i64 } %20, 1
; invoke core::str::<impl str>::starts_with
  %_34 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h60627922999eaaf8E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_36.0, i64 %_36.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [2 x i8] }>* @alloc223 to [0 x i8]*), i64 2)
          to label %bb27 unwind label %cleanup7

bb27:                                             ; preds = %bb26
  br i1 %_34, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %s9 = load %"std::string::String"*, %"std::string::String"** %_19, align 8, !nonnull !11
  %21 = bitcast { i32, i32 }* %1 to %"std::option::Option<i32>::Some"*
  %22 = getelementptr inbounds %"std::option::Option<i32>::Some", %"std::option::Option<i32>::Some"* %21, i32 0, i32 1
  store i32 12, i32* %22, align 4
  %23 = bitcast { i32, i32 }* %1 to i32*
  store i32 1, i32* %23, align 4
  br label %bb34

bb29:                                             ; preds = %bb27
  %_43 = load %"std::string::String"*, %"std::string::String"** %_19, align 8, !nonnull !11
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %24 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h1eb7858590664d38E"(%"std::string::String"* mpk_immut noalias readonly align 8 dereferenceable(24) %_43)
          to label %bb30 unwind label %cleanup7

bb30:                                             ; preds = %bb29
  %_42.0 = extractvalue { [0 x i8]*, i64 } %24, 0
  %_42.1 = extractvalue { [0 x i8]*, i64 } %24, 1
; invoke core::str::<impl str>::starts_with
  %_40 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h60627922999eaaf8E"([0 x i8]* mpk_immut noalias nonnull readonly align 1 %_42.0, i64 %_42.1, [0 x i8]* mpk_immut noalias nonnull readonly align 1 bitcast (<{ [2 x i8] }>* @alloc224 to [0 x i8]*), i64 2)
          to label %bb31 unwind label %cleanup7

bb31:                                             ; preds = %bb30
  br i1 %_40, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %s10 = load %"std::string::String"*, %"std::string::String"** %_19, align 8, !nonnull !11
  %25 = bitcast { i32, i32 }* %1 to %"std::option::Option<i32>::Some"*
  %26 = getelementptr inbounds %"std::option::Option<i32>::Some", %"std::option::Option<i32>::Some"* %25, i32 0, i32 1
  store i32 13, i32* %26, align 4
  %27 = bitcast { i32, i32 }* %1 to i32*
  store i32 1, i32* %27, align 4
  br label %bb34

bb33:                                             ; preds = %bb31
  %28 = bitcast { i32, i32 }* %1 to i32*
  store i32 0, i32* %28, align 4
  br label %bb34

bb34:                                             ; preds = %bb33, %bb32, %bb28, %bb24, %bb20
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17hfe01a2209d12e44fE(%"std::string::String"* mpk_unsafe %stdout2)
          to label %bb35 unwind label %cleanup5

bb35:                                             ; preds = %bb34
  store i8 0, i8* %_46, align 1
  %29 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output1, i32 0, i32 3, !MPK-SmartPointer !3
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17h0592225f2e5a8517E(%"std::vec::Vec<u8>"* mpk_unsafe %29)
          to label %bb42 unwind label %cleanup3

bb36:                                             ; preds = %bb16
  store i8 0, i8* %_46, align 1
  br label %bb47

bb37:                                             ; preds = %bb48, %bb49
  store i8 0, i8* %_45, align 1
  br label %bb38

bb38:                                             ; preds = %bb42, %bb37
  %30 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 0
  %31 = load i32, i32* %30, align 4, !range !80
  %32 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = insertvalue { i32, i32 } undef, i32 %31, 0
  %35 = insertvalue { i32, i32 } %34, i32 %33, 1
  ret { i32, i32 } %35

bb39:                                             ; preds = %cleanup7
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17hfe01a2209d12e44fE(%"std::string::String"* mpk_unsafe %stdout2) #14
  br label %bb51

bb40:                                             ; preds = %cleanup
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h36ecb83222f60ff1E(%"std::process::Command"* mpk_unsafe %_4) #14
  br label %bb41

bb41:                                             ; preds = %bb55, %bb56, %bb40
  %36 = bitcast { i8*, i32 }* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  resume { i8*, i32 } %41

bb42:                                             ; preds = %bb35
  store i8 0, i8* %_44, align 1
  store i8 0, i8* %_45, align 1
  br label %bb38

bb43:                                             ; preds = %bb45
  store i8 0, i8* %_44, align 1
  br label %bb49

bb44:                                             ; preds = %cleanup6
  %42 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output1, i32 0, i32 3, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h0592225f2e5a8517E(%"std::vec::Vec<u8>"* mpk_unsafe %42) #14
  br label %bb56

bb45:                                             ; preds = %bb46, %bb47
  %43 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output1, i32 0, i32 3, !MPK-SmartPointer !3
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17h0592225f2e5a8517E(%"std::vec::Vec<u8>"* mpk_unsafe %43)
          to label %bb43 unwind label %cleanup3

bb46:                                             ; preds = %bb47
  %44 = bitcast %"std::process::Output"* %output1 to %"std::vec::Vec<u8>"*, !MPK-SmartPointer !3
; invoke core::ptr::drop_in_place
  invoke void @_ZN4core3ptr13drop_in_place17h0592225f2e5a8517E(%"std::vec::Vec<u8>"* mpk_unsafe %44)
          to label %bb45 unwind label %cleanup6

bb47:                                             ; preds = %bb36, %bb11
  %45 = load i8, i8* %_44, align 1, !range !5
  %46 = trunc i8 %45 to i1
  br i1 %46, label %bb46, label %bb45

bb48:                                             ; preds = %bb49
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h51be0da9827be877E(%"std::option::Option<std::process::Output>"* mpk_unsafe %output)
  br label %bb37

bb49:                                             ; preds = %bb43, %bb7
  %47 = load i8, i8* %_45, align 1, !range !5
  %48 = trunc i8 %47 to i1
  br i1 %48, label %bb48, label %bb37

bb50:                                             ; preds = %bb51
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h17f93f402ea08f25E(%"std::option::Option<std::string::String>"* mpk_unsafe %stdout) #14
  br label %bb54

bb51:                                             ; preds = %bb39, %cleanup5
  %49 = load i8, i8* %_46, align 1, !range !5
  %50 = trunc i8 %49 to i1
  br i1 %50, label %bb50, label %bb54

bb52:                                             ; preds = %bb53, %bb54
  %51 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output1, i32 0, i32 3, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h0592225f2e5a8517E(%"std::vec::Vec<u8>"* mpk_unsafe %51) #14
  br label %bb56

bb53:                                             ; preds = %bb54
  %52 = bitcast %"std::process::Output"* %output1 to %"std::vec::Vec<u8>"*, !MPK-SmartPointer !3
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h0592225f2e5a8517E(%"std::vec::Vec<u8>"* mpk_unsafe %52) #14
  br label %bb52

bb54:                                             ; preds = %bb50, %bb51, %cleanup4
  %53 = load i8, i8* %_44, align 1, !range !5
  %54 = trunc i8 %53 to i1
  br i1 %54, label %bb53, label %bb52

bb55:                                             ; preds = %bb56
; call core::ptr::drop_in_place
  call void @_ZN4core3ptr13drop_in_place17h51be0da9827be877E(%"std::option::Option<std::process::Output>"* mpk_unsafe %output) #14
  br label %bb41

bb56:                                             ; preds = %bb52, %bb44, %cleanup3
  %55 = load i8, i8* %_45, align 1, !range !5
  %56 = trunc i8 %55 to i1
  br i1 %56, label %bb55, label %bb41

cleanup:                                          ; preds = %bb2, %bb1
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  %59 = extractvalue { i8*, i32 } %57, 1
  %60 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %58, i8** %60, align 8
  %61 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %59, i32* %61, align 8
  br label %bb40

cleanup3:                                         ; preds = %bb35, %bb45, %bb6, %bb4, %bb3
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  %64 = extractvalue { i8*, i32 } %62, 1
  %65 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %63, i8** %65, align 8
  %66 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %64, i32* %66, align 8
  br label %bb56

cleanup4:                                         ; preds = %bb16, %bb12, %bb10, %bb8
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = extractvalue { i8*, i32 } %67, 0
  %69 = extractvalue { i8*, i32 } %67, 1
  %70 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %68, i8** %70, align 8
  %71 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %69, i32* %71, align 8
  br label %bb54

cleanup5:                                         ; preds = %bb34, %bb15, %bb13
  %72 = landingpad { i8*, i32 }
          cleanup
  %73 = extractvalue { i8*, i32 } %72, 0
  %74 = extractvalue { i8*, i32 } %72, 1
  %75 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %73, i8** %75, align 8
  %76 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %74, i32* %76, align 8
  br label %bb51

cleanup6:                                         ; preds = %bb46
  %77 = landingpad { i8*, i32 }
          cleanup
  %78 = extractvalue { i8*, i32 } %77, 0
  %79 = extractvalue { i8*, i32 } %77, 1
  %80 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %78, i8** %80, align 8
  %81 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %79, i32* %81, align 8
  br label %bb44

cleanup7:                                         ; preds = %bb30, %bb29, %bb26, %bb25, %bb22, %bb21, %bb18, %bb17
  %82 = landingpad { i8*, i32 }
          cleanup
  %83 = extractvalue { i8*, i32 } %82, 0
  %84 = extractvalue { i8*, i32 } %82, 1
  %85 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %83, i8** %85, align 8
  %86 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %84, i32* %86, align 8
  br label %bb39
}

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17hff3773a512c2a4b8E(i64, i64, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24)) unnamed_addr #4

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17h63be533cc6b8936fE(i64, i64, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24)) unnamed_addr #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: mpk_extern nounwind nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"* mpk_unsafe, %"unwind::libunwind::_Unwind_Context"* mpk_unsafe) unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; std::rt::lang_start_internal
; Function Attrs: nonlazybind uwtable
declare i64 @_ZN3std2rt19lang_start_internal17h2677a686eee71786E({}* mpk_immut nonnull align 1, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24), i64, i8** mpk_immut) unnamed_addr #1

; std::env::_var
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3env4_var17hf3cab80e3a018b1aE(%"std::result::Result<std::string::String, std::env::VarError>"* noalias nocapture sret dereferenceable(32), %"std::ffi::OsStr"* mpk_immut noalias nonnull readonly align 1, i64) unnamed_addr #1

; std::env::_var_os
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3env7_var_os17h7a041bd284a5ba2dE(%"std::option::Option<std::ffi::OsString>"* noalias nocapture sret dereferenceable(24), %"std::ffi::OsStr"* mpk_immut noalias nonnull readonly align 1, i64) unnamed_addr #1

; std::sys::unix::process::process_common::Command::arg
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix7process14process_common7Command3arg17hd2f046177e388b39E(%"std::sys::unix::process::process_common::Command"* align 8 dereferenceable(184), %"std::ffi::OsStr"* mpk_immut noalias nonnull readonly align 1, i64) unnamed_addr #1

; std::sys::unix::process::process_common::Command::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix7process14process_common7Command3new17h0d78b572904cac1bE(%"std::sys::unix::process::process_common::Command"* noalias nocapture sret dereferenceable(184), %"std::ffi::OsStr"* mpk_immut noalias nonnull readonly align 1, i64) unnamed_addr #1

; core::panic::Location::caller
; Function Attrs: nonlazybind uwtable
declare mpk_immut align 8 dereferenceable(24) %"std::panic::Location"* @_ZN4core5panic8Location6caller17hdc67367c0d053777E(%"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24)) unnamed_addr #1

; std::panicking::rust_panic_with_hook
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN3std9panicking20rust_panic_with_hook17he34aa81080741830E({}* nonnull align 1, [3 x i64]* mpk_immut noalias readonly align 8 dereferenceable(24), i64* mpk_immut noalias readonly align 8 dereferenceable_or_null(48), %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24)) unnamed_addr #5

; <str as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h8d32920bf513d1aeE"([0 x i8]* mpk_immut noalias nonnull readonly align 1, i64, %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <alloc::collections::btree::mem::replace::PanicGuard as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17h198c1cd303f9370fE"(%"alloc::collections::btree::mem::replace::PanicGuard"* nonnull align 1) unnamed_addr #1

; <std::sys::unix::fd::FileDesc as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN70_$LT$std..sys..unix..fd..FileDesc$u20$as$u20$core..ops..drop..Drop$GT$4drop17hdec7a096768d2599E"(i32* align 4 dereferenceable(4)) unnamed_addr #1

; core::num::<impl core::str::traits::FromStr for u32>::from_str
; Function Attrs: nonlazybind uwtable
declare i64 @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$u32$GT$8from_str17h9ed30d22c2318823E"([0 x i8]* mpk_immut noalias nonnull readonly align 1, i64) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h0f57e3373191c50eE"(i64* mpk_immut noalias readonly align 8 dereferenceable(8), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h4773017a326a508bE"(i32* mpk_immut noalias readonly align 4 dereferenceable(4), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h08461824ca4df3e0E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48), %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; core::slice::memchr::memchr_general_case
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN4core5slice6memchr19memchr_general_case17hb178654d3738815eE(i8, [0 x i8]* mpk_immut noalias nonnull readonly align 1, i64) unnamed_addr #1

; core::option::expect_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6option13expect_failed17h0fe2e7cc4c6d4f13E([0 x i8]* mpk_immut noalias nonnull readonly align 1, i64, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24)) unnamed_addr #4

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hc14ab8d72efd34afE([0 x i8]* mpk_immut noalias nonnull readonly align 1, i64, %"std::panic::Location"* mpk_immut noalias readonly align 8 dereferenceable(24)) unnamed_addr #4

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

; Function Attrs: nounwind nonlazybind uwtable
declare mpk_unsafe i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #11

; alloc::alloc::handle_alloc_error
; Function Attrs: noreturn nounwind nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h988aff758f9fc198E(i64, i64) unnamed_addr #12

; Function Attrs: nounwind nonlazybind uwtable
declare mpk_unsafe noalias i8* @__rust_alloc(i64, i64) unnamed_addr #11

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8* mpk_unsafe, i64, i64) unnamed_addr #11

; core::str::converts::from_utf8
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3str8converts9from_utf817h5fef343fb410e7cdE(%"std::result::Result<&str, std::str::Utf8Error>"* noalias nocapture sret dereferenceable(24), [0 x i8]* mpk_immut noalias nonnull readonly align 1, i64) unnamed_addr #1

; Function Attrs: mpk_extern nounwind nonlazybind uwtable
declare i32 @memcmp(i8* mpk_immut mpk_unsafe, i8* mpk_immut mpk_unsafe, i64) unnamed_addr #7

; std::process::abort
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN3std7process5abort17hf5ea6d4bc4cedb4fE() unnamed_addr #5

; std::io::stdio::_print
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std2io5stdio6_print17h17f61b0c82890e70E(%"std::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #1

; std::process::Command::output
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std7process7Command6output17h69ff4fec85082880E(%"std::result::Result<std::process::Output, std::io::Error>"* noalias nocapture sret dereferenceable(64), %"std::process::Command"* align 8 dereferenceable(184)) unnamed_addr #1

; std::process::ExitStatus::success
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN3std7process10ExitStatus7success17h457e4c3af526a617E(i32* mpk_immut noalias readonly align 4 dereferenceable(4)) unnamed_addr #1

; Function Attrs: mpk_extern nonlazybind
define i32 @main(i32 %0, i8** %1) unnamed_addr #13 {
top:
  %2 = sext i32 %0 to i64
; call std::rt::lang_start
  %3 = call i64 @_ZN3std2rt10lang_start17ha1ada3f1c945e901E(void ()* @_ZN18build_script_build4main17h70667a4c4c7ec06fE, i64 %2, i8** %1)
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #5 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { mpk_extern nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind willreturn }
attributes #10 = { argmemonly nounwind willreturn writeonly }
attributes #11 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #12 = { noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #13 = { mpk_extern nonlazybind "target-cpu"="x86-64" }
attributes #14 = { noinline }

!llvm.module.flags = !{!0, !1, !2}

!0 = !{i32 7, !"PIC Level", i32 2}
!1 = !{i32 7, !"PIE Level", i32 2}
!2 = !{i32 2, !"RtLibUseGOT", i32 1}
!3 = !{!"Is smart pointer"}
!4 = !{!"Is Unsafe Instr"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h45025a10b4e3ea24E: argument 0"}
!8 = distinct !{!8, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h45025a10b4e3ea24E"}
!9 = !{!10}
!10 = distinct !{!10, !8, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h45025a10b4e3ea24E: %value"}
!11 = !{}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN5alloc11collections5btree16unwrap_unchecked17h1acf3c520d5dbfd3E: argument 0"}
!14 = distinct !{!14, !"_ZN5alloc11collections5btree16unwrap_unchecked17h1acf3c520d5dbfd3E"}
!15 = !{!16}
!16 = distinct !{!16, !14, !"_ZN5alloc11collections5btree16unwrap_unchecked17h1acf3c520d5dbfd3E: %val"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE: %self.0"}
!19 = distinct !{!19, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE"}
!20 = !{i64 1, i64 0}
!21 = !{i32 0, i32 4}
!22 = !{i64 0, i64 2}
!23 = !{i32 0, i32 5}
!24 = !{i8 0, i8 3}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h10a84e8ec65cf2daE: argument 0"}
!27 = distinct !{!27, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h10a84e8ec65cf2daE"}
!28 = !{!29, !31}
!29 = distinct !{!29, !30, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h128c4154f3b31737E: argument 0"}
!30 = distinct !{!30, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h128c4154f3b31737E"}
!31 = distinct !{!31, !30, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h128c4154f3b31737E: %slot"}
!32 = !{!33}
!33 = distinct !{!33, !27, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h10a84e8ec65cf2daE: %self"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hb67a83cabc6e737cE: argument 0"}
!36 = distinct !{!36, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hb67a83cabc6e737cE"}
!37 = !{!38, !40}
!38 = distinct !{!38, !39, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h8386c22bd800a9d3E: argument 0"}
!39 = distinct !{!39, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h8386c22bd800a9d3E"}
!40 = distinct !{!40, !39, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h8386c22bd800a9d3E: %slot"}
!41 = !{!42}
!42 = distinct !{!42, !36, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hb67a83cabc6e737cE: %self"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h106d2eac20928587E: argument 0"}
!45 = distinct !{!45, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h106d2eac20928587E"}
!46 = !{!47, !49}
!47 = distinct !{!47, !48, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hb337ca2c3486d909E: argument 0"}
!48 = distinct !{!48, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hb337ca2c3486d909E"}
!49 = distinct !{!49, !48, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hb337ca2c3486d909E: %slot"}
!50 = !{!51}
!51 = distinct !{!51, !45, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h106d2eac20928587E: %self"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h99a9f5671c2d71fcE: argument 0"}
!54 = distinct !{!54, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h99a9f5671c2d71fcE"}
!55 = !{!56, !58}
!56 = distinct !{!56, !57, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h774df988695d0640E: argument 0"}
!57 = distinct !{!57, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h774df988695d0640E"}
!58 = distinct !{!58, !57, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h774df988695d0640E: %slot"}
!59 = !{!60}
!60 = distinct !{!60, !54, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h99a9f5671c2d71fcE: %self"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h7764fb87bf5e144eE: argument 0"}
!63 = distinct !{!63, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h7764fb87bf5e144eE"}
!64 = !{!65, !67}
!65 = distinct !{!65, !66, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17heb28abfab08a3b98E: argument 0"}
!66 = distinct !{!66, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17heb28abfab08a3b98E"}
!67 = distinct !{!67, !66, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17heb28abfab08a3b98E: %slot"}
!68 = !{!69}
!69 = distinct !{!69, !63, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h7764fb87bf5e144eE: %self"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE: %self.0"}
!72 = distinct !{!72, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE: %self.0"}
!75 = distinct !{!75, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE"}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE: %self.0"}
!78 = distinct !{!78, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE"}
!79 = !{i32 2710886}
!80 = !{i32 0, i32 2}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE: %self.0"}
!83 = distinct !{!83, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE: %self.0"}
!86 = distinct !{!86, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZN5alloc11collections5btree16unwrap_unchecked17hb80545522e24d1dcE: argument 0"}
!89 = distinct !{!89, !"_ZN5alloc11collections5btree16unwrap_unchecked17hb80545522e24d1dcE"}
!90 = !{!91}
!91 = distinct !{!91, !89, !"_ZN5alloc11collections5btree16unwrap_unchecked17hb80545522e24d1dcE: %val"}
!92 = !{!93, !95}
!93 = distinct !{!93, !94, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h2ecd5a39fa32122bE: %value.0"}
!94 = distinct !{!94, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h2ecd5a39fa32122bE"}
!95 = distinct !{!95, !94, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h2ecd5a39fa32122bE: %value.1"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE: %self.0"}
!98 = distinct !{!98, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE: %self.0"}
!101 = distinct !{!101, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h603ebd04beca0d8cE"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZN5alloc5boxed12Box$LT$T$GT$3new17hcb0f8112088cb658E: %x.0"}
!104 = distinct !{!104, !"_ZN5alloc5boxed12Box$LT$T$GT$3new17hcb0f8112088cb658E"}
